{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"./NativeWebSocketModule","data":{"isAsync":false}},{"name":"../EventEmitter/NativeEventEmitter","data":{"isAsync":false}},{"name":"base64-js","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  var _NativeWebSocketModule = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"./NativeWebSocketModule\"));\n\n  var NativeEventEmitter = _$$_REQUIRE(_dependencyMap[2], \"../EventEmitter/NativeEventEmitter\");\n\n  var base64 = _$$_REQUIRE(_dependencyMap[3], \"base64-js\");\n\n  var originalRCTWebSocketConnect = _NativeWebSocketModule.default.connect;\n  var originalRCTWebSocketSend = _NativeWebSocketModule.default.send;\n  var originalRCTWebSocketSendBinary = _NativeWebSocketModule.default.sendBinary;\n  var originalRCTWebSocketClose = _NativeWebSocketModule.default.close;\n  var eventEmitter;\n  var subscriptions;\n  var closeCallback;\n  var sendCallback;\n  var connectCallback;\n  var onOpenCallback;\n  var onMessageCallback;\n  var onErrorCallback;\n  var onCloseCallback;\n  var _isInterceptorEnabled = false;\n  var WebSocketInterceptor = {\n    setCloseCallback: function setCloseCallback(callback) {\n      closeCallback = callback;\n    },\n    setSendCallback: function setSendCallback(callback) {\n      sendCallback = callback;\n    },\n    setConnectCallback: function setConnectCallback(callback) {\n      connectCallback = callback;\n    },\n    setOnOpenCallback: function setOnOpenCallback(callback) {\n      onOpenCallback = callback;\n    },\n    setOnMessageCallback: function setOnMessageCallback(callback) {\n      onMessageCallback = callback;\n    },\n    setOnErrorCallback: function setOnErrorCallback(callback) {\n      onErrorCallback = callback;\n    },\n    setOnCloseCallback: function setOnCloseCallback(callback) {\n      onCloseCallback = callback;\n    },\n    isInterceptorEnabled: function isInterceptorEnabled() {\n      return _isInterceptorEnabled;\n    },\n    _unregisterEvents: function _unregisterEvents() {\n      subscriptions.forEach(function (e) {\n        return e.remove();\n      });\n      subscriptions = [];\n    },\n    _registerEvents: function _registerEvents() {\n      subscriptions = [eventEmitter.addListener('websocketMessage', function (ev) {\n        if (onMessageCallback) {\n          onMessageCallback(ev.id, ev.type === 'binary' ? WebSocketInterceptor._arrayBufferToString(ev.data) : ev.data);\n        }\n      }), eventEmitter.addListener('websocketOpen', function (ev) {\n        if (onOpenCallback) {\n          onOpenCallback(ev.id);\n        }\n      }), eventEmitter.addListener('websocketClosed', function (ev) {\n        if (onCloseCallback) {\n          onCloseCallback(ev.id, {\n            code: ev.code,\n            reason: ev.reason\n          });\n        }\n      }), eventEmitter.addListener('websocketFailed', function (ev) {\n        if (onErrorCallback) {\n          onErrorCallback(ev.id, {\n            message: ev.message\n          });\n        }\n      })];\n    },\n    enableInterception: function enableInterception() {\n      if (_isInterceptorEnabled) {\n        return;\n      }\n\n      eventEmitter = new NativeEventEmitter(_NativeWebSocketModule.default);\n\n      WebSocketInterceptor._registerEvents();\n\n      _NativeWebSocketModule.default.connect = function (url, protocols, options, socketId) {\n        if (connectCallback) {\n          connectCallback(url, protocols, options, socketId);\n        }\n\n        originalRCTWebSocketConnect.apply(this, arguments);\n      };\n\n      _NativeWebSocketModule.default.send = function (data, socketId) {\n        if (sendCallback) {\n          sendCallback(data, socketId);\n        }\n\n        originalRCTWebSocketSend.apply(this, arguments);\n      };\n\n      _NativeWebSocketModule.default.sendBinary = function (data, socketId) {\n        if (sendCallback) {\n          sendCallback(WebSocketInterceptor._arrayBufferToString(data), socketId);\n        }\n\n        originalRCTWebSocketSendBinary.apply(this, arguments);\n      };\n\n      _NativeWebSocketModule.default.close = function () {\n        if (closeCallback) {\n          if (arguments.length === 3) {\n            closeCallback(arguments[0], arguments[1], arguments[2]);\n          } else {\n            closeCallback(null, null, arguments[0]);\n          }\n        }\n\n        originalRCTWebSocketClose.apply(this, arguments);\n      };\n\n      _isInterceptorEnabled = true;\n    },\n    _arrayBufferToString: function _arrayBufferToString(data) {\n      var value = base64.toByteArray(data).buffer;\n\n      if (value === undefined || value === null) {\n        return '(no value)';\n      }\n\n      if (typeof ArrayBuffer !== 'undefined' && typeof Uint8Array !== 'undefined' && value instanceof ArrayBuffer) {\n        return \"ArrayBuffer {\" + String(Array.from(new Uint8Array(value))) + \"}\";\n      }\n\n      return value;\n    },\n    disableInterception: function disableInterception() {\n      if (!_isInterceptorEnabled) {\n        return;\n      }\n\n      _isInterceptorEnabled = false;\n      _NativeWebSocketModule.default.send = originalRCTWebSocketSend;\n      _NativeWebSocketModule.default.sendBinary = originalRCTWebSocketSendBinary;\n      _NativeWebSocketModule.default.close = originalRCTWebSocketClose;\n      _NativeWebSocketModule.default.connect = originalRCTWebSocketConnect;\n      connectCallback = null;\n      closeCallback = null;\n      sendCallback = null;\n      onOpenCallback = null;\n      onMessageCallback = null;\n      onCloseCallback = null;\n      onErrorCallback = null;\n\n      WebSocketInterceptor._unregisterEvents();\n    }\n  };\n  module.exports = WebSocketInterceptor;\n});","lineCount":163,"map":[[2,0,10,0],[6,0,14,0],[8,0,12,0],[8,6,12,6,"NativeEventEmitter"],[8,24,12,24],[8,27,12,27,"require"],[8,38,12,34],[8,95,12,0],[10,0,16,0],[10,6,16,6,"base64"],[10,12,16,12],[10,15,16,15,"require"],[10,26,16,22],[10,58,16,0],[12,0,18,0],[12,6,18,6,"originalRCTWebSocketConnect"],[12,33,18,33],[12,36,18,36,"NativeWebSocketModule"],[12,67,18,58,"connect"],[12,74,18,0],[13,0,19,0],[13,6,19,6,"originalRCTWebSocketSend"],[13,30,19,30],[13,33,19,33,"NativeWebSocketModule"],[13,64,19,55,"send"],[13,68,19,0],[14,0,20,0],[14,6,20,6,"originalRCTWebSocketSendBinary"],[14,36,20,36],[14,39,20,39,"NativeWebSocketModule"],[14,70,20,61,"sendBinary"],[14,80,20,0],[15,0,21,0],[15,6,21,6,"originalRCTWebSocketClose"],[15,31,21,31],[15,34,21,34,"NativeWebSocketModule"],[15,65,21,56,"close"],[15,70,21,0],[16,0,23,0],[16,6,23,4,"eventEmitter"],[16,18,23,0],[17,0,24,0],[17,6,24,4,"subscriptions"],[17,19,24,0],[18,0,26,0],[18,6,26,4,"closeCallback"],[18,19,26,0],[19,0,27,0],[19,6,27,4,"sendCallback"],[19,18,27,0],[20,0,28,0],[20,6,28,4,"connectCallback"],[20,21,28,0],[21,0,29,0],[21,6,29,4,"onOpenCallback"],[21,20,29,0],[22,0,30,0],[22,6,30,4,"onMessageCallback"],[22,23,30,0],[23,0,31,0],[23,6,31,4,"onErrorCallback"],[23,21,31,0],[24,0,32,0],[24,6,32,4,"onCloseCallback"],[24,21,32,0],[25,0,34,0],[25,6,34,4,"isInterceptorEnabled"],[25,27,34,24],[25,30,34,27],[25,35,34,0],[26,0,42,0],[26,6,42,6,"WebSocketInterceptor"],[26,26,42,26],[26,29,42,29],[27,0,46,2,"setCloseCallback"],[27,4,46,2,"setCloseCallback"],[27,20,42,29],[27,48,46,19,"callback"],[27,56,42,29],[27,58,46,29],[28,0,47,4,"closeCallback"],[28,6,47,4,"closeCallback"],[28,19,47,17],[28,22,47,20,"callback"],[28,30,47,4],[29,0,48,3],[29,5,42,29],[30,0,53,2,"setSendCallback"],[30,4,53,2,"setSendCallback"],[30,19,42,29],[30,46,53,18,"callback"],[30,54,42,29],[30,56,53,28],[31,0,54,4,"sendCallback"],[31,6,54,4,"sendCallback"],[31,18,54,16],[31,21,54,19,"callback"],[31,29,54,4],[32,0,55,3],[32,5,42,29],[33,0,60,2,"setConnectCallback"],[33,4,60,2,"setConnectCallback"],[33,22,42,29],[33,52,60,21,"callback"],[33,60,42,29],[33,62,60,31],[34,0,61,4,"connectCallback"],[34,6,61,4,"connectCallback"],[34,21,61,19],[34,24,61,22,"callback"],[34,32,61,4],[35,0,62,3],[35,5,42,29],[36,0,67,2,"setOnOpenCallback"],[36,4,67,2,"setOnOpenCallback"],[36,21,42,29],[36,50,67,20,"callback"],[36,58,42,29],[36,60,67,30],[37,0,68,4,"onOpenCallback"],[37,6,68,4,"onOpenCallback"],[37,20,68,18],[37,23,68,21,"callback"],[37,31,68,4],[38,0,69,3],[38,5,42,29],[39,0,74,2,"setOnMessageCallback"],[39,4,74,2,"setOnMessageCallback"],[39,24,42,29],[39,56,74,23,"callback"],[39,64,42,29],[39,66,74,33],[40,0,75,4,"onMessageCallback"],[40,6,75,4,"onMessageCallback"],[40,23,75,21],[40,26,75,24,"callback"],[40,34,75,4],[41,0,76,3],[41,5,42,29],[42,0,81,2,"setOnErrorCallback"],[42,4,81,2,"setOnErrorCallback"],[42,22,42,29],[42,52,81,21,"callback"],[42,60,42,29],[42,62,81,31],[43,0,82,4,"onErrorCallback"],[43,6,82,4,"onErrorCallback"],[43,21,82,19],[43,24,82,22,"callback"],[43,32,82,4],[44,0,83,3],[44,5,42,29],[45,0,88,2,"setOnCloseCallback"],[45,4,88,2,"setOnCloseCallback"],[45,22,42,29],[45,52,88,21,"callback"],[45,60,42,29],[45,62,88,31],[46,0,89,4,"onCloseCallback"],[46,6,89,4,"onCloseCallback"],[46,21,89,19],[46,24,89,22,"callback"],[46,32,89,4],[47,0,90,3],[47,5,42,29],[48,0,92,2,"isInterceptorEnabled"],[48,4,92,2,"isInterceptorEnabled"],[48,24,42,29],[48,58,92,25],[49,0,93,4],[49,13,93,11,"isInterceptorEnabled"],[49,34,93,4],[50,0,94,3],[50,5,42,29],[51,0,96,2,"_unregisterEvents"],[51,4,96,2,"_unregisterEvents"],[51,21,42,29],[51,52,96,22],[52,0,97,4,"subscriptions"],[52,6,97,4,"subscriptions"],[52,19,97,17],[52,20,97,18,"forEach"],[52,27,97,4],[52,28,97,26],[52,38,97,26,"e"],[52,39,97,27],[53,0,97,27],[53,15,97,31,"e"],[53,16,97,32],[53,17,97,33,"remove"],[53,23,97,31],[53,25,97,27],[54,0,97,27],[54,7,97,4],[55,0,98,4,"subscriptions"],[55,6,98,4,"subscriptions"],[55,19,98,17],[55,22,98,20],[55,24,98,4],[56,0,99,3],[56,5,42,29],[57,0,104,2,"_registerEvents"],[57,4,104,2,"_registerEvents"],[57,19,42,29],[57,48,104,20],[58,0,105,4,"subscriptions"],[58,6,105,4,"subscriptions"],[58,19,105,17],[58,22,105,20],[58,23,106,6,"eventEmitter"],[58,35,106,18],[58,36,106,19,"addListener"],[58,47,106,6],[58,48,106,31],[58,66,106,6],[58,68,106,51],[58,78,106,51,"ev"],[58,80,106,53],[58,82,106,57],[59,0,107,8],[59,12,107,12,"onMessageCallback"],[59,29,107,8],[59,31,107,31],[60,0,108,10,"onMessageCallback"],[60,10,108,10,"onMessageCallback"],[60,27,108,27],[60,28,109,12,"ev"],[60,30,109,14],[60,31,109,15,"id"],[60,33,108,27],[60,35,110,12,"ev"],[60,37,110,14],[60,38,110,15,"type"],[60,42,110,12],[60,47,110,24],[60,55,110,12],[60,58,111,16,"WebSocketInterceptor"],[60,78,111,36],[60,79,111,37,"_arrayBufferToString"],[60,99,111,16],[60,100,111,58,"ev"],[60,102,111,60],[60,103,111,61,"data"],[60,107,111,16],[60,108,110,12],[60,111,112,16,"ev"],[60,113,112,18],[60,114,112,19,"data"],[60,118,108,27],[60,119,108,10],[61,0,114,9],[62,0,115,7],[62,7,106,6],[62,8,105,20],[62,10,116,6,"eventEmitter"],[62,22,116,18],[62,23,116,19,"addListener"],[62,34,116,6],[62,35,116,31],[62,50,116,6],[62,52,116,48],[62,62,116,48,"ev"],[62,64,116,50],[62,66,116,54],[63,0,117,8],[63,12,117,12,"onOpenCallback"],[63,26,117,8],[63,28,117,28],[64,0,118,10,"onOpenCallback"],[64,10,118,10,"onOpenCallback"],[64,24,118,24],[64,25,118,25,"ev"],[64,27,118,27],[64,28,118,28,"id"],[64,30,118,24],[64,31,118,10],[65,0,119,9],[66,0,120,7],[66,7,116,6],[66,8,105,20],[66,10,121,6,"eventEmitter"],[66,22,121,18],[66,23,121,19,"addListener"],[66,34,121,6],[66,35,121,31],[66,52,121,6],[66,54,121,50],[66,64,121,50,"ev"],[66,66,121,52],[66,68,121,56],[67,0,122,8],[67,12,122,12,"onCloseCallback"],[67,27,122,8],[67,29,122,29],[68,0,123,10,"onCloseCallback"],[68,10,123,10,"onCloseCallback"],[68,25,123,25],[68,26,123,26,"ev"],[68,28,123,28],[68,29,123,29,"id"],[68,31,123,25],[68,33,123,33],[69,0,123,34,"code"],[69,12,123,34,"code"],[69,16,123,38],[69,18,123,40,"ev"],[69,20,123,42],[69,21,123,43,"code"],[69,25,123,33],[70,0,123,49,"reason"],[70,12,123,49,"reason"],[70,18,123,55],[70,20,123,57,"ev"],[70,22,123,59],[70,23,123,60,"reason"],[71,0,123,33],[71,11,123,25],[71,12,123,10],[72,0,124,9],[73,0,125,7],[73,7,121,6],[73,8,105,20],[73,10,126,6,"eventEmitter"],[73,22,126,18],[73,23,126,19,"addListener"],[73,34,126,6],[73,35,126,31],[73,52,126,6],[73,54,126,50],[73,64,126,50,"ev"],[73,66,126,52],[73,68,126,56],[74,0,127,8],[74,12,127,12,"onErrorCallback"],[74,27,127,8],[74,29,127,29],[75,0,128,10,"onErrorCallback"],[75,10,128,10,"onErrorCallback"],[75,25,128,25],[75,26,128,26,"ev"],[75,28,128,28],[75,29,128,29,"id"],[75,31,128,25],[75,33,128,33],[76,0,128,34,"message"],[76,12,128,34,"message"],[76,19,128,41],[76,21,128,43,"ev"],[76,23,128,45],[76,24,128,46,"message"],[77,0,128,33],[77,11,128,25],[77,12,128,10],[78,0,129,9],[79,0,130,7],[79,7,126,6],[79,8,105,20],[79,9,105,4],[80,0,132,3],[80,5,42,29],[81,0,134,2,"enableInterception"],[81,4,134,2,"enableInterception"],[81,22,42,29],[81,54,134,23],[82,0,135,4],[82,10,135,8,"isInterceptorEnabled"],[82,31,135,4],[82,33,135,30],[83,0,136,6],[84,0,137,5],[86,0,138,4,"eventEmitter"],[86,6,138,4,"eventEmitter"],[86,18,138,16],[86,21,138,19],[86,25,138,23,"NativeEventEmitter"],[86,43,138,19],[86,44,138,42,"NativeWebSocketModule"],[86,74,138,19],[86,75,138,4],[88,0,139,4,"WebSocketInterceptor"],[88,6,139,4,"WebSocketInterceptor"],[88,26,139,24],[88,27,139,25,"_registerEvents"],[88,42,139,4],[90,0,144,4,"NativeWebSocketModule"],[90,37,144,26,"connect"],[90,44,144,4],[90,47,144,36],[90,57,145,6,"url"],[90,60,144,36],[90,62,146,6,"protocols"],[90,71,144,36],[90,73,147,6,"options"],[90,80,144,36],[90,82,148,6,"socketId"],[90,90,144,36],[90,92,149,6],[91,0,150,6],[91,12,150,10,"connectCallback"],[91,27,150,6],[91,29,150,27],[92,0,151,8,"connectCallback"],[92,10,151,8,"connectCallback"],[92,25,151,23],[92,26,151,24,"url"],[92,29,151,23],[92,31,151,29,"protocols"],[92,40,151,23],[92,42,151,40,"options"],[92,49,151,23],[92,51,151,49,"socketId"],[92,59,151,23],[92,60,151,8],[93,0,152,7],[95,0,153,6,"originalRCTWebSocketConnect"],[95,8,153,6,"originalRCTWebSocketConnect"],[95,35,153,33],[95,36,153,34,"apply"],[95,41,153,6],[95,42,153,40],[95,46,153,6],[95,48,153,46,"arguments"],[95,57,153,6],[96,0,154,5],[96,7,144,4],[98,0,158,4,"NativeWebSocketModule"],[98,37,158,26,"send"],[98,41,158,4],[98,44,158,33],[98,54,158,42,"data"],[98,58,158,33],[98,60,158,48,"socketId"],[98,68,158,33],[98,70,158,58],[99,0,159,6],[99,12,159,10,"sendCallback"],[99,24,159,6],[99,26,159,24],[100,0,160,8,"sendCallback"],[100,10,160,8,"sendCallback"],[100,22,160,20],[100,23,160,21,"data"],[100,27,160,20],[100,29,160,27,"socketId"],[100,37,160,20],[100,38,160,8],[101,0,161,7],[103,0,162,6,"originalRCTWebSocketSend"],[103,8,162,6,"originalRCTWebSocketSend"],[103,32,162,30],[103,33,162,31,"apply"],[103,38,162,6],[103,39,162,37],[103,43,162,6],[103,45,162,43,"arguments"],[103,54,162,6],[104,0,163,5],[104,7,158,4],[106,0,167,4,"NativeWebSocketModule"],[106,37,167,26,"sendBinary"],[106,47,167,4],[106,50,167,39],[106,60,167,48,"data"],[106,64,167,39],[106,66,167,54,"socketId"],[106,74,167,39],[106,76,167,64],[107,0,168,6],[107,12,168,10,"sendCallback"],[107,24,168,6],[107,26,168,24],[108,0,169,8,"sendCallback"],[108,10,169,8,"sendCallback"],[108,22,169,20],[108,23,169,21,"WebSocketInterceptor"],[108,43,169,41],[108,44,169,42,"_arrayBufferToString"],[108,64,169,21],[108,65,169,63,"data"],[108,69,169,21],[108,70,169,20],[108,72,169,70,"socketId"],[108,80,169,20],[108,81,169,8],[109,0,170,7],[111,0,171,6,"originalRCTWebSocketSendBinary"],[111,8,171,6,"originalRCTWebSocketSendBinary"],[111,38,171,36],[111,39,171,37,"apply"],[111,44,171,6],[111,45,171,43],[111,49,171,6],[111,51,171,49,"arguments"],[111,60,171,6],[112,0,172,5],[112,7,167,4],[114,0,176,4,"NativeWebSocketModule"],[114,37,176,26,"close"],[114,42,176,4],[114,45,176,34],[114,57,176,45],[115,0,177,6],[115,12,177,10,"closeCallback"],[115,25,177,6],[115,27,177,25],[116,0,178,8],[116,14,178,12,"arguments"],[116,23,178,21],[116,24,178,22,"length"],[116,30,178,12],[116,35,178,33],[116,36,178,8],[116,38,178,36],[117,0,179,10,"closeCallback"],[117,12,179,10,"closeCallback"],[117,25,179,23],[117,26,179,24,"arguments"],[117,35,179,33],[117,36,179,34],[117,37,179,33],[117,38,179,23],[117,40,179,38,"arguments"],[117,49,179,47],[117,50,179,48],[117,51,179,47],[117,52,179,23],[117,54,179,52,"arguments"],[117,63,179,61],[117,64,179,62],[117,65,179,61],[117,66,179,23],[117,67,179,10],[118,0,180,9],[118,11,178,8],[118,17,180,15],[119,0,181,10,"closeCallback"],[119,12,181,10,"closeCallback"],[119,25,181,23],[119,26,181,24],[119,30,181,23],[119,32,181,30],[119,36,181,23],[119,38,181,36,"arguments"],[119,47,181,45],[119,48,181,46],[119,49,181,45],[119,50,181,23],[119,51,181,10],[120,0,182,9],[121,0,183,7],[123,0,184,6,"originalRCTWebSocketClose"],[123,8,184,6,"originalRCTWebSocketClose"],[123,33,184,31],[123,34,184,32,"apply"],[123,39,184,6],[123,40,184,38],[123,44,184,6],[123,46,184,44,"arguments"],[123,55,184,6],[124,0,185,5],[124,7,176,4],[126,0,187,4,"isInterceptorEnabled"],[126,6,187,4,"isInterceptorEnabled"],[126,27,187,24],[126,30,187,27],[126,34,187,4],[127,0,188,3],[127,5,42,29],[128,0,190,2,"_arrayBufferToString"],[128,4,190,2,"_arrayBufferToString"],[128,24,42,29],[128,56,190,23,"data"],[128,60,42,29],[128,62,190,29],[129,0,191,4],[129,10,191,10,"value"],[129,15,191,15],[129,18,191,18,"base64"],[129,24,191,24],[129,25,191,25,"toByteArray"],[129,36,191,18],[129,37,191,37,"data"],[129,41,191,18],[129,43,191,43,"buffer"],[129,49,191,4],[131,0,192,4],[131,10,192,8,"value"],[131,15,192,13],[131,20,192,18,"undefined"],[131,29,192,8],[131,33,192,31,"value"],[131,38,192,36],[131,43,192,41],[131,47,192,4],[131,49,192,47],[132,0,193,6],[132,15,193,13],[132,27,193,6],[133,0,194,5],[135,0,195,4],[135,10,196,6],[135,17,196,13,"ArrayBuffer"],[135,28,196,6],[135,33,196,29],[135,44,196,6],[135,48,197,6],[135,55,197,13,"Uint8Array"],[135,65,197,6],[135,70,197,28],[135,81,196,6],[135,85,198,6,"value"],[135,90,198,11],[135,102,198,23,"ArrayBuffer"],[135,113,195,4],[135,115,199,6],[136,0,200,6],[136,33,200,29,"String"],[136,39,200,35],[136,40,200,36,"Array"],[136,45,200,41],[136,46,200,42,"from"],[136,50,200,36],[136,51,200,47],[136,55,200,51,"Uint8Array"],[136,65,200,47],[136,66,200,62,"value"],[136,71,200,47],[136,72,200,36],[136,73,200,35],[136,74,200,6],[137,0,201,5],[139,0,202,4],[139,13,202,11,"value"],[139,18,202,4],[140,0,203,3],[140,5,42,29],[141,0,206,2,"disableInterception"],[141,4,206,2,"disableInterception"],[141,23,42,29],[141,56,206,24],[142,0,207,4],[142,10,207,8],[142,11,207,9,"isInterceptorEnabled"],[142,32,207,4],[142,34,207,31],[143,0,208,6],[144,0,209,5],[146,0,210,4,"isInterceptorEnabled"],[146,6,210,4,"isInterceptorEnabled"],[146,27,210,24],[146,30,210,27],[146,35,210,4],[147,0,211,4,"NativeWebSocketModule"],[147,37,211,26,"send"],[147,41,211,4],[147,44,211,33,"originalRCTWebSocketSend"],[147,68,211,4],[148,0,212,4,"NativeWebSocketModule"],[148,37,212,26,"sendBinary"],[148,47,212,4],[148,50,212,39,"originalRCTWebSocketSendBinary"],[148,80,212,4],[149,0,213,4,"NativeWebSocketModule"],[149,37,213,26,"close"],[149,42,213,4],[149,45,213,34,"originalRCTWebSocketClose"],[149,70,213,4],[150,0,214,4,"NativeWebSocketModule"],[150,37,214,26,"connect"],[150,44,214,4],[150,47,214,36,"originalRCTWebSocketConnect"],[150,74,214,4],[151,0,216,4,"connectCallback"],[151,6,216,4,"connectCallback"],[151,21,216,19],[151,24,216,22],[151,28,216,4],[152,0,217,4,"closeCallback"],[152,6,217,4,"closeCallback"],[152,19,217,17],[152,22,217,20],[152,26,217,4],[153,0,218,4,"sendCallback"],[153,6,218,4,"sendCallback"],[153,18,218,16],[153,21,218,19],[153,25,218,4],[154,0,219,4,"onOpenCallback"],[154,6,219,4,"onOpenCallback"],[154,20,219,18],[154,23,219,21],[154,27,219,4],[155,0,220,4,"onMessageCallback"],[155,6,220,4,"onMessageCallback"],[155,23,220,21],[155,26,220,24],[155,30,220,4],[156,0,221,4,"onCloseCallback"],[156,6,221,4,"onCloseCallback"],[156,21,221,19],[156,24,221,22],[156,28,221,4],[157,0,222,4,"onErrorCallback"],[157,6,222,4,"onErrorCallback"],[157,21,222,19],[157,24,222,22],[157,28,222,4],[159,0,224,4,"WebSocketInterceptor"],[159,6,224,4,"WebSocketInterceptor"],[159,26,224,24],[159,27,224,25,"_unregisterEvents"],[159,44,224,4],[160,0,225,3],[161,0,42,29],[161,3,42,0],[162,0,228,0,"module"],[162,2,228,0,"module"],[162,8,228,6],[162,9,228,7,"exports"],[162,16,228,0],[162,19,228,17,"WebSocketInterceptor"],[162,39,228,0]],"functionMap":{"names":["<global>","setCloseCallback","setSendCallback","setConnectCallback","setOnOpenCallback","setOnMessageCallback","setOnErrorCallback","setOnCloseCallback","isInterceptorEnabled","_unregisterEvents","subscriptions.forEach$argument_0","_registerEvents","eventEmitter.addListener$argument_1","enableInterception","NativeWebSocketModule.connect","NativeWebSocketModule.send","NativeWebSocketModule.sendBinary","NativeWebSocketModule.close","_arrayBufferToString","disableInterception"],"mappings":"AAA;EC6C;GDE;EEK;GFE;EGK;GHE;EIK;GJE;EKK;GLE;EMK;GNE;EOK;GPE;EQE;GRE;ESE;0BCC,eD;GTE;EWK;mDCE;ODS;gDCC;ODI;kDCC;ODI;kDCC;ODI;GXE;EaE;oCCU;KDU;iCEI;KFK;uCGI;KHK;kCII;KJS;GbG;EkBE;GlBa;EmBG;GnBmB"}},"type":"js/module"}]}