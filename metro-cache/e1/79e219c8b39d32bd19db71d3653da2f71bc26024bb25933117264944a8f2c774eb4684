{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/inherits","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/defineProperty","data":{"isAsync":false}},{"name":"react","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}},{"name":"fbjs/lib/areEqual","data":{"isAsync":false}},{"name":"./RNGestureHandlerModule","data":{"isAsync":false}},{"name":"./State","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = createHandler;\n\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/createClass\"));\n\n  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n\n  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/getPrototypeOf\"));\n\n  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/inherits\"));\n\n  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"@babel/runtime/helpers/defineProperty\"));\n\n  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"react\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[8], \"react-native\");\n\n  var _areEqual = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9], \"fbjs/lib/areEqual\"));\n\n  var _RNGestureHandlerModule = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10], \"./RNGestureHandlerModule\"));\n\n  var _State = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11], \"./State\"));\n\n  var _stateToPropMappings;\n\n  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n  function findNodeHandle(node) {\n    if (_reactNative.Platform.OS === 'web') return node;\n    return (0, _reactNative.findNodeHandle)(node);\n  }\n\n  var _NativeModules$UIMana = _reactNative.NativeModules.UIManager,\n      UIManager = _NativeModules$UIMana === void 0 ? {} : _NativeModules$UIMana;\n  var customGHEventsConfig = {\n    onGestureHandlerEvent: {\n      registrationName: 'onGestureHandlerEvent'\n    },\n    onGestureHandlerStateChange: {\n      registrationName: 'onGestureHandlerStateChange'\n    }\n  };\n  UIManager.genericDirectEventTypes = _objectSpread({}, UIManager.genericDirectEventTypes, {}, customGHEventsConfig);\n  var _UIManager$setJSRespo = UIManager.setJSResponder,\n      oldSetJSResponder = _UIManager$setJSRespo === void 0 ? function () {} : _UIManager$setJSRespo,\n      _UIManager$clearJSRes = UIManager.clearJSResponder,\n      oldClearJSResponder = _UIManager$clearJSRes === void 0 ? function () {} : _UIManager$clearJSRes,\n      _UIManager$getConstan = UIManager.getConstants,\n      oldGetConstants = _UIManager$getConstan === void 0 ? function () {\n    return {};\n  } : _UIManager$getConstan;\n\n  UIManager.setJSResponder = function (tag, blockNativeResponder) {\n    _RNGestureHandlerModule.default.handleSetJSResponder(tag, blockNativeResponder);\n\n    oldSetJSResponder(tag, blockNativeResponder);\n  };\n\n  UIManager.clearJSResponder = function () {\n    _RNGestureHandlerModule.default.handleClearJSResponder();\n\n    oldClearJSResponder();\n  };\n\n  UIManager.getConstants = function () {\n    var constants = oldGetConstants();\n    return _objectSpread({}, constants, {\n      genericDirectEventTypes: _objectSpread({}, constants.genericDirectEventTypes, {}, customGHEventsConfig)\n    });\n  };\n\n  var handlerTag = 1;\n  var handlerIDToTag = {};\n\n  function isConfigParam(param, name) {\n    return param !== undefined && (param !== Object(param) || !('__isNative' in param)) && name !== 'onHandlerStateChange' && name !== 'onGestureEvent';\n  }\n\n  function filterConfig(props, validProps) {\n    var defaults = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    var res = _objectSpread({}, defaults);\n\n    Object.keys(validProps).forEach(function (key) {\n      var value = props[key];\n\n      if (isConfigParam(value, key)) {\n        var _value = props[key];\n\n        if (key === 'simultaneousHandlers' || key === 'waitFor') {\n          _value = transformIntoHandlerTags(props[key]);\n        } else if (key === 'hitSlop') {\n          if (typeof _value !== 'object') {\n            _value = {\n              top: _value,\n              left: _value,\n              bottom: _value,\n              right: _value\n            };\n          }\n        }\n\n        res[key] = _value;\n      }\n    });\n    return res;\n  }\n\n  function transformIntoHandlerTags(handlerIDs) {\n    if (!Array.isArray(handlerIDs)) {\n      handlerIDs = [handlerIDs];\n    }\n\n    if (_reactNative.Platform.OS === 'web') {\n      return handlerIDs.map(function (_ref) {\n        var current = _ref.current;\n        return current;\n      }).filter(function (handle) {\n        return handle;\n      });\n    }\n\n    return handlerIDs.map(function (handlerID) {\n      return handlerIDToTag[handlerID] || handlerID.current && handlerID.current._handlerTag || -1;\n    }).filter(function (handlerTag) {\n      return handlerTag > 0;\n    });\n  }\n\n  function hasUnresolvedRefs(props) {\n    var extract = function extract(refs) {\n      if (!Array.isArray(refs)) {\n        return refs && refs.current === null;\n      }\n\n      return refs.some(function (r) {\n        return r && r.current === null;\n      });\n    };\n\n    return extract(props['simultaneousHandlers']) || extract(props['waitFor']);\n  }\n\n  var stateToPropMappings = (_stateToPropMappings = {}, (0, _defineProperty2.default)(_stateToPropMappings, _State.default.BEGAN, 'onBegan'), (0, _defineProperty2.default)(_stateToPropMappings, _State.default.FAILED, 'onFailed'), (0, _defineProperty2.default)(_stateToPropMappings, _State.default.CANCELLED, 'onCancelled'), (0, _defineProperty2.default)(_stateToPropMappings, _State.default.ACTIVE, 'onActivated'), (0, _defineProperty2.default)(_stateToPropMappings, _State.default.END, 'onEnded'), _stateToPropMappings);\n\n  function createHandler(handlerName) {\n    var propTypes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    var transformProps = arguments.length > 3 ? arguments[3] : undefined;\n    var customNativeProps = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n\n    var Handler = function (_React$Component) {\n      (0, _inherits2.default)(Handler, _React$Component);\n\n      function Handler(props) {\n        var _this;\n\n        (0, _classCallCheck2.default)(this, Handler);\n        _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Handler).call(this, props));\n\n        _this._onGestureHandlerEvent = function (event) {\n          if (event.nativeEvent.handlerTag === _this._handlerTag) {\n            _this.props.onGestureEvent && _this.props.onGestureEvent(event);\n          } else {\n            _this.props.onGestureHandlerEvent && _this.props.onGestureHandlerEvent(event);\n          }\n        };\n\n        _this._onGestureHandlerStateChange = function (event) {\n          if (event.nativeEvent.handlerTag === _this._handlerTag) {\n            _this.props.onHandlerStateChange && _this.props.onHandlerStateChange(event);\n            var stateEventName = stateToPropMappings[event.nativeEvent.state];\n\n            if (typeof _this.props[stateEventName] === 'function') {\n              _this.props[stateEventName](event);\n            }\n          } else {\n            _this.props.onGestureHandlerStateChange && _this.props.onGestureHandlerStateChange(event);\n          }\n        };\n\n        _this._refHandler = function (node) {\n          _this._viewNode = node;\n\n          var child = _react.default.Children.only(_this.props.children);\n\n          var ref = child.ref;\n\n          if (ref !== null) {\n            if (typeof ref === 'function') {\n              ref(node);\n            } else {\n              ref.current = node;\n            }\n          }\n        };\n\n        _this._createGestureHandler = function (newConfig) {\n          _this._config = newConfig;\n\n          _RNGestureHandlerModule.default.createGestureHandler(handlerName, _this._handlerTag, newConfig);\n        };\n\n        _this._attachGestureHandler = function (newViewTag) {\n          _this._viewTag = newViewTag;\n\n          _RNGestureHandlerModule.default.attachGestureHandler(_this._handlerTag, newViewTag);\n        };\n\n        _this._updateGestureHandler = function (newConfig) {\n          _this._config = newConfig;\n\n          _RNGestureHandlerModule.default.updateGestureHandler(_this._handlerTag, newConfig);\n        };\n\n        _this._handlerTag = handlerTag++;\n        _this._config = {};\n\n        if (props.id) {\n          if (handlerIDToTag[props.id] !== undefined) {\n            throw new Error(\"Handler with ID \\\"\" + props.id + \"\\\" already registered\");\n          }\n\n          handlerIDToTag[props.id] = _this._handlerTag;\n        }\n\n        return _this;\n      }\n\n      (0, _createClass2.default)(Handler, [{\n        key: \"componentWillUnmount\",\n        value: function componentWillUnmount() {\n          _RNGestureHandlerModule.default.dropGestureHandler(this._handlerTag);\n\n          if (this._updateEnqueued) {\n            clearImmediate(this._updateEnqueued);\n          }\n\n          if (this.props.id) {\n            delete handlerIDToTag[this.props.id];\n          }\n        }\n      }, {\n        key: \"componentDidMount\",\n        value: function componentDidMount() {\n          var _this2 = this;\n\n          if (hasUnresolvedRefs(this.props)) {\n            this._updateEnqueued = setImmediate(function () {\n              _this2._updateEnqueued = null;\n\n              _this2._update();\n            });\n          }\n\n          this._createGestureHandler(filterConfig(transformProps ? transformProps(this.props) : this.props, _objectSpread({}, this.constructor.propTypes, {}, customNativeProps), config));\n\n          this._attachGestureHandler(findNodeHandle(this._viewNode));\n        }\n      }, {\n        key: \"componentDidUpdate\",\n        value: function componentDidUpdate() {\n          var viewTag = findNodeHandle(this._viewNode);\n\n          if (this._viewTag !== viewTag) {\n            this._attachGestureHandler(viewTag);\n          }\n\n          this._update();\n        }\n      }, {\n        key: \"_update\",\n        value: function _update() {\n          var newConfig = filterConfig(transformProps ? transformProps(this.props) : this.props, _objectSpread({}, this.constructor.propTypes, {}, customNativeProps), config);\n\n          if (!(0, _areEqual.default)(this._config, newConfig)) {\n            this._updateGestureHandler(newConfig);\n          }\n        }\n      }, {\n        key: \"setNativeProps\",\n        value: function setNativeProps(updates) {\n          var mergedProps = _objectSpread({}, this.props, {}, updates);\n\n          var newConfig = filterConfig(transformProps ? transformProps(mergedProps) : mergedProps, _objectSpread({}, this.constructor.propTypes, {}, customNativeProps), config);\n\n          this._updateGestureHandler(newConfig);\n        }\n      }, {\n        key: \"render\",\n        value: function render() {\n          var gestureEventHandler = this._onGestureHandlerEvent;\n          var _this$props = this.props,\n              onGestureEvent = _this$props.onGestureEvent,\n              onGestureHandlerEvent = _this$props.onGestureHandlerEvent;\n\n          if (onGestureEvent && typeof onGestureEvent !== 'function') {\n            if (onGestureHandlerEvent) {\n              throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n            }\n\n            gestureEventHandler = this.props.onGestureEvent;\n          } else {\n            if (onGestureHandlerEvent && typeof onGestureHandlerEvent !== 'function') {\n              throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n            }\n          }\n\n          var gestureStateEventHandler = this._onGestureHandlerStateChange;\n          var _this$props2 = this.props,\n              onHandlerStateChange = _this$props2.onHandlerStateChange,\n              onGestureHandlerStateChange = _this$props2.onGestureHandlerStateChange;\n\n          if (onHandlerStateChange && typeof onHandlerStateChange !== 'function') {\n            if (onGestureHandlerStateChange) {\n              throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n            }\n\n            gestureStateEventHandler = this.props.onHandlerStateChange;\n          } else {\n            if (onGestureHandlerStateChange && typeof onGestureHandlerStateChange !== 'function') {\n              throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n            }\n          }\n\n          var child = _react.default.Children.only(this.props.children);\n\n          var grandChildren = child.props.children;\n\n          if (_reactNative.Touchable.TOUCH_TARGET_DEBUG && child.type && (child.type === 'RNGestureHandlerButton' || child.type.name === 'View' || child.type.displayName === 'View')) {\n            grandChildren = _react.default.Children.toArray(grandChildren);\n            grandChildren.push(_reactNative.Touchable.renderDebugView({\n              color: 'mediumspringgreen',\n              hitSlop: child.props.hitSlop\n            }));\n          }\n\n          return _react.default.cloneElement(child, {\n            ref: this._refHandler,\n            collapsable: false,\n            onGestureHandlerEvent: gestureEventHandler,\n            onGestureHandlerStateChange: gestureStateEventHandler\n          }, grandChildren);\n        }\n      }]);\n      return Handler;\n    }(_react.default.Component);\n\n    Handler.displayName = handlerName;\n    Handler.propTypes = propTypes;\n    return Handler;\n  }\n});","lineCount":362,"map":[[21,0,1,0],[23,0,2,0],[25,0,8,0],[27,0,9,0],[29,0,10,0],[37,0,12,0],[37,11,12,9,"findNodeHandle"],[37,25,12,0],[37,26,12,24,"node"],[37,30,12,0],[37,32,12,30],[38,0,13,2],[38,8,13,6,"Platform"],[38,30,13,15,"OS"],[38,32,13,6],[38,37,13,22],[38,42,13,2],[38,44,13,29],[38,51,13,36,"node"],[38,55,13,29],[39,0,14,2],[39,11,14,9],[39,44,14,26,"node"],[39,48,14,9],[39,49,14,2],[40,0,15,1],[42,30,17,27,"NativeModules"],[42,56],[42,57,17,8,"UIManager"],[42,66],[43,6,17,8,"UIManager"],[43,15],[43,53,17,20],[43,55],[44,0,19,0],[44,6,19,6,"customGHEventsConfig"],[44,26,19,26],[44,29,19,29],[45,0,20,2,"onGestureHandlerEvent"],[45,4,20,2,"onGestureHandlerEvent"],[45,25,20,23],[45,27,20,25],[46,0,20,27,"registrationName"],[46,6,20,27,"registrationName"],[46,22,20,43],[46,24,20,45],[47,0,20,25],[47,5,19,29],[48,0,21,2,"onGestureHandlerStateChange"],[48,4,21,2,"onGestureHandlerStateChange"],[48,31,21,29],[48,33,21,31],[49,0,22,4,"registrationName"],[49,6,22,4,"registrationName"],[49,22,22,20],[49,24,22,22],[50,0,21,31],[51,0,19,29],[51,3,19,0],[52,0,30,0,"UIManager"],[52,2,30,0,"UIManager"],[52,11,30,9],[52,12,30,10,"genericDirectEventTypes"],[52,35,30,0],[52,56,31,5,"UIManager"],[52,65,31,14],[52,66,31,15,"genericDirectEventTypes"],[52,89,30,0],[52,95,32,5,"customGHEventsConfig"],[52,115,30,0],[53,30,40,4,"UIManager"],[53,39],[53,40,37,2,"setJSResponder"],[53,54],[54,6,37,18,"oldSetJSResponder"],[54,23],[54,61,37,38],[54,73,37,44],[54,74,37,46],[54,75],[55,30,40,4,"UIManager"],[55,39],[55,40,38,2,"clearJSResponder"],[55,56],[56,6,38,20,"oldClearJSResponder"],[56,25],[56,63,38,42],[56,75,38,48],[56,76,38,50],[56,77],[57,30,40,4,"UIManager"],[57,39],[57,40,39,2,"getConstants"],[57,52],[58,6,39,16,"oldGetConstants"],[58,21],[58,59,39,34],[59,0,39,34],[59,11,39,41],[59,13,39,34],[60,0,39,34],[60,3],[62,0,41,0,"UIManager"],[62,2,41,0,"UIManager"],[62,11,41,9],[62,12,41,10,"setJSResponder"],[62,26,41,0],[62,29,41,27],[62,39,41,28,"tag"],[62,42,41,27],[62,44,41,33,"blockNativeResponder"],[62,64,41,27],[62,66,41,58],[63,0,42,2,"RNGestureHandlerModule"],[63,36,42,25,"handleSetJSResponder"],[63,56,42,2],[63,57,42,46,"tag"],[63,60,42,2],[63,62,42,51,"blockNativeResponder"],[63,82,42,2],[65,0,43,2,"oldSetJSResponder"],[65,4,43,2,"oldSetJSResponder"],[65,21,43,19],[65,22,43,20,"tag"],[65,25,43,19],[65,27,43,25,"blockNativeResponder"],[65,47,43,19],[65,48,43,2],[66,0,44,1],[66,3,41,0],[68,0,45,0,"UIManager"],[68,2,45,0,"UIManager"],[68,11,45,9],[68,12,45,10,"clearJSResponder"],[68,28,45,0],[68,31,45,29],[68,43,45,35],[69,0,46,2,"RNGestureHandlerModule"],[69,36,46,25,"handleClearJSResponder"],[69,58,46,2],[71,0,47,2,"oldClearJSResponder"],[71,4,47,2,"oldClearJSResponder"],[71,23,47,21],[72,0,48,1],[72,3,45,0],[74,0,51,0,"UIManager"],[74,2,51,0,"UIManager"],[74,11,51,9],[74,12,51,10,"getConstants"],[74,24,51,0],[74,27,51,25],[74,39,51,31],[75,0,52,2],[75,8,52,8,"constants"],[75,17,52,17],[75,20,52,20,"oldGetConstants"],[75,35,52,35],[75,37,52,2],[76,0,53,2],[76,29,54,7,"constants"],[76,38,53,2],[77,0,55,4,"genericDirectEventTypes"],[77,6,55,4,"genericDirectEventTypes"],[77,29,55,27],[77,49,56,9,"constants"],[77,58,56,18],[77,59,56,19,"genericDirectEventTypes"],[77,82,55,27],[77,88,57,9,"customGHEventsConfig"],[77,108,55,27],[78,0,53,2],[79,0,60,1],[79,3,51,0],[81,0,62,0],[81,6,62,4,"handlerTag"],[81,16,62,14],[81,19,62,17],[81,20,62,0],[82,0,63,0],[82,6,63,6,"handlerIDToTag"],[82,20,63,20],[82,23,63,23],[82,25,63,0],[84,0,65,0],[84,11,65,9,"isConfigParam"],[84,24,65,0],[84,25,65,23,"param"],[84,30,65,0],[84,32,65,30,"name"],[84,36,65,0],[84,38,65,36],[85,0,68,2],[85,11,69,4,"param"],[85,16,69,9],[85,21,69,14,"undefined"],[85,30,69,4],[85,35,70,5,"param"],[85,40,70,10],[85,45,70,15,"Object"],[85,51,70,21],[85,52,70,22,"param"],[85,57,70,21],[85,58,70,5],[85,62,70,32],[85,64,70,34],[85,80,70,50,"param"],[85,85,70,32],[85,86,69,4],[85,91,71,4,"name"],[85,95,71,8],[85,100,71,13],[85,122,69,4],[85,126,72,4,"name"],[85,130,72,8],[85,135,72,13],[85,151,68,2],[86,0,74,1],[88,0,76,0],[88,11,76,9,"filterConfig"],[88,23,76,0],[88,24,76,22,"props"],[88,29,76,0],[88,31,76,29,"validProps"],[88,41,76,0],[88,43,76,56],[89,0,76,56],[89,8,76,41,"defaults"],[89,16,76,56],[89,87,76,52],[89,89,76,56],[91,0,77,2],[91,8,77,8,"res"],[91,11,77,11],[91,32,77,19,"defaults"],[91,40,77,11],[91,41,77,2],[93,0,78,2,"Object"],[93,4,78,2,"Object"],[93,10,78,8],[93,11,78,9,"keys"],[93,15,78,2],[93,16,78,14,"validProps"],[93,26,78,2],[93,28,78,26,"forEach"],[93,35,78,2],[93,36,78,34],[93,46,78,34,"key"],[93,49,78,37],[93,51,78,41],[94,0,79,4],[94,10,79,10,"value"],[94,15,79,15],[94,18,79,18,"props"],[94,23,79,23],[94,24,79,24,"key"],[94,27,79,23],[94,28,79,4],[96,0,80,4],[96,10,80,8,"isConfigParam"],[96,23,80,21],[96,24,80,22,"value"],[96,29,80,21],[96,31,80,29,"key"],[96,34,80,21],[96,35,80,4],[96,37,80,35],[97,0,81,6],[97,12,81,10,"value"],[97,18,81,15],[97,21,81,18,"props"],[97,26,81,23],[97,27,81,24,"key"],[97,30,81,23],[97,31,81,6],[99,0,82,6],[99,12,82,10,"key"],[99,15,82,13],[99,20,82,18],[99,42,82,10],[99,46,82,44,"key"],[99,49,82,47],[99,54,82,52],[99,63,82,6],[99,65,82,63],[100,0,83,8,"value"],[100,10,83,8,"value"],[100,16,83,13],[100,19,83,16,"transformIntoHandlerTags"],[100,43,83,40],[100,44,83,41,"props"],[100,49,83,46],[100,50,83,47,"key"],[100,53,83,46],[100,54,83,40],[100,55,83,8],[101,0,84,7],[101,9,82,6],[101,15,84,13],[101,19,84,17,"key"],[101,22,84,20],[101,27,84,25],[101,36,84,13],[101,38,84,36],[102,0,85,8],[102,14,85,12],[102,21,85,19,"value"],[102,27,85,12],[102,32,85,29],[102,40,85,8],[102,42,85,39],[103,0,86,10,"value"],[103,12,86,10,"value"],[103,18,86,15],[103,21,86,18],[104,0,86,20,"top"],[104,14,86,20,"top"],[104,17,86,23],[104,19,86,25,"value"],[104,25,86,18],[105,0,86,32,"left"],[105,14,86,32,"left"],[105,18,86,36],[105,20,86,38,"value"],[105,26,86,18],[106,0,86,45,"bottom"],[106,14,86,45,"bottom"],[106,20,86,51],[106,22,86,53,"value"],[106,28,86,18],[107,0,86,60,"right"],[107,14,86,60,"right"],[107,19,86,65],[107,21,86,67,"value"],[108,0,86,18],[108,13,86,10],[109,0,87,9],[110,0,88,7],[112,0,89,6,"res"],[112,8,89,6,"res"],[112,11,89,9],[112,12,89,10,"key"],[112,15,89,9],[112,16,89,6],[112,19,89,17,"value"],[112,25,89,6],[113,0,90,5],[114,0,91,3],[114,5,78,2],[115,0,92,2],[115,11,92,9,"res"],[115,14,92,2],[116,0,93,1],[118,0,95,0],[118,11,95,9,"transformIntoHandlerTags"],[118,35,95,0],[118,36,95,34,"handlerIDs"],[118,46,95,0],[118,48,95,46],[119,0,96,2],[119,8,96,6],[119,9,96,7,"Array"],[119,14,96,12],[119,15,96,13,"isArray"],[119,22,96,7],[119,23,96,21,"handlerIDs"],[119,33,96,7],[119,34,96,2],[119,36,96,34],[120,0,97,4,"handlerIDs"],[120,6,97,4,"handlerIDs"],[120,16,97,14],[120,19,97,17],[120,20,97,18,"handlerIDs"],[120,30,97,17],[120,31,97,4],[121,0,98,3],[123,0,100,2],[123,8,100,6,"Platform"],[123,30,100,15,"OS"],[123,32,100,6],[123,37,100,22],[123,42,100,2],[123,44,100,29],[124,0,101,4],[124,13,101,11,"handlerIDs"],[124,23,101,21],[124,24,101,22,"map"],[124,27,101,11],[124,28,101,26],[125,0,101,26],[125,12,101,29,"current"],[125,19,101,26],[125,27,101,29,"current"],[125,34,101,26],[126,0,101,26],[126,15,101,43,"current"],[126,22,101,26],[127,0,101,26],[127,7,101,11],[127,9,101,52,"filter"],[127,15,101,11],[127,16,101,59],[127,26,101,59,"handle"],[127,32,101,65],[128,0,101,65],[128,15,101,69,"handle"],[128,21,101,65],[129,0,101,65],[129,7,101,11],[129,8,101,4],[130,0,102,3],[132,0,104,2],[132,11,104,9,"handlerIDs"],[132,21,104,19],[132,22,105,5,"map"],[132,25,104,9],[132,26,106,6],[132,36,106,6,"handlerID"],[132,45,106,15],[133,0,106,15],[133,13,107,8,"handlerIDToTag"],[133,27,107,22],[133,28,107,23,"handlerID"],[133,37,107,22],[133,38,107,8],[133,42,108,9,"handlerID"],[133,51,108,18],[133,52,108,19,"current"],[133,59,108,9],[133,63,108,30,"handlerID"],[133,72,108,39],[133,73,108,40,"current"],[133,80,108,30],[133,81,108,48,"_handlerTag"],[133,92,107,8],[133,96,109,8],[133,97,109,9],[133,98,106,15],[134,0,106,15],[134,5,104,9],[134,7,111,5,"filter"],[134,13,104,9],[134,14,111,12],[134,24,111,12,"handlerTag"],[134,34,111,22],[135,0,111,22],[135,13,111,26,"handlerTag"],[135,23,111,36],[135,26,111,39],[135,27,111,22],[136,0,111,22],[136,5,104,9],[136,6,104,2],[137,0,112,1],[139,0,114,0],[139,11,114,9,"hasUnresolvedRefs"],[139,28,114,0],[139,29,114,27,"props"],[139,34,114,0],[139,36,114,34],[140,0,115,2],[140,8,115,8,"extract"],[140,15,115,15],[140,18,115,18],[140,27,115,8,"extract"],[140,34,115,18],[140,35,115,18,"refs"],[140,39,115,22],[140,41,115,26],[141,0,116,4],[141,10,116,8],[141,11,116,9,"Array"],[141,16,116,14],[141,17,116,15,"isArray"],[141,24,116,9],[141,25,116,23,"refs"],[141,29,116,9],[141,30,116,4],[141,32,116,30],[142,0,117,6],[142,15,117,13,"refs"],[142,19,117,17],[142,23,117,21,"refs"],[142,27,117,25],[142,28,117,26,"current"],[142,35,117,21],[142,40,117,38],[142,44,117,6],[143,0,118,5],[145,0,119,4],[145,13,119,11,"refs"],[145,17,119,15],[145,18,119,16,"some"],[145,22,119,11],[145,23,119,21],[145,33,119,21,"r"],[145,34,119,22],[146,0,119,22],[146,15,119,26,"r"],[146,16,119,27],[146,20,119,31,"r"],[146,21,119,32],[146,22,119,33,"current"],[146,29,119,31],[146,34,119,45],[146,38,119,22],[147,0,119,22],[147,7,119,11],[147,8,119,4],[148,0,120,3],[148,5,115,2],[150,0,121,2],[150,11,121,9,"extract"],[150,18,121,16],[150,19,121,17,"props"],[150,24,121,22],[150,25,121,23],[150,47,121,22],[150,48,121,16],[150,49,121,9],[150,53,121,51,"extract"],[150,60,121,58],[150,61,121,59,"props"],[150,66,121,64],[150,67,121,65],[150,76,121,64],[150,77,121,58],[150,78,121,2],[151,0,122,1],[153,0,124,0],[153,6,124,6,"stateToPropMappings"],[153,25,124,25],[153,108,125,3,"State"],[153,123,125,9,"BEGAN"],[153,128,124,25],[153,130,125,17],[153,139,124,25],[153,194,126,3,"State"],[153,209,126,9,"FAILED"],[153,215,124,25],[153,217,126,18],[153,227,124,25],[153,282,127,3,"State"],[153,297,127,9,"CANCELLED"],[153,306,124,25],[153,308,127,21],[153,321,124,25],[153,376,128,3,"State"],[153,391,128,9,"ACTIVE"],[153,397,124,25],[153,399,128,18],[153,412,124,25],[153,467,129,3,"State"],[153,482,129,9,"END"],[153,485,124,25],[153,487,129,15],[153,496,124,25],[153,520,124,0],[155,0,132,15],[155,11,132,24,"createHandler"],[155,24,132,15],[155,25,133,2,"handlerName"],[155,36,132,15],[155,38,138,2],[156,0,138,2],[156,8,134,2,"propTypes"],[156,17,138,2],[156,88,134,14],[156,90,138,2],[157,0,138,2],[157,8,135,2,"config"],[157,14,138,2],[157,85,135,11],[157,87,138,2],[158,0,138,2],[158,8,136,2,"transformProps"],[158,22,138,2],[159,0,138,2],[159,8,137,2,"customNativeProps"],[159,25,138,2],[159,96,137,22],[159,98,138,2],[161,0,138,2],[161,8,139,8,"Handler"],[161,15,138,2],[162,0,138,2],[164,0,144,4],[164,23,144,16,"props"],[164,28,144,4],[164,30,144,23],[165,0,144,23],[167,0,144,23],[168,0,145,6],[168,113,145,12,"props"],[168,118,145,6],[170,0,144,23],[170,14,156,4,"_onGestureHandlerEvent"],[170,36,144,23],[170,39,156,29],[170,49,156,29,"event"],[170,54,156,34],[170,56,156,38],[171,0,157,6],[171,14,157,10,"event"],[171,19,157,15],[171,20,157,16,"nativeEvent"],[171,31,157,10],[171,32,157,28,"handlerTag"],[171,42,157,10],[171,47,157,43],[171,53,157,48,"_handlerTag"],[171,64,157,6],[171,66,157,61],[172,0,158,8],[172,18,158,13,"props"],[172,23,158,8],[172,24,158,19,"onGestureEvent"],[172,38,158,8],[172,42,158,37],[172,48,158,42,"props"],[172,53,158,37],[172,54,158,48,"onGestureEvent"],[172,68,158,37],[172,69,158,63,"event"],[172,74,158,37],[172,75,158,8],[173,0,159,7],[173,11,157,6],[173,17,159,13],[174,0,160,8],[174,18,160,13,"props"],[174,23,160,8],[174,24,160,19,"onGestureHandlerEvent"],[174,45,160,8],[174,49,161,10],[174,55,161,15,"props"],[174,60,161,10],[174,61,161,21,"onGestureHandlerEvent"],[174,82,161,10],[174,83,161,43,"event"],[174,88,161,10],[174,89,160,8],[175,0,162,7],[176,0,163,5],[176,9,144,23],[178,0,144,23],[178,14,165,4,"_onGestureHandlerStateChange"],[178,42,144,23],[178,45,165,35],[178,55,165,35,"event"],[178,60,165,40],[178,62,165,44],[179,0,166,6],[179,14,166,10,"event"],[179,19,166,15],[179,20,166,16,"nativeEvent"],[179,31,166,10],[179,32,166,28,"handlerTag"],[179,42,166,10],[179,47,166,43],[179,53,166,48,"_handlerTag"],[179,64,166,6],[179,66,166,61],[180,0,167,8],[180,18,167,13,"props"],[180,23,167,8],[180,24,167,19,"onHandlerStateChange"],[180,44,167,8],[180,48,168,10],[180,54,168,15,"props"],[180,59,168,10],[180,60,168,21,"onHandlerStateChange"],[180,80,168,10],[180,81,168,42,"event"],[180,86,168,10],[180,87,167,8],[181,0,170,8],[181,16,170,14,"stateEventName"],[181,30,170,28],[181,33,170,31,"stateToPropMappings"],[181,52,170,50],[181,53,170,51,"event"],[181,58,170,56],[181,59,170,57,"nativeEvent"],[181,70,170,51],[181,71,170,69,"state"],[181,76,170,50],[181,77,170,8],[183,0,171,8],[183,16,171,12],[183,23,171,19],[183,29,171,24,"props"],[183,34,171,19],[183,35,171,30,"stateEventName"],[183,49,171,19],[183,50,171,12],[183,55,171,50],[183,65,171,8],[183,67,171,62],[184,0,172,10],[184,20,172,15,"props"],[184,25,172,10],[184,26,172,21,"stateEventName"],[184,40,172,10],[184,42,172,37,"event"],[184,47,172,10],[185,0,173,9],[186,0,174,7],[186,11,166,6],[186,17,174,13],[187,0,175,8],[187,18,175,13,"props"],[187,23,175,8],[187,24,175,19,"onGestureHandlerStateChange"],[187,51,175,8],[187,55,176,10],[187,61,176,15,"props"],[187,66,176,10],[187,67,176,21,"onGestureHandlerStateChange"],[187,94,176,10],[187,95,176,49,"event"],[187,100,176,10],[187,101,175,8],[188,0,177,7],[189,0,178,5],[189,9,144,23],[191,0,144,23],[191,14,180,4,"_refHandler"],[191,25,144,23],[191,28,180,18],[191,38,180,18,"node"],[191,42,180,22],[191,44,180,26],[192,0,181,6],[192,16,181,11,"_viewNode"],[192,25,181,6],[192,28,181,23,"node"],[192,32,181,6],[194,0,183,6],[194,14,183,12,"child"],[194,19,183,17],[194,22,183,20,"React"],[194,37,183,26,"Children"],[194,45,183,20],[194,46,183,35,"only"],[194,50,183,20],[194,51,183,40],[194,57,183,45,"props"],[194,62,183,40],[194,63,183,51,"children"],[194,71,183,20],[194,72,183,6],[196,0,180,26],[196,14,184,14,"ref"],[196,17,180,26],[196,20,184,22,"child"],[196,25,180,26],[196,26,184,14,"ref"],[196,29,180,26],[198,0,185,6],[198,14,185,10,"ref"],[198,17,185,13],[198,22,185,18],[198,26,185,6],[198,28,185,24],[199,0,186,8],[199,16,186,12],[199,23,186,19,"ref"],[199,26,186,12],[199,31,186,27],[199,41,186,8],[199,43,186,39],[200,0,187,10,"ref"],[200,14,187,10,"ref"],[200,17,187,13],[200,18,187,14,"node"],[200,22,187,13],[200,23,187,10],[201,0,188,9],[201,13,186,8],[201,19,188,15],[202,0,189,10,"ref"],[202,14,189,10,"ref"],[202,17,189,13],[202,18,189,14,"current"],[202,25,189,10],[202,28,189,24,"node"],[202,32,189,10],[203,0,190,9],[204,0,191,7],[205,0,192,5],[205,9,144,23],[207,0,144,23],[207,14,194,4,"_createGestureHandler"],[207,35,144,23],[207,38,194,28],[207,48,194,28,"newConfig"],[207,57,194,37],[207,59,194,41],[208,0,195,6],[208,16,195,11,"_config"],[208,23,195,6],[208,26,195,21,"newConfig"],[208,35,195,6],[210,0,197,6,"RNGestureHandlerModule"],[210,42,197,29,"createGestureHandler"],[210,62,197,6],[210,63,198,8,"handlerName"],[210,74,197,6],[210,76,199,8],[210,82,199,13,"_handlerTag"],[210,93,197,6],[210,95,200,8,"newConfig"],[210,104,197,6],[211,0,202,5],[211,9,144,23],[213,0,144,23],[213,14,204,4,"_attachGestureHandler"],[213,35,144,23],[213,38,204,28],[213,48,204,28,"newViewTag"],[213,58,204,38],[213,60,204,42],[214,0,205,6],[214,16,205,11,"_viewTag"],[214,24,205,6],[214,27,205,22,"newViewTag"],[214,37,205,6],[216,0,207,6,"RNGestureHandlerModule"],[216,42,207,29,"attachGestureHandler"],[216,62,207,6],[216,63,207,50],[216,69,207,55,"_handlerTag"],[216,80,207,6],[216,82,207,68,"newViewTag"],[216,92,207,6],[217,0,208,5],[217,9,144,23],[219,0,144,23],[219,14,210,4,"_updateGestureHandler"],[219,35,144,23],[219,38,210,28],[219,48,210,28,"newConfig"],[219,57,210,37],[219,59,210,41],[220,0,211,6],[220,16,211,11,"_config"],[220,23,211,6],[220,26,211,21,"newConfig"],[220,35,211,6],[222,0,213,6,"RNGestureHandlerModule"],[222,42,213,29,"updateGestureHandler"],[222,62,213,6],[222,63,213,50],[222,69,213,55,"_handlerTag"],[222,80,213,6],[222,82,213,68,"newConfig"],[222,91,213,6],[223,0,214,5],[223,9,144,23],[225,0,146,6],[225,14,146,11,"_handlerTag"],[225,25,146,6],[225,28,146,25,"handlerTag"],[225,38,146,35],[225,40,146,6],[226,0,147,6],[226,14,147,11,"_config"],[226,21,147,6],[226,24,147,21],[226,26,147,6],[228,0,148,6],[228,12,148,10,"props"],[228,17,148,15],[228,18,148,16,"id"],[228,20,148,6],[228,22,148,20],[229,0,149,8],[229,14,149,12,"handlerIDToTag"],[229,28,149,26],[229,29,149,27,"props"],[229,34,149,32],[229,35,149,33,"id"],[229,37,149,26],[229,38,149,12],[229,43,149,41,"undefined"],[229,52,149,8],[229,54,149,52],[230,0,150,10],[230,18,150,16],[230,22,150,20,"Error"],[230,27,150,16],[230,51,150,46,"props"],[230,56,150,51],[230,57,150,52,"id"],[230,59,150,16],[230,86,150,10],[231,0,151,9],[233,0,152,8,"handlerIDToTag"],[233,10,152,8,"handlerIDToTag"],[233,24,152,22],[233,25,152,23,"props"],[233,30,152,28],[233,31,152,29,"id"],[233,33,152,22],[233,34,152,8],[233,37,152,35],[233,43,152,40,"_handlerTag"],[233,54,152,8],[234,0,153,7],[236,0,144,23],[237,0,154,5],[239,0,138,2],[240,0,138,2],[241,0,138,2],[241,47,216,27],[242,0,217,6,"RNGestureHandlerModule"],[242,42,217,29,"dropGestureHandler"],[242,60,217,6],[242,61,217,48],[242,66,217,53,"_handlerTag"],[242,77,217,6],[244,0,218,6],[244,14,218,10],[244,19,218,15,"_updateEnqueued"],[244,34,218,6],[244,36,218,32],[245,0,219,8,"clearImmediate"],[245,12,219,8,"clearImmediate"],[245,26,219,22],[245,27,219,23],[245,32,219,28,"_updateEnqueued"],[245,47,219,22],[245,48,219,8],[246,0,220,7],[248,0,221,6],[248,14,221,10],[248,19,221,15,"props"],[248,24,221,10],[248,25,221,21,"id"],[248,27,221,6],[248,29,221,25],[249,0,222,8],[249,19,222,15,"handlerIDToTag"],[249,33,222,29],[249,34,222,30],[249,39,222,35,"props"],[249,44,222,30],[249,45,222,41,"id"],[249,47,222,29],[249,48,222,8],[250,0,223,7],[251,0,224,5],[252,0,138,2],[253,0,138,2],[254,0,138,2],[254,44,226,24],[255,0,226,24],[257,0,227,6],[257,14,227,10,"hasUnresolvedRefs"],[257,31,227,27],[257,32,227,28],[257,37,227,33,"props"],[257,42,227,27],[257,43,227,6],[257,45,227,41],[258,0,234,8],[258,17,234,13,"_updateEnqueued"],[258,32,234,8],[258,35,234,31,"setImmediate"],[258,47,234,43],[258,48,234,44],[258,60,234,50],[259,0,235,10],[259,14,235,10],[259,20,235,14],[259,21,235,15,"_updateEnqueued"],[259,36,235,10],[259,39,235,33],[259,43,235,10],[261,0,236,10],[261,14,236,10],[261,20,236,14],[261,21,236,15,"_update"],[261,28,236,10],[262,0,237,9],[262,13,234,43],[262,14,234,8],[263,0,238,7],[265,0,240,6],[265,15,240,11,"_createGestureHandler"],[265,36,240,6],[265,37,241,8,"filterConfig"],[265,49,241,20],[265,50,242,10,"transformProps"],[265,64,242,24],[265,67,242,27,"transformProps"],[265,81,242,41],[265,82,242,42],[265,87,242,47,"props"],[265,92,242,41],[265,93,242,24],[265,96,242,56],[265,101,242,61,"props"],[265,106,241,20],[265,126,243,15],[265,131,243,20,"constructor"],[265,142,243,15],[265,143,243,32,"propTypes"],[265,152,241,20],[265,158,243,46,"customNativeProps"],[265,175,241,20],[265,178,244,10,"config"],[265,184,241,20],[265,185,240,6],[267,0,247,6],[267,15,247,11,"_attachGestureHandler"],[267,36,247,6],[267,37,247,33,"findNodeHandle"],[267,51,247,47],[267,52,247,48],[267,57,247,53,"_viewNode"],[267,66,247,47],[267,67,247,6],[268,0,248,5],[269,0,138,2],[270,0,138,2],[271,0,138,2],[271,45,250,25],[272,0,251,6],[272,14,251,12,"viewTag"],[272,21,251,19],[272,24,251,22,"findNodeHandle"],[272,38,251,36],[272,39,251,37],[272,44,251,42,"_viewNode"],[272,53,251,36],[272,54,251,6],[274,0,252,6],[274,14,252,10],[274,19,252,15,"_viewTag"],[274,27,252,10],[274,32,252,28,"viewTag"],[274,39,252,6],[274,41,252,37],[275,0,253,8],[275,17,253,13,"_attachGestureHandler"],[275,38,253,8],[275,39,253,35,"viewTag"],[275,46,253,8],[276,0,254,7],[278,0,255,6],[278,15,255,11,"_update"],[278,22,255,6],[279,0,256,5],[280,0,138,2],[281,0,138,2],[282,0,138,2],[282,34,258,14],[283,0,259,6],[283,14,259,12,"newConfig"],[283,23,259,21],[283,26,259,24,"filterConfig"],[283,38,259,36],[283,39,260,8,"transformProps"],[283,53,260,22],[283,56,260,25,"transformProps"],[283,70,260,39],[283,71,260,40],[283,76,260,45,"props"],[283,81,260,39],[283,82,260,22],[283,85,260,54],[283,90,260,59,"props"],[283,95,259,36],[283,115,261,13],[283,120,261,18,"constructor"],[283,131,261,13],[283,132,261,30,"propTypes"],[283,141,259,36],[283,147,261,44,"customNativeProps"],[283,164,259,36],[283,167,262,8,"config"],[283,173,259,36],[283,174,259,6],[285,0,264,6],[285,14,264,10],[285,15,264,11],[285,38,264,21],[285,43,264,26,"_config"],[285,50,264,11],[285,52,264,35,"newConfig"],[285,61,264,11],[285,62,264,6],[285,64,264,47],[286,0,265,8],[286,17,265,13,"_updateGestureHandler"],[286,38,265,8],[286,39,265,35,"newConfig"],[286,48,265,8],[287,0,266,7],[288,0,267,5],[289,0,138,2],[290,0,138,2],[291,0,138,2],[291,39,269,19,"updates"],[291,46,138,2],[291,48,269,28],[292,0,270,6],[292,14,270,12,"mergedProps"],[292,25,270,23],[292,46,270,31],[292,51,270,36,"props"],[292,56,270,23],[292,62,270,46,"updates"],[292,69,270,23],[292,70,270,6],[294,0,271,6],[294,14,271,12,"newConfig"],[294,23,271,21],[294,26,271,24,"filterConfig"],[294,38,271,36],[294,39,272,8,"transformProps"],[294,53,272,22],[294,56,272,25,"transformProps"],[294,70,272,39],[294,71,272,40,"mergedProps"],[294,82,272,39],[294,83,272,22],[294,86,272,55,"mergedProps"],[294,97,271,36],[294,117,273,13],[294,122,273,18,"constructor"],[294,133,273,13],[294,134,273,30,"propTypes"],[294,143,271,36],[294,149,273,44,"customNativeProps"],[294,166,271,36],[294,169,274,8,"config"],[294,175,271,36],[294,176,271,6],[296,0,276,6],[296,15,276,11,"_updateGestureHandler"],[296,36,276,6],[296,37,276,33,"newConfig"],[296,46,276,6],[297,0,277,5],[298,0,138,2],[299,0,138,2],[300,0,138,2],[300,33,279,13],[301,0,280,6],[301,14,280,10,"gestureEventHandler"],[301,33,280,29],[301,36,280,32],[301,41,280,37,"_onGestureHandlerEvent"],[301,63,280,6],[302,0,279,13],[302,28,281,56],[302,33,281,61,"props"],[302,38,279,13],[303,0,279,13],[303,14,281,14,"onGestureEvent"],[303,28,279,13],[303,43,281,14,"onGestureEvent"],[303,57,279,13],[304,0,279,13],[304,14,281,30,"onGestureHandlerEvent"],[304,35,279,13],[304,50,281,30,"onGestureHandlerEvent"],[304,71,279,13],[306,0,282,6],[306,14,282,10,"onGestureEvent"],[306,28,282,24],[306,32,282,28],[306,39,282,35,"onGestureEvent"],[306,53,282,28],[306,58,282,54],[306,68,282,6],[306,70,282,66],[307,0,286,8],[307,16,286,12,"onGestureHandlerEvent"],[307,37,286,8],[307,39,286,35],[308,0,287,10],[308,20,287,16],[308,24,287,20,"Error"],[308,29,287,16],[308,30,288,12],[308,103,287,16],[308,104,287,10],[309,0,290,9],[311,0,291,8,"gestureEventHandler"],[311,12,291,8,"gestureEventHandler"],[311,31,291,27],[311,34,291,30],[311,39,291,35,"props"],[311,44,291,30],[311,45,291,41,"onGestureEvent"],[311,59,291,8],[312,0,292,7],[312,11,282,6],[312,17,292,13],[313,0,293,8],[313,16,294,10,"onGestureHandlerEvent"],[313,37,294,31],[313,41,295,10],[313,48,295,17,"onGestureHandlerEvent"],[313,69,295,10],[313,74,295,43],[313,84,293,8],[313,86,296,10],[314,0,297,10],[314,20,297,16],[314,24,297,20,"Error"],[314,29,297,16],[314,30,298,12],[314,103,297,16],[314,104,297,10],[315,0,300,9],[316,0,301,7],[318,0,303,6],[318,14,303,10,"gestureStateEventHandler"],[318,38,303,34],[318,41,303,37],[318,46,303,42,"_onGestureHandlerStateChange"],[318,74,303,6],[319,0,279,13],[319,29,304,68],[319,34,304,73,"props"],[319,39,279,13],[320,0,279,13],[320,14,304,14,"onHandlerStateChange"],[320,34,279,13],[320,50,304,14,"onHandlerStateChange"],[320,70,279,13],[321,0,279,13],[321,14,304,36,"onGestureHandlerStateChange"],[321,41,279,13],[321,57,304,36,"onGestureHandlerStateChange"],[321,84,279,13],[323,0,305,6],[323,14,305,10,"onHandlerStateChange"],[323,34,305,30],[323,38,305,34],[323,45,305,41,"onHandlerStateChange"],[323,65,305,34],[323,70,305,66],[323,80,305,6],[323,82,305,78],[324,0,309,8],[324,16,309,12,"onGestureHandlerStateChange"],[324,43,309,8],[324,45,309,41],[325,0,310,10],[325,20,310,16],[325,24,310,20,"Error"],[325,29,310,16],[325,30,311,12],[325,103,310,16],[325,104,310,10],[326,0,313,9],[328,0,314,8,"gestureStateEventHandler"],[328,12,314,8,"gestureStateEventHandler"],[328,36,314,32],[328,39,314,35],[328,44,314,40,"props"],[328,49,314,35],[328,50,314,46,"onHandlerStateChange"],[328,70,314,8],[329,0,315,7],[329,11,305,6],[329,17,315,13],[330,0,316,8],[330,16,317,10,"onGestureHandlerStateChange"],[330,43,317,37],[330,47,318,10],[330,54,318,17,"onGestureHandlerStateChange"],[330,81,318,10],[330,86,318,49],[330,96,316,8],[330,98,319,10],[331,0,320,10],[331,20,320,16],[331,24,320,20,"Error"],[331,29,320,16],[331,30,321,12],[331,103,320,16],[331,104,320,10],[332,0,323,9],[333,0,324,7],[335,0,326,6],[335,14,326,12,"child"],[335,19,326,17],[335,22,326,20,"React"],[335,37,326,26,"Children"],[335,45,326,20],[335,46,326,35,"only"],[335,50,326,20],[335,51,326,40],[335,56,326,45,"props"],[335,61,326,40],[335,62,326,51,"children"],[335,70,326,20],[335,71,326,6],[337,0,327,6],[337,14,327,10,"grandChildren"],[337,27,327,23],[337,30,327,26,"child"],[337,35,327,31],[337,36,327,32,"props"],[337,41,327,26],[337,42,327,38,"children"],[337,50,327,6],[339,0,328,6],[339,14,329,8,"Touchable"],[339,37,329,18,"TOUCH_TARGET_DEBUG"],[339,55,329,8],[339,59,330,8,"child"],[339,64,330,13],[339,65,330,14,"type"],[339,69,329,8],[339,74,331,9,"child"],[339,79,331,14],[339,80,331,15,"type"],[339,84,331,9],[339,89,331,24],[339,113,331,9],[339,117,332,10,"child"],[339,122,332,15],[339,123,332,16,"type"],[339,127,332,10],[339,128,332,21,"name"],[339,132,332,10],[339,137,332,30],[339,143,331,9],[339,147,333,10,"child"],[339,152,333,15],[339,153,333,16,"type"],[339,157,333,10],[339,158,333,21,"displayName"],[339,169,333,10],[339,174,333,37],[339,180,329,8],[339,181,328,6],[339,183,334,8],[340,0,335,8,"grandChildren"],[340,12,335,8,"grandChildren"],[340,25,335,21],[340,28,335,24,"React"],[340,43,335,30,"Children"],[340,51,335,24],[340,52,335,39,"toArray"],[340,59,335,24],[340,60,335,47,"grandChildren"],[340,73,335,24],[340,74,335,8],[341,0,336,8,"grandChildren"],[341,12,336,8,"grandChildren"],[341,25,336,21],[341,26,336,22,"push"],[341,30,336,8],[341,31,337,10,"Touchable"],[341,54,337,20,"renderDebugView"],[341,69,337,10],[341,70,337,36],[342,0,338,12,"color"],[342,14,338,12,"color"],[342,19,338,17],[342,21,338,19],[342,40,337,36],[343,0,339,12,"hitSlop"],[343,14,339,12,"hitSlop"],[343,21,339,19],[343,23,339,21,"child"],[343,28,339,26],[343,29,339,27,"props"],[343,34,339,21],[343,35,339,33,"hitSlop"],[344,0,337,36],[344,13,337,10],[344,14,336,8],[345,0,342,7],[347,0,343,6],[347,17,343,13,"React"],[347,32,343,19,"cloneElement"],[347,44,343,13],[347,45,344,8,"child"],[347,50,343,13],[347,52,345,8],[348,0,346,10,"ref"],[348,12,346,10,"ref"],[348,15,346,13],[348,17,346,15],[348,22,346,20,"_refHandler"],[348,33,345,8],[349,0,347,10,"collapsable"],[349,12,347,10,"collapsable"],[349,23,347,21],[349,25,347,23],[349,30,345,8],[350,0,348,10,"onGestureHandlerEvent"],[350,12,348,10,"onGestureHandlerEvent"],[350,33,348,31],[350,35,348,33,"gestureEventHandler"],[350,54,345,8],[351,0,349,10,"onGestureHandlerStateChange"],[351,12,349,10,"onGestureHandlerStateChange"],[351,39,349,37],[351,41,349,39,"gestureStateEventHandler"],[352,0,345,8],[352,11,343,13],[352,13,351,8,"grandChildren"],[352,26,343,13],[352,27,343,6],[353,0,353,5],[354,0,138,2],[355,0,138,2],[356,0,138,2],[356,6,139,24,"React"],[356,21,139,30,"Component"],[356,30,138,2],[358,0,139,8,"Handler"],[358,4,139,8,"Handler"],[358,11,138,2],[358,12,140,11,"displayName"],[358,23,138,2],[358,26,140,25,"handlerName"],[358,37,138,2],[359,0,139,8,"Handler"],[359,4,139,8,"Handler"],[359,11,138,2],[359,12,142,11,"propTypes"],[359,21,138,2],[359,24,142,23,"propTypes"],[359,33,138,2],[360,0,355,2],[360,11,355,9,"Handler"],[360,18,355,2],[361,0,356,1]],"functionMap":{"names":["<global>","findNodeHandle","<anonymous>","UIManager.setJSResponder","UIManager.clearJSResponder","UIManager.getConstants","isConfigParam","filterConfig","Object.keys.forEach$argument_0","transformIntoHandlerTags","handlerIDs.map$argument_0","handlerIDs.map.filter$argument_0","hasUnresolvedRefs","extract","refs.some$argument_0","createHandler","Handler","Handler#constructor","Handler#_onGestureHandlerEvent","Handler#_onGestureHandlerStateChange","Handler#_refHandler","Handler#_createGestureHandler","Handler#_attachGestureHandler","Handler#_updateGestureHandler","Handler#componentWillUnmount","Handler#componentDidMount","setImmediate$argument_0","Handler#componentDidUpdate","Handler#_update","Handler#setNativeProps","Handler#render"],"mappings":"AAA;ACW;CDG;sCEsB,QF;0CEC,QF;kCEC,UF;2BGE;CHG;6BIC;CJG;yBKG;CLS;AMK;CNS;AOE;kCCE;GDa;CPE;ASE;0BCM,wBD,SE,gBF;MCK;UDG;YEE,4BF;CTC;AYE;kBCC;qBCI,4BD;GDC;CZE;eeU;ECO;ICK;KDU;6BEE;KFO;mCGE;KHa;kBIE;KJY;4BKE;KLQ;4BME;KNI;4BOE;KPI;IQE;KRQ;ISE;4CCQ;SDG;KTW;IWE;KXM;IYE;KZS;IaE;KbQ;IcE;Kd0E;GDC;CfE"}},"type":"js/module"}]}