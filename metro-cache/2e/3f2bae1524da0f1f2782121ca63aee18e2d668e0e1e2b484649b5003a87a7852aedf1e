{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/objectWithoutProperties","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/inherits","data":{"isAsync":false}},{"name":"./NativeWebSocketModule","data":{"isAsync":false}},{"name":"../Blob/Blob","data":{"isAsync":false}},{"name":"../Blob/BlobManager","data":{"isAsync":false}},{"name":"event-target-shim","data":{"isAsync":false}},{"name":"../EventEmitter/NativeEventEmitter","data":{"isAsync":false}},{"name":"../Utilities/Platform","data":{"isAsync":false}},{"name":"./WebSocketEvent","data":{"isAsync":false}},{"name":"base64-js","data":{"isAsync":false}},{"name":"../Utilities/binaryToBase64","data":{"isAsync":false}},{"name":"invariant","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/objectWithoutProperties\"));\n\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/createClass\"));\n\n  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n\n  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/getPrototypeOf\"));\n\n  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"@babel/runtime/helpers/inherits\"));\n\n  var _NativeWebSocketModule = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"./NativeWebSocketModule\"));\n\n  var Blob = _$$_REQUIRE(_dependencyMap[8], \"../Blob/Blob\");\n\n  var BlobManager = _$$_REQUIRE(_dependencyMap[9], \"../Blob/BlobManager\");\n\n  var EventTarget = _$$_REQUIRE(_dependencyMap[10], \"event-target-shim\");\n\n  var NativeEventEmitter = _$$_REQUIRE(_dependencyMap[11], \"../EventEmitter/NativeEventEmitter\");\n\n  var Platform = _$$_REQUIRE(_dependencyMap[12], \"../Utilities/Platform\");\n\n  var WebSocketEvent = _$$_REQUIRE(_dependencyMap[13], \"./WebSocketEvent\");\n\n  var base64 = _$$_REQUIRE(_dependencyMap[14], \"base64-js\");\n\n  var binaryToBase64 = _$$_REQUIRE(_dependencyMap[15], \"../Utilities/binaryToBase64\");\n\n  var invariant = _$$_REQUIRE(_dependencyMap[16], \"invariant\");\n\n  var CONNECTING = 0;\n  var OPEN = 1;\n  var CLOSING = 2;\n  var CLOSED = 3;\n  var CLOSE_NORMAL = 1000;\n  var WEBSOCKET_EVENTS = ['close', 'error', 'message', 'open'];\n  var nextWebSocketId = 0;\n\n  var WebSocket = function (_ref) {\n    (0, _inherits2.default)(WebSocket, _ref);\n\n    function WebSocket(url, protocols, options) {\n      var _this;\n\n      (0, _classCallCheck2.default)(this, WebSocket);\n      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(WebSocket).call(this));\n      _this.CONNECTING = CONNECTING;\n      _this.OPEN = OPEN;\n      _this.CLOSING = CLOSING;\n      _this.CLOSED = CLOSED;\n      _this.readyState = CONNECTING;\n\n      if (typeof protocols === 'string') {\n        protocols = [protocols];\n      }\n\n      var _ref2 = options || {},\n          _ref2$headers = _ref2.headers,\n          headers = _ref2$headers === void 0 ? {} : _ref2$headers,\n          unrecognized = (0, _objectWithoutProperties2.default)(_ref2, [\"headers\"]);\n\n      if (unrecognized && typeof unrecognized.origin === 'string') {\n        console.warn('Specifying `origin` as a WebSocket connection option is deprecated. Include it under `headers` instead.');\n        headers.origin = unrecognized.origin;\n        delete unrecognized.origin;\n      }\n\n      if (Object.keys(unrecognized).length > 0) {\n        console.warn('Unrecognized WebSocket connection option(s) `' + Object.keys(unrecognized).join('`, `') + '`. ' + 'Did you mean to put these under `headers`?');\n      }\n\n      if (!Array.isArray(protocols)) {\n        protocols = null;\n      }\n\n      _this._eventEmitter = new NativeEventEmitter(_NativeWebSocketModule.default);\n      _this._socketId = nextWebSocketId++;\n\n      _this._registerEvents();\n\n      _NativeWebSocketModule.default.connect(url, protocols, {\n        headers: headers\n      }, _this._socketId);\n\n      return _this;\n    }\n\n    (0, _createClass2.default)(WebSocket, [{\n      key: \"close\",\n      value: function close(code, reason) {\n        if (this.readyState === this.CLOSING || this.readyState === this.CLOSED) {\n          return;\n        }\n\n        this.readyState = this.CLOSING;\n\n        this._close(code, reason);\n      }\n    }, {\n      key: \"send\",\n      value: function send(data) {\n        if (this.readyState === this.CONNECTING) {\n          throw new Error('INVALID_STATE_ERR');\n        }\n\n        if (data instanceof Blob) {\n          invariant(BlobManager.isAvailable, 'Native module BlobModule is required for blob support');\n          BlobManager.sendOverSocket(data, this._socketId);\n          return;\n        }\n\n        if (typeof data === 'string') {\n          _NativeWebSocketModule.default.send(data, this._socketId);\n\n          return;\n        }\n\n        if (data instanceof ArrayBuffer || ArrayBuffer.isView(data)) {\n          _NativeWebSocketModule.default.sendBinary(binaryToBase64(data), this._socketId);\n\n          return;\n        }\n\n        throw new Error('Unsupported data type');\n      }\n    }, {\n      key: \"ping\",\n      value: function ping() {\n        if (this.readyState === this.CONNECTING) {\n          throw new Error('INVALID_STATE_ERR');\n        }\n\n        _NativeWebSocketModule.default.ping(this._socketId);\n      }\n    }, {\n      key: \"_close\",\n      value: function _close(code, reason) {\n        var statusCode = typeof code === 'number' ? code : CLOSE_NORMAL;\n        var closeReason = typeof reason === 'string' ? reason : '';\n\n        _NativeWebSocketModule.default.close(statusCode, closeReason, this._socketId);\n\n        if (BlobManager.isAvailable && this._binaryType === 'blob') {\n          BlobManager.removeWebSocketHandler(this._socketId);\n        }\n      }\n    }, {\n      key: \"_unregisterEvents\",\n      value: function _unregisterEvents() {\n        this._subscriptions.forEach(function (e) {\n          return e.remove();\n        });\n\n        this._subscriptions = [];\n      }\n    }, {\n      key: \"_registerEvents\",\n      value: function _registerEvents() {\n        var _this2 = this;\n\n        this._subscriptions = [this._eventEmitter.addListener('websocketMessage', function (ev) {\n          if (ev.id !== _this2._socketId) {\n            return;\n          }\n\n          var data = ev.data;\n\n          switch (ev.type) {\n            case 'binary':\n              data = base64.toByteArray(ev.data).buffer;\n              break;\n\n            case 'blob':\n              data = BlobManager.createFromOptions(ev.data);\n              break;\n          }\n\n          _this2.dispatchEvent(new WebSocketEvent('message', {\n            data: data\n          }));\n        }), this._eventEmitter.addListener('websocketOpen', function (ev) {\n          if (ev.id !== _this2._socketId) {\n            return;\n          }\n\n          _this2.readyState = _this2.OPEN;\n          _this2.protocol = ev.protocol;\n\n          _this2.dispatchEvent(new WebSocketEvent('open'));\n        }), this._eventEmitter.addListener('websocketClosed', function (ev) {\n          if (ev.id !== _this2._socketId) {\n            return;\n          }\n\n          _this2.readyState = _this2.CLOSED;\n\n          _this2.dispatchEvent(new WebSocketEvent('close', {\n            code: ev.code,\n            reason: ev.reason\n          }));\n\n          _this2._unregisterEvents();\n\n          _this2.close();\n        }), this._eventEmitter.addListener('websocketFailed', function (ev) {\n          if (ev.id !== _this2._socketId) {\n            return;\n          }\n\n          _this2.readyState = _this2.CLOSED;\n\n          _this2.dispatchEvent(new WebSocketEvent('error', {\n            message: ev.message\n          }));\n\n          _this2.dispatchEvent(new WebSocketEvent('close', {\n            message: ev.message\n          }));\n\n          _this2._unregisterEvents();\n\n          _this2.close();\n        })];\n      }\n    }, {\n      key: \"binaryType\",\n      get: function get() {\n        return this._binaryType;\n      },\n      set: function set(binaryType) {\n        if (binaryType !== 'blob' && binaryType !== 'arraybuffer') {\n          throw new Error(\"binaryType must be either 'blob' or 'arraybuffer'\");\n        }\n\n        if (this._binaryType === 'blob' || binaryType === 'blob') {\n          invariant(BlobManager.isAvailable, 'Native module BlobModule is required for blob support');\n\n          if (binaryType === 'blob') {\n            BlobManager.addWebSocketHandler(this._socketId);\n          } else {\n            BlobManager.removeWebSocketHandler(this._socketId);\n          }\n        }\n\n        this._binaryType = binaryType;\n      }\n    }]);\n    return WebSocket;\n  }(EventTarget.apply(void 0, WEBSOCKET_EVENTS));\n\n  WebSocket.CONNECTING = CONNECTING;\n  WebSocket.OPEN = OPEN;\n  WebSocket.CLOSING = CLOSING;\n  WebSocket.CLOSED = CLOSED;\n  module.exports = WebSocket;\n});","lineCount":263,"map":[[2,0,11,0],[18,0,25,0],[20,0,13,0],[20,6,13,6,"Blob"],[20,10,13,10],[20,13,13,13,"require"],[20,24,13,20],[20,59,13,0],[22,0,14,0],[22,6,14,6,"BlobManager"],[22,17,14,17],[22,20,14,20,"require"],[22,31,14,27],[22,73,14,0],[24,0,15,0],[24,6,15,6,"EventTarget"],[24,17,15,17],[24,20,15,20,"require"],[24,31,15,27],[24,72,15,0],[26,0,16,0],[26,6,16,6,"NativeEventEmitter"],[26,24,16,24],[26,27,16,27,"require"],[26,38,16,34],[26,96,16,0],[28,0,17,0],[28,6,17,6,"Platform"],[28,14,17,14],[28,17,17,17,"require"],[28,28,17,24],[28,73,17,0],[30,0,18,0],[30,6,18,6,"WebSocketEvent"],[30,20,18,20],[30,23,18,23,"require"],[30,34,18,30],[30,74,18,0],[32,0,20,0],[32,6,20,6,"base64"],[32,12,20,12],[32,15,20,15,"require"],[32,26,20,22],[32,59,20,0],[34,0,21,0],[34,6,21,6,"binaryToBase64"],[34,20,21,20],[34,23,21,23,"require"],[34,34,21,30],[34,85,21,0],[36,0,22,0],[36,6,22,6,"invariant"],[36,15,22,15],[36,18,22,18,"require"],[36,29,22,25],[36,62,22,0],[38,0,41,0],[38,6,41,6,"CONNECTING"],[38,16,41,16],[38,19,41,19],[38,20,41,0],[39,0,42,0],[39,6,42,6,"OPEN"],[39,10,42,10],[39,13,42,13],[39,14,42,0],[40,0,43,0],[40,6,43,6,"CLOSING"],[40,13,43,13],[40,16,43,16],[40,17,43,0],[41,0,44,0],[41,6,44,6,"CLOSED"],[41,12,44,12],[41,15,44,15],[41,16,44,0],[42,0,46,0],[42,6,46,6,"CLOSE_NORMAL"],[42,18,46,18],[42,21,46,21],[42,25,46,0],[43,0,48,0],[43,6,48,6,"WEBSOCKET_EVENTS"],[43,22,48,22],[43,25,48,25],[43,26,48,26],[43,33,48,25],[43,35,48,35],[43,42,48,25],[43,44,48,44],[43,53,48,25],[43,55,48,55],[43,61,48,25],[43,62,48,0],[44,0,50,0],[44,6,50,4,"nextWebSocketId"],[44,21,50,19],[44,24,50,22],[44,25,50,0],[46,6,58,6,"WebSocket"],[46,15],[49,0,85,2],[49,23,86,4,"url"],[49,26,85,2],[49,28,87,4,"protocols"],[49,37,85,2],[49,39,88,4,"options"],[49,46,85,2],[49,48,89,4],[50,0,89,4],[52,0,89,4],[53,0,90,4],[54,0,89,4],[54,12,64,2,"CONNECTING"],[54,22,89,4],[54,25,64,23,"CONNECTING"],[54,35,89,4],[55,0,89,4],[55,12,65,2,"OPEN"],[55,16,89,4],[55,19,65,17,"OPEN"],[55,23,89,4],[56,0,89,4],[56,12,66,2,"CLOSING"],[56,19,89,4],[56,22,66,20,"CLOSING"],[56,29,89,4],[57,0,89,4],[57,12,67,2,"CLOSED"],[57,18,89,4],[57,21,67,19,"CLOSED"],[57,27,89,4],[58,0,89,4],[58,12,82,2,"readyState"],[58,22,89,4],[58,25,82,23,"CONNECTING"],[58,35,89,4],[60,0,91,4],[60,10,91,8],[60,17,91,15,"protocols"],[60,26,91,8],[60,31,91,29],[60,39,91,4],[60,41,91,39],[61,0,92,6,"protocols"],[61,8,92,6,"protocols"],[61,17,92,15],[61,20,92,18],[61,21,92,19,"protocols"],[61,30,92,18],[61,31,92,6],[62,0,93,5],[64,0,89,4],[64,18,95,44,"options"],[64,25,95,51],[64,29,95,55],[64,31,89,4],[65,0,89,4],[65,32,95,11,"headers"],[65,39,89,4],[66,0,89,4],[66,10,95,11,"headers"],[66,17,89,4],[66,47,95,21],[66,49,89,4],[67,0,89,4],[67,10,95,28,"unrecognized"],[67,22,89,4],[69,0,101,4],[69,10,101,8,"unrecognized"],[69,22,101,20],[69,26,101,24],[69,33,101,31,"unrecognized"],[69,45,101,43],[69,46,101,44,"origin"],[69,52,101,24],[69,57,101,55],[69,65,101,4],[69,67,101,65],[70,0,102,6,"console"],[70,8,102,6,"console"],[70,15,102,13],[70,16,102,14,"warn"],[70,20,102,6],[70,21,103,8],[70,126,102,6],[71,0,108,6,"headers"],[71,8,108,6,"headers"],[71,15,108,13],[71,16,108,14,"origin"],[71,22,108,6],[71,25,108,23,"unrecognized"],[71,37,108,35],[71,38,108,36,"origin"],[71,44,108,6],[72,0,112,6],[72,15,112,13,"unrecognized"],[72,27,112,25],[72,28,112,26,"origin"],[72,34,112,6],[73,0,113,5],[75,0,116,4],[75,10,116,8,"Object"],[75,16,116,14],[75,17,116,15,"keys"],[75,21,116,8],[75,22,116,20,"unrecognized"],[75,34,116,8],[75,36,116,34,"length"],[75,42,116,8],[75,45,116,43],[75,46,116,4],[75,48,116,46],[76,0,117,6,"console"],[76,8,117,6,"console"],[76,15,117,13],[76,16,117,14,"warn"],[76,20,117,6],[76,21,118,8],[76,71,119,10,"Object"],[76,77,119,16],[76,78,119,17,"keys"],[76,82,119,10],[76,83,119,22,"unrecognized"],[76,95,119,10],[76,97,119,36,"join"],[76,101,119,10],[76,102,119,41],[76,108,119,10],[76,109,118,8],[76,112,120,10],[76,117,118,8],[76,120,121,10],[76,164,117,6],[77,0,123,5],[79,0,125,4],[79,10,125,8],[79,11,125,9,"Array"],[79,16,125,14],[79,17,125,15,"isArray"],[79,24,125,9],[79,25,125,23,"protocols"],[79,34,125,9],[79,35,125,4],[79,37,125,35],[80,0,126,6,"protocols"],[80,8,126,6,"protocols"],[80,17,126,15],[80,20,126,18],[80,24,126,6],[81,0,127,5],[83,0,129,4],[83,12,129,9,"_eventEmitter"],[83,25,129,4],[83,28,129,25],[83,32,129,29,"NativeEventEmitter"],[83,50,129,25],[83,51,129,48,"NativeWebSocketModule"],[83,81,129,25],[83,82,129,4],[84,0,130,4],[84,12,130,9,"_socketId"],[84,21,130,4],[84,24,130,21,"nextWebSocketId"],[84,39,130,36],[84,41,130,4],[86,0,131,4],[86,12,131,9,"_registerEvents"],[86,27,131,4],[88,0,132,4,"NativeWebSocketModule"],[88,37,132,26,"connect"],[88,44,132,4],[88,45,132,34,"url"],[88,48,132,4],[88,50,132,39,"protocols"],[88,59,132,4],[88,61,132,50],[89,0,132,51,"headers"],[89,8,132,51,"headers"],[89,15,132,58],[89,17,132,51,"headers"],[90,0,132,50],[90,7,132,4],[90,9,132,61],[90,15,132,66,"_socketId"],[90,24,132,4],[92,0,89,4],[93,0,133,3],[97,28,157,8,"code"],[97,32],[97,34,157,23,"reason"],[97,40],[97,42,157,46],[98,0,158,4],[98,12,158,8],[98,17,158,13,"readyState"],[98,27,158,8],[98,32,158,28],[98,37,158,33,"CLOSING"],[98,44,158,8],[98,48,158,44],[98,53,158,49,"readyState"],[98,63,158,44],[98,68,158,64],[98,73,158,69,"CLOSED"],[98,79,158,4],[98,81,158,77],[99,0,159,6],[100,0,160,5],[102,0,162,4],[102,13,162,9,"readyState"],[102,23,162,4],[102,26,162,22],[102,31,162,27,"CLOSING"],[102,38,162,4],[104,0,163,4],[104,13,163,9,"_close"],[104,19,163,4],[104,20,163,16,"code"],[104,24,163,4],[104,26,163,22,"reason"],[104,32,163,4],[105,0,164,3],[108,27,166,7,"data"],[108,31],[108,33,166,66],[109,0,167,4],[109,12,167,8],[109,17,167,13,"readyState"],[109,27,167,8],[109,32,167,28],[109,37,167,33,"CONNECTING"],[109,47,167,4],[109,49,167,45],[110,0,168,6],[110,16,168,12],[110,20,168,16,"Error"],[110,25,168,12],[110,26,168,22],[110,45,168,12],[110,46,168,6],[111,0,169,5],[113,0,171,4],[113,12,171,8,"data"],[113,16,171,12],[113,28,171,24,"Blob"],[113,32,171,4],[113,34,171,30],[114,0,172,6,"invariant"],[114,10,172,6,"invariant"],[114,19,172,15],[114,20,173,8,"BlobManager"],[114,31,173,19],[114,32,173,20,"isAvailable"],[114,43,172,15],[114,45,174,8],[114,100,172,15],[114,101,172,6],[115,0,176,6,"BlobManager"],[115,10,176,6,"BlobManager"],[115,21,176,17],[115,22,176,18,"sendOverSocket"],[115,36,176,6],[115,37,176,33,"data"],[115,41,176,6],[115,43,176,39],[115,48,176,44,"_socketId"],[115,57,176,6],[116,0,177,6],[117,0,178,5],[119,0,180,4],[119,12,180,8],[119,19,180,15,"data"],[119,23,180,8],[119,28,180,24],[119,36,180,4],[119,38,180,34],[120,0,181,6,"NativeWebSocketModule"],[120,41,181,28,"send"],[120,45,181,6],[120,46,181,33,"data"],[120,50,181,6],[120,52,181,39],[120,57,181,44,"_socketId"],[120,66,181,6],[122,0,182,6],[123,0,183,5],[125,0,185,4],[125,12,185,8,"data"],[125,16,185,12],[125,28,185,24,"ArrayBuffer"],[125,39,185,8],[125,43,185,39,"ArrayBuffer"],[125,54,185,50],[125,55,185,51,"isView"],[125,61,185,39],[125,62,185,58,"data"],[125,66,185,39],[125,67,185,4],[125,69,185,65],[126,0,186,6,"NativeWebSocketModule"],[126,41,186,28,"sendBinary"],[126,51,186,6],[126,52,186,39,"binaryToBase64"],[126,66,186,53],[126,67,186,54,"data"],[126,71,186,53],[126,72,186,6],[126,74,186,61],[126,79,186,66,"_socketId"],[126,88,186,6],[128,0,187,6],[129,0,188,5],[131,0,190,4],[131,14,190,10],[131,18,190,14,"Error"],[131,23,190,10],[131,24,190,20],[131,47,190,10],[131,48,190,4],[132,0,191,3],[135,29,193,15],[136,0,194,4],[136,12,194,8],[136,17,194,13,"readyState"],[136,27,194,8],[136,32,194,28],[136,37,194,33,"CONNECTING"],[136,47,194,4],[136,49,194,45],[137,0,195,6],[137,16,195,12],[137,20,195,16,"Error"],[137,25,195,12],[137,26,195,22],[137,45,195,12],[137,46,195,6],[138,0,196,5],[140,0,198,4,"NativeWebSocketModule"],[140,39,198,26,"ping"],[140,43,198,4],[140,44,198,31],[140,49,198,36,"_socketId"],[140,58,198,4],[141,0,199,3],[144,29,201,9,"code"],[144,33],[144,35,201,24,"reason"],[144,41],[144,43,201,47],[145,0,203,4],[145,12,203,10,"statusCode"],[145,22,203,20],[145,25,203,23],[145,32,203,30,"code"],[145,36,203,23],[145,41,203,39],[145,49,203,23],[145,52,203,50,"code"],[145,56,203,23],[145,59,203,57,"CLOSE_NORMAL"],[145,71,203,4],[146,0,204,4],[146,12,204,10,"closeReason"],[146,23,204,21],[146,26,204,24],[146,33,204,31,"reason"],[146,39,204,24],[146,44,204,42],[146,52,204,24],[146,55,204,53,"reason"],[146,61,204,24],[146,64,204,62],[146,66,204,4],[148,0,205,4,"NativeWebSocketModule"],[148,39,205,26,"close"],[148,44,205,4],[148,45,205,32,"statusCode"],[148,55,205,4],[148,57,205,44,"closeReason"],[148,68,205,4],[148,70,205,57],[148,75,205,62,"_socketId"],[148,84,205,4],[150,0,207,4],[150,12,207,8,"BlobManager"],[150,23,207,19],[150,24,207,20,"isAvailable"],[150,35,207,8],[150,39,207,35],[150,44,207,40,"_binaryType"],[150,55,207,35],[150,60,207,56],[150,66,207,4],[150,68,207,64],[151,0,208,6,"BlobManager"],[151,10,208,6,"BlobManager"],[151,21,208,17],[151,22,208,18,"removeWebSocketHandler"],[151,44,208,6],[151,45,208,41],[151,50,208,46,"_socketId"],[151,59,208,6],[152,0,209,5],[153,0,210,3],[156,42,212,28],[157,0,213,4],[157,13,213,9,"_subscriptions"],[157,27,213,4],[157,28,213,24,"forEach"],[157,35,213,4],[157,36,213,32],[157,46,213,32,"e"],[157,47,213,33],[158,0,213,33],[158,17,213,37,"e"],[158,18,213,38],[158,19,213,39,"remove"],[158,25,213,37],[158,27,213,33],[159,0,213,33],[159,9,213,4],[161,0,214,4],[161,13,214,9,"_subscriptions"],[161,27,214,4],[161,30,214,26],[161,32,214,4],[162,0,215,3],[165,40,217,26],[166,0,217,26],[168,0,218,4],[168,13,218,9,"_subscriptions"],[168,27,218,4],[168,30,218,26],[168,31,219,6],[168,36,219,11,"_eventEmitter"],[168,49,219,6],[168,50,219,25,"addListener"],[168,61,219,6],[168,62,219,37],[168,80,219,6],[168,82,219,57],[168,92,219,57,"ev"],[168,94,219,59],[168,96,219,63],[169,0,220,8],[169,14,220,12,"ev"],[169,16,220,14],[169,17,220,15,"id"],[169,19,220,12],[169,24,220,22],[169,30,220,26],[169,31,220,27,"_socketId"],[169,40,220,8],[169,42,220,38],[170,0,221,10],[171,0,222,9],[173,0,223,8],[173,14,223,12,"data"],[173,18,223,16],[173,21,223,19,"ev"],[173,23,223,21],[173,24,223,22,"data"],[173,28,223,8],[175,0,224,8],[175,18,224,16,"ev"],[175,20,224,18],[175,21,224,19,"type"],[175,25,224,8],[176,0,225,10],[176,17,225,15],[176,25,225,10],[177,0,226,12,"data"],[177,14,226,12,"data"],[177,18,226,16],[177,21,226,19,"base64"],[177,27,226,25],[177,28,226,26,"toByteArray"],[177,39,226,19],[177,40,226,38,"ev"],[177,42,226,40],[177,43,226,41,"data"],[177,47,226,19],[177,49,226,47,"buffer"],[177,55,226,12],[178,0,227,12],[180,0,228,10],[180,17,228,15],[180,23,228,10],[181,0,229,12,"data"],[181,14,229,12,"data"],[181,18,229,16],[181,21,229,19,"BlobManager"],[181,32,229,30],[181,33,229,31,"createFromOptions"],[181,50,229,19],[181,51,229,49,"ev"],[181,53,229,51],[181,54,229,52,"data"],[181,58,229,19],[181,59,229,12],[182,0,230,12],[183,0,224,8],[185,0,232,8],[185,10,232,8],[185,16,232,12],[185,17,232,13,"dispatchEvent"],[185,30,232,8],[185,31,232,27],[185,35,232,31,"WebSocketEvent"],[185,49,232,27],[185,50,232,46],[185,59,232,27],[185,61,232,57],[186,0,232,58,"data"],[186,12,232,58,"data"],[186,16,232,62],[186,18,232,58,"data"],[187,0,232,57],[187,11,232,27],[187,12,232,8],[188,0,233,7],[188,9,219,6],[188,10,218,26],[188,12,234,6],[188,17,234,11,"_eventEmitter"],[188,30,234,6],[188,31,234,25,"addListener"],[188,42,234,6],[188,43,234,37],[188,58,234,6],[188,60,234,54],[188,70,234,54,"ev"],[188,72,234,56],[188,74,234,60],[189,0,235,8],[189,14,235,12,"ev"],[189,16,235,14],[189,17,235,15,"id"],[189,19,235,12],[189,24,235,22],[189,30,235,26],[189,31,235,27,"_socketId"],[189,40,235,8],[189,42,235,38],[190,0,236,10],[191,0,237,9],[193,0,238,8],[193,10,238,8],[193,16,238,12],[193,17,238,13,"readyState"],[193,27,238,8],[193,30,238,26],[193,36,238,30],[193,37,238,31,"OPEN"],[193,41,238,8],[194,0,239,8],[194,10,239,8],[194,16,239,12],[194,17,239,13,"protocol"],[194,25,239,8],[194,28,239,24,"ev"],[194,30,239,26],[194,31,239,27,"protocol"],[194,39,239,8],[196,0,240,8],[196,10,240,8],[196,16,240,12],[196,17,240,13,"dispatchEvent"],[196,30,240,8],[196,31,240,27],[196,35,240,31,"WebSocketEvent"],[196,49,240,27],[196,50,240,46],[196,56,240,27],[196,57,240,8],[197,0,241,7],[197,9,234,6],[197,10,218,26],[197,12,242,6],[197,17,242,11,"_eventEmitter"],[197,30,242,6],[197,31,242,25,"addListener"],[197,42,242,6],[197,43,242,37],[197,60,242,6],[197,62,242,56],[197,72,242,56,"ev"],[197,74,242,58],[197,76,242,62],[198,0,243,8],[198,14,243,12,"ev"],[198,16,243,14],[198,17,243,15,"id"],[198,19,243,12],[198,24,243,22],[198,30,243,26],[198,31,243,27,"_socketId"],[198,40,243,8],[198,42,243,38],[199,0,244,10],[200,0,245,9],[202,0,246,8],[202,10,246,8],[202,16,246,12],[202,17,246,13,"readyState"],[202,27,246,8],[202,30,246,26],[202,36,246,30],[202,37,246,31,"CLOSED"],[202,43,246,8],[204,0,247,8],[204,10,247,8],[204,16,247,12],[204,17,247,13,"dispatchEvent"],[204,30,247,8],[204,31,248,10],[204,35,248,14,"WebSocketEvent"],[204,49,248,10],[204,50,248,29],[204,57,248,10],[204,59,248,38],[205,0,249,12,"code"],[205,12,249,12,"code"],[205,16,249,16],[205,18,249,18,"ev"],[205,20,249,20],[205,21,249,21,"code"],[205,25,248,38],[206,0,250,12,"reason"],[206,12,250,12,"reason"],[206,18,250,18],[206,20,250,20,"ev"],[206,22,250,22],[206,23,250,23,"reason"],[207,0,248,38],[207,11,248,10],[207,12,247,8],[209,0,253,8],[209,10,253,8],[209,16,253,12],[209,17,253,13,"_unregisterEvents"],[209,34,253,8],[211,0,254,8],[211,10,254,8],[211,16,254,12],[211,17,254,13,"close"],[211,22,254,8],[212,0,255,7],[212,9,242,6],[212,10,218,26],[212,12,256,6],[212,17,256,11,"_eventEmitter"],[212,30,256,6],[212,31,256,25,"addListener"],[212,42,256,6],[212,43,256,37],[212,60,256,6],[212,62,256,56],[212,72,256,56,"ev"],[212,74,256,58],[212,76,256,62],[213,0,257,8],[213,14,257,12,"ev"],[213,16,257,14],[213,17,257,15,"id"],[213,19,257,12],[213,24,257,22],[213,30,257,26],[213,31,257,27,"_socketId"],[213,40,257,8],[213,42,257,38],[214,0,258,10],[215,0,259,9],[217,0,260,8],[217,10,260,8],[217,16,260,12],[217,17,260,13,"readyState"],[217,27,260,8],[217,30,260,26],[217,36,260,30],[217,37,260,31,"CLOSED"],[217,43,260,8],[219,0,261,8],[219,10,261,8],[219,16,261,12],[219,17,261,13,"dispatchEvent"],[219,30,261,8],[219,31,262,10],[219,35,262,14,"WebSocketEvent"],[219,49,262,10],[219,50,262,29],[219,57,262,10],[219,59,262,38],[220,0,263,12,"message"],[220,12,263,12,"message"],[220,19,263,19],[220,21,263,21,"ev"],[220,23,263,23],[220,24,263,24,"message"],[221,0,262,38],[221,11,262,10],[221,12,261,8],[223,0,266,8],[223,10,266,8],[223,16,266,12],[223,17,266,13,"dispatchEvent"],[223,30,266,8],[223,31,267,10],[223,35,267,14,"WebSocketEvent"],[223,49,267,10],[223,50,267,29],[223,57,267,10],[223,59,267,38],[224,0,268,12,"message"],[224,12,268,12,"message"],[224,19,268,19],[224,21,268,21,"ev"],[224,23,268,23],[224,24,268,24,"message"],[225,0,267,38],[225,11,267,10],[225,12,266,8],[227,0,271,8],[227,10,271,8],[227,16,271,12],[227,17,271,13,"_unregisterEvents"],[227,34,271,8],[229,0,272,8],[229,10,272,8],[229,16,272,12],[229,17,272,13,"close"],[229,22,272,8],[230,0,273,7],[230,9,256,6],[230,10,218,26],[230,11,218,4],[231,0,275,3],[234,26,135,32],[235,0,136,4],[235,15,136,11],[235,20,136,16,"_binaryType"],[235,31,136,4],[236,0,137,3],[236,7],[237,24,139,17,"binaryType"],[237,34],[237,36,139,47],[238,0,140,4],[238,12,140,8,"binaryType"],[238,22,140,18],[238,27,140,23],[238,33,140,8],[238,37,140,33,"binaryType"],[238,47,140,43],[238,52,140,48],[238,65,140,4],[238,67,140,63],[239,0,141,6],[239,16,141,12],[239,20,141,16,"Error"],[239,25,141,12],[239,26,141,22],[239,77,141,12],[239,78,141,6],[240,0,142,5],[242,0,143,4],[242,12,143,8],[242,17,143,13,"_binaryType"],[242,28,143,8],[242,33,143,29],[242,39,143,8],[242,43,143,39,"binaryType"],[242,53,143,49],[242,58,143,54],[242,64,143,4],[242,66,143,62],[243,0,144,6,"invariant"],[243,10,144,6,"invariant"],[243,19,144,15],[243,20,145,8,"BlobManager"],[243,31,145,19],[243,32,145,20,"isAvailable"],[243,43,144,15],[243,45,146,8],[243,100,144,15],[243,101,144,6],[245,0,148,6],[245,14,148,10,"binaryType"],[245,24,148,20],[245,29,148,25],[245,35,148,6],[245,37,148,33],[246,0,149,8,"BlobManager"],[246,12,149,8,"BlobManager"],[246,23,149,19],[246,24,149,20,"addWebSocketHandler"],[246,43,149,8],[246,44,149,40],[246,49,149,45,"_socketId"],[246,58,149,8],[247,0,150,7],[247,11,148,6],[247,17,150,13],[248,0,151,8,"BlobManager"],[248,12,151,8,"BlobManager"],[248,23,151,19],[248,24,151,20,"removeWebSocketHandler"],[248,46,151,8],[248,47,151,43],[248,52,151,48,"_socketId"],[248,61,151,8],[249,0,152,7],[250,0,153,5],[252,0,154,4],[252,13,154,9,"_binaryType"],[252,24,154,4],[252,27,154,23,"binaryType"],[252,37,154,4],[253,0,155,3],[256,4,58,25,"EventTarget"],[256,15,58,36],[256,21,58,25],[256,30,58,40,"WEBSOCKET_EVENTS"],[256,46,58,25],[256,47],[258,0,58,6,"WebSocket"],[258,2,58,6,"WebSocket"],[258,11],[258,12,59,9,"CONNECTING"],[258,22],[258,25,59,30,"CONNECTING"],[258,35],[259,0,58,6,"WebSocket"],[259,2,58,6,"WebSocket"],[259,11],[259,12,60,9,"OPEN"],[259,16],[259,19,60,24,"OPEN"],[259,23],[260,0,58,6,"WebSocket"],[260,2,58,6,"WebSocket"],[260,11],[260,12,61,9,"CLOSING"],[260,19],[260,22,61,27,"CLOSING"],[260,29],[261,0,58,6,"WebSocket"],[261,2,58,6,"WebSocket"],[261,11],[261,12,62,9,"CLOSED"],[261,18],[261,21,62,26,"CLOSED"],[261,27],[262,0,278,0,"module"],[262,2,278,0,"module"],[262,8,278,6],[262,9,278,7,"exports"],[262,16,278,0],[262,19,278,17,"WebSocket"],[262,28,278,0]],"functionMap":{"names":["<global>","WebSocket","constructor","get__binaryType","set__binaryType","close","send","ping","_close","_unregisterEvents","_subscriptions.forEach$argument_0","_registerEvents","_eventEmitter.addListener$argument_1"],"mappings":"AAA;ACyD;EC2B;GDgD;EEE;GFE;EGE;GHgB;EIE;GJO;EKE;GLyB;EME;GNM;EOE;GPS;EQE;gCCC,eD;GRE;EUE;yDCE;ODc;sDCC;ODO;wDCC;ODa;wDCC;ODiB;GVE;CDC"}},"type":"js/module"}]}