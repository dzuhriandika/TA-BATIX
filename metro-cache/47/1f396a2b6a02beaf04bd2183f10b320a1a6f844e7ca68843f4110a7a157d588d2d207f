{"dependencies":[{"name":"@babel/runtime/helpers/toConsumableArray","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"../vendor/core/ErrorUtils","data":{"isAsync":false}},{"name":"../Performance/Systrace","data":{"isAsync":false}},{"name":"../Utilities/deepFreezeAndThrowOnMutationInDev","data":{"isAsync":false}},{"name":"invariant","data":{"isAsync":false}},{"name":"../Utilities/stringifySafe","data":{"isAsync":false}},{"name":"../Utilities/warnOnce","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var _toConsumableArray = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/toConsumableArray\");\n\n  var _classCallCheck = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/classCallCheck\");\n\n  var _createClass = _$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/createClass\");\n\n  var ErrorUtils = _$$_REQUIRE(_dependencyMap[3], \"../vendor/core/ErrorUtils\");\n\n  var Systrace = _$$_REQUIRE(_dependencyMap[4], \"../Performance/Systrace\");\n\n  var deepFreezeAndThrowOnMutationInDev = _$$_REQUIRE(_dependencyMap[5], \"../Utilities/deepFreezeAndThrowOnMutationInDev\");\n\n  var invariant = _$$_REQUIRE(_dependencyMap[6], \"invariant\");\n\n  var stringifySafe = _$$_REQUIRE(_dependencyMap[7], \"../Utilities/stringifySafe\");\n\n  var warnOnce = _$$_REQUIRE(_dependencyMap[8], \"../Utilities/warnOnce\");\n\n  var TO_JS = 0;\n  var TO_NATIVE = 1;\n  var MODULE_IDS = 0;\n  var METHOD_IDS = 1;\n  var PARAMS = 2;\n  var MIN_TIME_BETWEEN_FLUSHES_MS = 5;\n  var TRACE_TAG_REACT_APPS = 1 << 17;\n  var DEBUG_INFO_LIMIT = 32;\n\n  var MessageQueue = function () {\n    function MessageQueue() {\n      _classCallCheck(this, MessageQueue);\n\n      this._lazyCallableModules = {};\n      this._queue = [[], [], [], 0];\n      this._successCallbacks = new Map();\n      this._failureCallbacks = new Map();\n      this._callID = 0;\n      this._lastFlush = 0;\n      this._eventLoopStartTime = Date.now();\n      this._immediatesCallback = null;\n\n      if (__DEV__) {\n        this._debugInfo = {};\n        this._remoteModuleTable = {};\n        this._remoteMethodTable = {};\n      }\n\n      this.callFunctionReturnFlushedQueue = this.callFunctionReturnFlushedQueue.bind(this);\n      this.callFunctionReturnResultAndFlushedQueue = this.callFunctionReturnResultAndFlushedQueue.bind(this);\n      this.flushedQueue = this.flushedQueue.bind(this);\n      this.invokeCallbackAndReturnFlushedQueue = this.invokeCallbackAndReturnFlushedQueue.bind(this);\n    }\n\n    _createClass(MessageQueue, [{\n      key: \"callFunctionReturnFlushedQueue\",\n      value: function callFunctionReturnFlushedQueue(module, method, args) {\n        var _this = this;\n\n        this.__guard(function () {\n          _this.__callFunction(module, method, args);\n        });\n\n        return this.flushedQueue();\n      }\n    }, {\n      key: \"callFunctionReturnResultAndFlushedQueue\",\n      value: function callFunctionReturnResultAndFlushedQueue(module, method, args) {\n        var _this2 = this;\n\n        var result;\n\n        this.__guard(function () {\n          result = _this2.__callFunction(module, method, args);\n        });\n\n        return [result, this.flushedQueue()];\n      }\n    }, {\n      key: \"invokeCallbackAndReturnFlushedQueue\",\n      value: function invokeCallbackAndReturnFlushedQueue(cbID, args) {\n        var _this3 = this;\n\n        this.__guard(function () {\n          _this3.__invokeCallback(cbID, args);\n        });\n\n        return this.flushedQueue();\n      }\n    }, {\n      key: \"flushedQueue\",\n      value: function flushedQueue() {\n        var _this4 = this;\n\n        this.__guard(function () {\n          _this4.__callImmediates();\n        });\n\n        var queue = this._queue;\n        this._queue = [[], [], [], this._callID];\n        return queue[0].length ? queue : null;\n      }\n    }, {\n      key: \"getEventLoopRunningTime\",\n      value: function getEventLoopRunningTime() {\n        return Date.now() - this._eventLoopStartTime;\n      }\n    }, {\n      key: \"registerCallableModule\",\n      value: function registerCallableModule(name, module) {\n        this._lazyCallableModules[name] = function () {\n          return module;\n        };\n      }\n    }, {\n      key: \"registerLazyCallableModule\",\n      value: function registerLazyCallableModule(name, factory) {\n        var module;\n        var getValue = factory;\n\n        this._lazyCallableModules[name] = function () {\n          if (getValue) {\n            module = getValue();\n            getValue = null;\n          }\n\n          return module;\n        };\n      }\n    }, {\n      key: \"getCallableModule\",\n      value: function getCallableModule(name) {\n        var getValue = this._lazyCallableModules[name];\n        return getValue ? getValue() : null;\n      }\n    }, {\n      key: \"callNativeSyncHook\",\n      value: function callNativeSyncHook(moduleID, methodID, params, onFail, onSucc) {\n        if (__DEV__) {\n          invariant(global.nativeCallSyncHook, 'Calling synchronous methods on native ' + 'modules is not supported in Chrome.\\n\\n Consider providing alternative ' + 'methods to expose this method in debug mode, e.g. by exposing constants ' + 'ahead-of-time.');\n        }\n\n        this.processCallbacks(moduleID, methodID, params, onFail, onSucc);\n\n        try {\n          return global.nativeCallSyncHook(moduleID, methodID, params);\n        } catch (e) {\n          if (typeof e === 'object' && e != null && typeof e.framesToPop === 'undefined' && /^Exception in HostFunction: /.test(e.message)) {\n            e.framesToPop = 2;\n          }\n\n          throw e;\n        }\n      }\n    }, {\n      key: \"processCallbacks\",\n      value: function processCallbacks(moduleID, methodID, params, onFail, onSucc) {\n        var _this5 = this;\n\n        if (onFail || onSucc) {\n          if (__DEV__) {\n            this._debugInfo[this._callID] = [moduleID, methodID];\n\n            if (this._callID > DEBUG_INFO_LIMIT) {\n              delete this._debugInfo[this._callID - DEBUG_INFO_LIMIT];\n            }\n\n            if (this._successCallbacks.size > 500) {\n              var info = {};\n\n              this._successCallbacks.forEach(function (_, callID) {\n                var debug = _this5._debugInfo[callID];\n                var module = debug && _this5._remoteModuleTable[debug[0]];\n                var method = debug && _this5._remoteMethodTable[debug[0]][debug[1]];\n                info[callID] = {\n                  module: module,\n                  method: method\n                };\n              });\n\n              warnOnce('excessive-number-of-pending-callbacks', \"Please report: Excessive number of pending callbacks: \" + this._successCallbacks.size + \". Some pending callbacks that might have leaked by never being called from native code: \" + stringifySafe(info));\n            }\n          }\n\n          onFail && params.push(this._callID << 1);\n          onSucc && params.push(this._callID << 1 | 1);\n\n          this._successCallbacks.set(this._callID, onSucc);\n\n          this._failureCallbacks.set(this._callID, onFail);\n        }\n\n        if (__DEV__) {\n          global.nativeTraceBeginAsyncFlow && global.nativeTraceBeginAsyncFlow(TRACE_TAG_REACT_APPS, 'native', this._callID);\n        }\n\n        this._callID++;\n      }\n    }, {\n      key: \"enqueueNativeCall\",\n      value: function enqueueNativeCall(moduleID, methodID, params, onFail, onSucc) {\n        this.processCallbacks(moduleID, methodID, params, onFail, onSucc);\n\n        this._queue[MODULE_IDS].push(moduleID);\n\n        this._queue[METHOD_IDS].push(methodID);\n\n        if (__DEV__) {\n          var isValidArgument = function isValidArgument(val) {\n            var t = typeof val;\n\n            if (t === 'undefined' || t === 'null' || t === 'boolean' || t === 'string') {\n              return true;\n            }\n\n            if (t === 'number') {\n              return isFinite(val);\n            }\n\n            if (t === 'function' || t !== 'object') {\n              return false;\n            }\n\n            if (Array.isArray(val)) {\n              return val.every(isValidArgument);\n            }\n\n            for (var k in val) {\n              if (typeof val[k] !== 'function' && !isValidArgument(val[k])) {\n                return false;\n              }\n            }\n\n            return true;\n          };\n\n          var replacer = function replacer(key, val) {\n            var t = typeof val;\n\n            if (t === 'function') {\n              return '<<Function ' + val.name + '>>';\n            } else if (t === 'number' && !isFinite(val)) {\n              return '<<' + val.toString() + '>>';\n            } else {\n              return val;\n            }\n          };\n\n          invariant(isValidArgument(params), '%s is not usable as a native method argument', JSON.stringify(params, replacer));\n          deepFreezeAndThrowOnMutationInDev(params);\n        }\n\n        this._queue[PARAMS].push(params);\n\n        var now = Date.now();\n\n        if (global.nativeFlushQueueImmediate && now - this._lastFlush >= MIN_TIME_BETWEEN_FLUSHES_MS) {\n          var queue = this._queue;\n          this._queue = [[], [], [], this._callID];\n          this._lastFlush = now;\n          global.nativeFlushQueueImmediate(queue);\n        }\n\n        Systrace.counterEvent('pending_js_to_native_queue', this._queue[0].length);\n\n        if (__DEV__ && this.__spy && isFinite(moduleID)) {\n          this.__spy({\n            type: TO_NATIVE,\n            module: this._remoteModuleTable[moduleID],\n            method: this._remoteMethodTable[moduleID][methodID],\n            args: params\n          });\n        } else if (this.__spy) {\n          this.__spy({\n            type: TO_NATIVE,\n            module: moduleID + '',\n            method: methodID,\n            args: params\n          });\n        }\n      }\n    }, {\n      key: \"createDebugLookup\",\n      value: function createDebugLookup(moduleID, name, methods) {\n        if (__DEV__) {\n          this._remoteModuleTable[moduleID] = name;\n          this._remoteMethodTable[moduleID] = methods || [];\n        }\n      }\n    }, {\n      key: \"setImmediatesCallback\",\n      value: function setImmediatesCallback(fn) {\n        this._immediatesCallback = fn;\n      }\n    }, {\n      key: \"__guard\",\n      value: function __guard(fn) {\n        if (this.__shouldPauseOnThrow()) {\n          fn();\n        } else {\n          try {\n            fn();\n          } catch (error) {\n            ErrorUtils.reportFatalError(error);\n          }\n        }\n      }\n    }, {\n      key: \"__shouldPauseOnThrow\",\n      value: function __shouldPauseOnThrow() {\n        return typeof DebuggerInternal !== 'undefined' && DebuggerInternal.shouldPauseOnThrow === true;\n      }\n    }, {\n      key: \"__callImmediates\",\n      value: function __callImmediates() {\n        Systrace.beginEvent('JSTimers.callImmediates()');\n\n        if (this._immediatesCallback != null) {\n          this._immediatesCallback();\n        }\n\n        Systrace.endEvent();\n      }\n    }, {\n      key: \"__callFunction\",\n      value: function __callFunction(module, method, args) {\n        this._lastFlush = Date.now();\n        this._eventLoopStartTime = this._lastFlush;\n\n        if (__DEV__ || this.__spy) {\n          Systrace.beginEvent(module + \".\" + method + \"(\" + stringifySafe(args) + \")\");\n        } else {\n          Systrace.beginEvent(module + \".\" + method + \"(...)\");\n        }\n\n        if (this.__spy) {\n          this.__spy({\n            type: TO_JS,\n            module: module,\n            method: method,\n            args: args\n          });\n        }\n\n        var moduleMethods = this.getCallableModule(module);\n        invariant(!!moduleMethods, 'Module %s is not a registered callable module (calling %s)', module, method);\n        invariant(!!moduleMethods[method], 'Method %s does not exist on module %s', method, module);\n        var result = moduleMethods[method].apply(moduleMethods, args);\n        Systrace.endEvent();\n        return result;\n      }\n    }, {\n      key: \"__invokeCallback\",\n      value: function __invokeCallback(cbID, args) {\n        this._lastFlush = Date.now();\n        this._eventLoopStartTime = this._lastFlush;\n        var callID = cbID >>> 1;\n        var isSuccess = cbID & 1;\n        var callback = isSuccess ? this._successCallbacks.get(callID) : this._failureCallbacks.get(callID);\n\n        if (__DEV__) {\n          var debug = this._debugInfo[callID];\n\n          var _module = debug && this._remoteModuleTable[debug[0]];\n\n          var method = debug && this._remoteMethodTable[debug[0]][debug[1]];\n          invariant(callback, \"No callback found with cbID \" + cbID + \" and callID \" + callID + \" for \" + (method ? \" \" + _module + \".\" + method + \" - most likely the callback was already invoked\" : \"module \" + (_module || '<unknown>')) + (\". Args: '\" + stringifySafe(args) + \"'\"));\n          var profileName = debug ? '<callback for ' + _module + '.' + method + '>' : cbID;\n\n          if (callback && this.__spy) {\n            this.__spy({\n              type: TO_JS,\n              module: null,\n              method: profileName,\n              args: args\n            });\n          }\n\n          Systrace.beginEvent(\"MessageQueue.invokeCallback(\" + profileName + \", \" + stringifySafe(args) + \")\");\n        }\n\n        if (!callback) {\n          return;\n        }\n\n        this._successCallbacks.delete(callID);\n\n        this._failureCallbacks.delete(callID);\n\n        callback.apply(void 0, _toConsumableArray(args));\n\n        if (__DEV__) {\n          Systrace.endEvent();\n        }\n      }\n    }], [{\n      key: \"spy\",\n      value: function spy(spyOrToggle) {\n        if (spyOrToggle === true) {\n          MessageQueue.prototype.__spy = function (info) {\n            console.log((info.type === TO_JS ? 'N->JS' : 'JS->N') + \" : \" + (\"\" + (info.module ? info.module + '.' : '') + info.method) + (\"(\" + JSON.stringify(info.args) + \")\"));\n          };\n        } else if (spyOrToggle === false) {\n          MessageQueue.prototype.__spy = null;\n        } else {\n          MessageQueue.prototype.__spy = spyOrToggle;\n        }\n      }\n    }]);\n\n    return MessageQueue;\n  }();\n\n  module.exports = MessageQueue;\n});","lineCount":416,"map":[[2,0,11,0],[10,0,13,0],[10,6,13,6,"ErrorUtils"],[10,16,13,16],[10,19,13,19,"require"],[10,30,13,26],[10,78,13,0],[12,0,14,0],[12,6,14,6,"Systrace"],[12,14,14,14],[12,17,14,17,"require"],[12,28,14,24],[12,74,14,0],[14,0,16,0],[14,6,16,6,"deepFreezeAndThrowOnMutationInDev"],[14,39,16,39],[14,42,16,42,"require"],[14,53,16,49],[14,122,16,0],[16,0,17,0],[16,6,17,6,"invariant"],[16,15,17,15],[16,18,17,18,"require"],[16,29,17,25],[16,61,17,0],[18,0,18,0],[18,6,18,6,"stringifySafe"],[18,19,18,19],[18,22,18,22,"require"],[18,33,18,29],[18,82,18,0],[20,0,19,0],[20,6,19,6,"warnOnce"],[20,14,19,14],[20,17,19,17,"require"],[20,28,19,24],[20,72,19,0],[22,0,28,0],[22,6,28,6,"TO_JS"],[22,11,28,11],[22,14,28,14],[22,15,28,0],[23,0,29,0],[23,6,29,6,"TO_NATIVE"],[23,15,29,15],[23,18,29,18],[23,19,29,0],[24,0,31,0],[24,6,31,6,"MODULE_IDS"],[24,16,31,16],[24,19,31,19],[24,20,31,0],[25,0,32,0],[25,6,32,6,"METHOD_IDS"],[25,16,32,16],[25,19,32,19],[25,20,32,0],[26,0,33,0],[26,6,33,6,"PARAMS"],[26,12,33,12],[26,15,33,15],[26,16,33,0],[27,0,34,0],[27,6,34,6,"MIN_TIME_BETWEEN_FLUSHES_MS"],[27,33,34,33],[27,36,34,36],[27,37,34,0],[28,0,37,0],[28,6,37,6,"TRACE_TAG_REACT_APPS"],[28,26,37,26],[28,29,37,29],[28,34,37,34],[28,36,37,0],[29,0,39,0],[29,6,39,6,"DEBUG_INFO_LIMIT"],[29,22,39,22],[29,25,39,25],[29,27,39,0],[31,6,41,6,"MessageQueue"],[31,18],[32,0,57,2],[32,28,57,16],[33,0,57,16],[35,0,58,4],[35,11,58,9,"_lazyCallableModules"],[35,31,58,4],[35,34,58,32],[35,36,58,4],[36,0,59,4],[36,11,59,9,"_queue"],[36,17,59,4],[36,20,59,18],[36,21,59,19],[36,23,59,18],[36,25,59,23],[36,27,59,18],[36,29,59,27],[36,31,59,18],[36,33,59,31],[36,34,59,18],[36,35,59,4],[37,0,60,4],[37,11,60,9,"_successCallbacks"],[37,28,60,4],[37,31,60,29],[37,35,60,33,"Map"],[37,38,60,29],[37,40,60,4],[38,0,61,4],[38,11,61,9,"_failureCallbacks"],[38,28,61,4],[38,31,61,29],[38,35,61,33,"Map"],[38,38,61,29],[38,40,61,4],[39,0,62,4],[39,11,62,9,"_callID"],[39,18,62,4],[39,21,62,19],[39,22,62,4],[40,0,63,4],[40,11,63,9,"_lastFlush"],[40,21,63,4],[40,24,63,22],[40,25,63,4],[41,0,64,4],[41,11,64,9,"_eventLoopStartTime"],[41,30,64,4],[41,33,64,31,"Date"],[41,37,64,35],[41,38,64,36,"now"],[41,41,64,31],[41,43,64,4],[42,0,65,4],[42,11,65,9,"_immediatesCallback"],[42,30,65,4],[42,33,65,31],[42,37,65,4],[44,0,67,4],[44,10,67,8,"__DEV__"],[44,17,67,4],[44,19,67,17],[45,0,68,6],[45,13,68,11,"_debugInfo"],[45,23,68,6],[45,26,68,24],[45,28,68,6],[46,0,69,6],[46,13,69,11,"_remoteModuleTable"],[46,31,69,6],[46,34,69,32],[46,36,69,6],[47,0,70,6],[47,13,70,11,"_remoteMethodTable"],[47,31,70,6],[47,34,70,32],[47,36,70,6],[48,0,71,5],[50,0,73,5],[50,10,73,4],[50,11,73,16,"callFunctionReturnFlushedQueue"],[50,41,73,4],[50,44,73,49],[50,49,73,54,"callFunctionReturnFlushedQueue"],[50,79,73,49],[50,80,73,85,"bind"],[50,84,73,49],[50,85,74,6],[50,89,73,49],[50,90,73,4],[51,0,76,5],[51,10,76,4],[51,11,76,16,"callFunctionReturnResultAndFlushedQueue"],[51,50,76,4],[51,53,76,58],[51,58,76,63,"callFunctionReturnResultAndFlushedQueue"],[51,97,76,58],[51,98,76,103,"bind"],[51,102,76,58],[51,103,77,6],[51,107,76,58],[51,108,76,4],[52,0,79,5],[52,10,79,4],[52,11,79,16,"flushedQueue"],[52,23,79,4],[52,26,79,31],[52,31,79,36,"flushedQueue"],[52,43,79,31],[52,44,79,49,"bind"],[52,48,79,31],[52,49,79,54],[52,53,79,31],[52,54,79,4],[53,0,80,5],[53,10,80,4],[53,11,80,16,"invokeCallbackAndReturnFlushedQueue"],[53,46,80,4],[53,49,80,54],[53,54,80,59,"invokeCallbackAndReturnFlushedQueue"],[53,89,80,54],[53,90,80,95,"bind"],[53,94,80,54],[53,95,81,6],[53,99,80,54],[53,100,80,4],[54,0,83,3],[58,53,106,4,"module"],[58,59],[58,61,107,4,"method"],[58,67],[58,69,108,4,"args"],[58,73],[58,75,109,63],[59,0,109,63],[61,0,110,4],[61,13,110,9,"__guard"],[61,20,110,4],[61,21,110,17],[61,33,110,23],[62,0,111,6],[62,10,111,6],[62,15,111,10],[62,16,111,11,"__callFunction"],[62,30,111,6],[62,31,111,26,"module"],[62,37,111,6],[62,39,111,34,"method"],[62,45,111,6],[62,47,111,42,"args"],[62,51,111,6],[63,0,112,5],[63,9,110,4],[65,0,114,4],[65,15,114,11],[65,20,114,16,"flushedQueue"],[65,32,114,11],[65,34,114,4],[66,0,115,3],[69,62,118,4,"module"],[69,68],[69,70,119,4,"method"],[69,76],[69,78,120,4,"args"],[69,82],[69,84,121,75],[70,0,121,75],[72,0,122,4],[72,12,122,8,"result"],[72,18,122,4],[74,0,123,4],[74,13,123,9,"__guard"],[74,20,123,4],[74,21,123,17],[74,33,123,23],[75,0,124,6,"result"],[75,10,124,6,"result"],[75,16,124,12],[75,19,124,15],[75,25,124,19],[75,26,124,20,"__callFunction"],[75,40,124,15],[75,41,124,35,"module"],[75,47,124,15],[75,49,124,43,"method"],[75,55,124,15],[75,57,124,51,"args"],[75,61,124,15],[75,62,124,6],[76,0,125,5],[76,9,123,4],[78,0,127,4],[78,15,127,11],[78,16,127,12,"result"],[78,22,127,11],[78,24,127,20],[78,29,127,25,"flushedQueue"],[78,41,127,20],[78,43,127,11],[78,44,127,4],[79,0,128,3],[82,58,131,4,"cbID"],[82,62],[82,64,132,4,"args"],[82,68],[82,70,133,63],[83,0,133,63],[85,0,134,4],[85,13,134,9,"__guard"],[85,20,134,4],[85,21,134,17],[85,33,134,23],[86,0,135,6],[86,10,135,6],[86,16,135,10],[86,17,135,11,"__invokeCallback"],[86,33,135,6],[86,34,135,28,"cbID"],[86,38,135,6],[86,40,135,34,"args"],[86,44,135,6],[87,0,136,5],[87,9,134,4],[89,0,138,4],[89,15,138,11],[89,20,138,16,"flushedQueue"],[89,32,138,11],[89,34,138,4],[90,0,139,3],[93,37,141,76],[94,0,141,76],[96,0,142,4],[96,13,142,9,"__guard"],[96,20,142,4],[96,21,142,17],[96,33,142,23],[97,0,143,6],[97,10,143,6],[97,16,143,10],[97,17,143,11,"__callImmediates"],[97,33,143,6],[98,0,144,5],[98,9,142,4],[100,0,146,4],[100,12,146,10,"queue"],[100,17,146,15],[100,20,146,18],[100,25,146,23,"_queue"],[100,31,146,4],[101,0,147,4],[101,13,147,9,"_queue"],[101,19,147,4],[101,22,147,18],[101,23,147,19],[101,25,147,18],[101,27,147,23],[101,29,147,18],[101,31,147,27],[101,33,147,18],[101,35,147,31],[101,40,147,36,"_callID"],[101,47,147,18],[101,48,147,4],[102,0,148,4],[102,15,148,11,"queue"],[102,20,148,16],[102,21,148,17],[102,22,148,16],[102,23,148,11],[102,24,148,20,"length"],[102,30,148,11],[102,33,148,29,"queue"],[102,38,148,11],[102,41,148,37],[102,45,148,4],[103,0,149,3],[106,48,151,36],[107,0,152,4],[107,15,152,11,"Date"],[107,19,152,15],[107,20,152,16,"now"],[107,23,152,11],[107,28,152,24],[107,33,152,29,"_eventLoopStartTime"],[107,52,152,4],[108,0,153,3],[111,45,155,25,"name"],[111,49],[111,51,155,39,"module"],[111,57],[111,59,155,55],[112,0,156,4],[112,13,156,9,"_lazyCallableModules"],[112,33,156,4],[112,34,156,30,"name"],[112,38,156,4],[112,42,156,38],[113,0,156,38],[113,17,156,44,"module"],[113,23,156,38],[114,0,156,38],[114,9,156,4],[115,0,157,3],[118,49,159,29,"name"],[118,53],[118,55,159,43,"factory"],[118,62],[118,64,159,68],[119,0,160,4],[119,12,160,8,"module"],[119,18,160,4],[120,0,161,4],[120,12,161,8,"getValue"],[120,20,161,35],[120,23,161,38,"factory"],[120,30,161,4],[122,0,162,4],[122,13,162,9,"_lazyCallableModules"],[122,33,162,4],[122,34,162,30,"name"],[122,38,162,4],[122,42,162,38],[122,54,162,44],[123,0,163,6],[123,14,163,10,"getValue"],[123,22,163,6],[123,24,163,20],[124,0,164,8,"module"],[124,12,164,8,"module"],[124,18,164,14],[124,21,164,17,"getValue"],[124,29,164,25],[124,31,164,8],[125,0,165,8,"getValue"],[125,12,165,8,"getValue"],[125,20,165,16],[125,23,165,19],[125,27,165,8],[126,0,166,7],[128,0,167,6],[128,17,167,13,"module"],[128,23,167,6],[129,0,168,5],[129,9,162,4],[130,0,169,3],[133,40,171,20,"name"],[133,44],[133,46,171,46],[134,0,172,4],[134,12,172,10,"getValue"],[134,20,172,18],[134,23,172,21],[134,28,172,26,"_lazyCallableModules"],[134,48,172,21],[134,49,172,47,"name"],[134,53,172,21],[134,54,172,4],[135,0,173,4],[135,15,173,11,"getValue"],[135,23,173,19],[135,26,173,22,"getValue"],[135,34,173,30],[135,36,173,19],[135,39,173,35],[135,43,173,4],[136,0,174,3],[139,41,177,4,"moduleID"],[139,49],[139,51,178,4,"methodID"],[139,59],[139,61,179,4,"params"],[139,67],[139,69,180,4,"onFail"],[139,75],[139,77,181,4,"onSucc"],[139,83],[139,85,182,9],[140,0,183,4],[140,12,183,8,"__DEV__"],[140,19,183,4],[140,21,183,17],[141,0,184,6,"invariant"],[141,10,184,6,"invariant"],[141,19,184,15],[141,20,185,8,"global"],[141,26,185,14],[141,27,185,15,"nativeCallSyncHook"],[141,45,184,15],[141,47,186,8],[141,90,187,10],[141,163,186,8],[141,166,188,10],[141,240,186,8],[141,243,189,10],[141,259,184,15],[141,260,184,6],[142,0,191,5],[144,0,192,4],[144,13,192,9,"processCallbacks"],[144,29,192,4],[144,30,192,26,"moduleID"],[144,38,192,4],[144,40,192,36,"methodID"],[144,48,192,4],[144,50,192,46,"params"],[144,56,192,4],[144,58,192,54,"onFail"],[144,64,192,4],[144,66,192,62,"onSucc"],[144,72,192,4],[146,0,193,4],[146,12,193,8],[147,0,194,6],[147,17,194,13,"global"],[147,23,194,19],[147,24,194,20,"nativeCallSyncHook"],[147,42,194,13],[147,43,194,39,"moduleID"],[147,51,194,13],[147,53,194,49,"methodID"],[147,61,194,13],[147,63,194,59,"params"],[147,69,194,13],[147,70,194,6],[148,0,195,5],[148,9,193,4],[148,10,195,6],[148,17,195,13,"e"],[148,18,195,6],[148,20,195,16],[149,0,196,6],[149,14,197,8],[149,21,197,15,"e"],[149,22,197,8],[149,27,197,21],[149,35,197,8],[149,39,198,8,"e"],[149,40,198,9],[149,44,198,13],[149,48,197,8],[149,52,199,8],[149,59,199,15,"e"],[149,60,199,16],[149,61,199,17,"framesToPop"],[149,72,199,8],[149,77,199,33],[149,88,197,8],[149,92,200,8],[149,123,200,39,"test"],[149,127,200,8],[149,128,200,44,"e"],[149,129,200,45],[149,130,200,46,"message"],[149,137,200,8],[149,138,196,6],[149,140,201,8],[150,0,202,8,"e"],[150,12,202,8,"e"],[150,13,202,9],[150,14,202,10,"framesToPop"],[150,25,202,8],[150,28,202,24],[150,29,202,8],[151,0,203,7],[153,0,204,6],[153,16,204,12,"e"],[153,17,204,6],[154,0,205,5],[155,0,206,3],[158,39,209,4,"moduleID"],[158,47],[158,49,210,4,"methodID"],[158,57],[158,59,211,4,"params"],[158,65],[158,67,212,4,"onFail"],[158,73],[158,75,213,4,"onSucc"],[158,81],[158,83,214,4],[159,0,214,4],[161,0,215,4],[161,12,215,8,"onFail"],[161,18,215,14],[161,22,215,18,"onSucc"],[161,28,215,4],[161,30,215,26],[162,0,216,6],[162,14,216,10,"__DEV__"],[162,21,216,6],[162,23,216,19],[163,0,217,8],[163,17,217,13,"_debugInfo"],[163,27,217,8],[163,28,217,24],[163,33,217,29,"_callID"],[163,40,217,8],[163,44,217,40],[163,45,217,41,"moduleID"],[163,53,217,40],[163,55,217,51,"methodID"],[163,63,217,40],[163,64,217,8],[165,0,218,8],[165,16,218,12],[165,21,218,17,"_callID"],[165,28,218,12],[165,31,218,27,"DEBUG_INFO_LIMIT"],[165,47,218,8],[165,49,218,45],[166,0,219,10],[166,21,219,17],[166,26,219,22,"_debugInfo"],[166,36,219,17],[166,37,219,33],[166,42,219,38,"_callID"],[166,49,219,33],[166,52,219,48,"DEBUG_INFO_LIMIT"],[166,68,219,17],[166,69,219,10],[167,0,220,9],[169,0,221,8],[169,16,221,12],[169,21,221,17,"_successCallbacks"],[169,38,221,12],[169,39,221,35,"size"],[169,43,221,12],[169,46,221,42],[169,49,221,8],[169,51,221,47],[170,0,222,10],[170,18,222,16,"info"],[170,22,222,20],[170,25,222,23],[170,27,222,10],[172,0,223,10],[172,19,223,15,"_successCallbacks"],[172,36,223,10],[172,37,223,33,"forEach"],[172,44,223,10],[172,45,223,41],[172,55,223,42,"_"],[172,56,223,41],[172,58,223,45,"callID"],[172,64,223,41],[172,66,223,56],[173,0,224,12],[173,20,224,18,"debug"],[173,25,224,23],[173,28,224,26],[173,34,224,30],[173,35,224,31,"_debugInfo"],[173,45,224,26],[173,46,224,42,"callID"],[173,52,224,26],[173,53,224,12],[174,0,225,12],[174,20,225,18,"module"],[174,26,225,24],[174,29,225,27,"debug"],[174,34,225,32],[174,38,225,36],[174,44,225,40],[174,45,225,41,"_remoteModuleTable"],[174,63,225,36],[174,64,225,60,"debug"],[174,69,225,65],[174,70,225,66],[174,71,225,65],[174,72,225,36],[174,73,225,12],[175,0,226,12],[175,20,226,18,"method"],[175,26,226,24],[175,29,226,27,"debug"],[175,34,226,32],[175,38,226,36],[175,44,226,40],[175,45,226,41,"_remoteMethodTable"],[175,63,226,36],[175,64,226,60,"debug"],[175,69,226,65],[175,70,226,66],[175,71,226,65],[175,72,226,36],[175,74,226,70,"debug"],[175,79,226,75],[175,80,226,76],[175,81,226,75],[175,82,226,36],[175,83,226,12],[176,0,227,12,"info"],[176,16,227,12,"info"],[176,20,227,16],[176,21,227,17,"callID"],[176,27,227,16],[176,28,227,12],[176,31,227,27],[177,0,227,28,"module"],[177,18,227,28,"module"],[177,24,227,34],[177,26,227,28,"module"],[177,32,227,27],[178,0,227,36,"method"],[178,18,227,36,"method"],[178,24,227,42],[178,26,227,36,"method"],[179,0,227,27],[179,17,227,12],[180,0,228,11],[180,15,223,10],[182,0,229,10,"warnOnce"],[182,14,229,10,"warnOnce"],[182,22,229,18],[182,23,230,12],[182,62,229,18],[182,123,232,14],[182,128,232,19,"_successCallbacks"],[182,145,232,14],[182,146,232,37,"size"],[182,150,229,18],[182,246,233,103,"stringifySafe"],[182,259,233,116],[182,260,234,14,"info"],[182,264,233,116],[182,265,229,18],[182,266,229,10],[183,0,237,9],[184,0,238,7],[186,0,242,6,"onFail"],[186,10,242,6,"onFail"],[186,16,242,12],[186,20,242,16,"params"],[186,26,242,22],[186,27,242,23,"push"],[186,31,242,16],[186,32,242,28],[186,37,242,33,"_callID"],[186,44,242,28],[186,48,242,44],[186,49,242,16],[186,50,242,6],[187,0,244,6,"onSucc"],[187,10,244,6,"onSucc"],[187,16,244,12],[187,20,244,16,"params"],[187,26,244,22],[187,27,244,23,"push"],[187,31,244,16],[187,32,244,29],[187,37,244,34,"_callID"],[187,44,244,29],[187,48,244,45],[187,49,244,28],[187,52,244,50],[187,53,244,16],[187,54,244,6],[189,0,245,6],[189,15,245,11,"_successCallbacks"],[189,32,245,6],[189,33,245,29,"set"],[189,36,245,6],[189,37,245,33],[189,42,245,38,"_callID"],[189,49,245,6],[189,51,245,47,"onSucc"],[189,57,245,6],[191,0,246,6],[191,15,246,11,"_failureCallbacks"],[191,32,246,6],[191,33,246,29,"set"],[191,36,246,6],[191,37,246,33],[191,42,246,38,"_callID"],[191,49,246,6],[191,51,246,47,"onFail"],[191,57,246,6],[192,0,247,5],[194,0,248,4],[194,12,248,8,"__DEV__"],[194,19,248,4],[194,21,248,17],[195,0,249,6,"global"],[195,10,249,6,"global"],[195,16,249,12],[195,17,249,13,"nativeTraceBeginAsyncFlow"],[195,42,249,6],[195,46,250,8,"global"],[195,52,250,14],[195,53,250,15,"nativeTraceBeginAsyncFlow"],[195,78,250,8],[195,79,251,10,"TRACE_TAG_REACT_APPS"],[195,99,250,8],[195,101,252,10],[195,109,250,8],[195,111,253,10],[195,116,253,15,"_callID"],[195,123,250,8],[195,124,249,6],[196,0,255,5],[198,0,256,4],[198,13,256,9,"_callID"],[198,20,256,4],[199,0,257,3],[202,40,260,4,"moduleID"],[202,48],[202,50,261,4,"methodID"],[202,58],[202,60,262,4,"params"],[202,66],[202,68,263,4,"onFail"],[202,74],[202,76,264,4,"onSucc"],[202,82],[202,84,265,4],[203,0,266,4],[203,13,266,9,"processCallbacks"],[203,29,266,4],[203,30,266,26,"moduleID"],[203,38,266,4],[203,40,266,36,"methodID"],[203,48,266,4],[203,50,266,46,"params"],[203,56,266,4],[203,58,266,54,"onFail"],[203,64,266,4],[203,66,266,62,"onSucc"],[203,72,266,4],[205,0,268,4],[205,13,268,9,"_queue"],[205,19,268,4],[205,20,268,16,"MODULE_IDS"],[205,30,268,4],[205,32,268,28,"push"],[205,36,268,4],[205,37,268,33,"moduleID"],[205,45,268,4],[207,0,269,4],[207,13,269,9,"_queue"],[207,19,269,4],[207,20,269,16,"METHOD_IDS"],[207,30,269,4],[207,32,269,28,"push"],[207,36,269,4],[207,37,269,33,"methodID"],[207,45,269,4],[209,0,271,4],[209,12,271,8,"__DEV__"],[209,19,271,4],[209,21,271,17],[210,0,276,6],[210,14,276,12,"isValidArgument"],[210,29,276,27],[210,32,276,30],[210,41,276,12,"isValidArgument"],[210,56,276,30],[210,57,276,30,"val"],[210,60,276,33],[210,62,276,37],[211,0,277,8],[211,16,277,14,"t"],[211,17,277,15],[211,20,277,18],[211,27,277,25,"val"],[211,30,277,8],[213,0,278,8],[213,16,279,10,"t"],[213,17,279,11],[213,22,279,16],[213,33,279,10],[213,37,280,10,"t"],[213,38,280,11],[213,43,280,16],[213,49,279,10],[213,53,281,10,"t"],[213,54,281,11],[213,59,281,16],[213,68,279,10],[213,72,282,10,"t"],[213,73,282,11],[213,78,282,16],[213,86,278,8],[213,88,283,10],[214,0,284,10],[214,21,284,17],[214,25,284,10],[215,0,285,9],[217,0,286,8],[217,16,286,12,"t"],[217,17,286,13],[217,22,286,18],[217,30,286,8],[217,32,286,28],[218,0,287,10],[218,21,287,17,"isFinite"],[218,29,287,25],[218,30,287,26,"val"],[218,33,287,25],[218,34,287,10],[219,0,288,9],[221,0,289,8],[221,16,289,12,"t"],[221,17,289,13],[221,22,289,18],[221,32,289,12],[221,36,289,32,"t"],[221,37,289,33],[221,42,289,38],[221,50,289,8],[221,52,289,48],[222,0,290,10],[222,21,290,17],[222,26,290,10],[223,0,291,9],[225,0,292,8],[225,16,292,12,"Array"],[225,21,292,17],[225,22,292,18,"isArray"],[225,29,292,12],[225,30,292,26,"val"],[225,33,292,12],[225,34,292,8],[225,36,292,32],[226,0,293,10],[226,21,293,17,"val"],[226,24,293,20],[226,25,293,21,"every"],[226,30,293,17],[226,31,293,27,"isValidArgument"],[226,46,293,17],[226,47,293,10],[227,0,294,9],[229,0,295,8],[229,17,295,13],[229,21,295,19,"k"],[229,22,295,8],[229,26,295,24,"val"],[229,29,295,8],[229,31,295,29],[230,0,296,10],[230,18,296,14],[230,25,296,21,"val"],[230,28,296,24],[230,29,296,25,"k"],[230,30,296,24],[230,31,296,14],[230,36,296,32],[230,46,296,14],[230,50,296,46],[230,51,296,47,"isValidArgument"],[230,66,296,62],[230,67,296,63,"val"],[230,70,296,66],[230,71,296,67,"k"],[230,72,296,66],[230,73,296,62],[230,74,296,10],[230,76,296,72],[231,0,297,12],[231,23,297,19],[231,28,297,12],[232,0,298,11],[233,0,299,9],[235,0,300,8],[235,19,300,15],[235,23,300,8],[236,0,301,7],[236,11,276,6],[238,0,306,6],[238,14,306,12,"replacer"],[238,22,306,20],[238,25,306,23],[238,34,306,12,"replacer"],[238,42,306,23],[238,43,306,24,"key"],[238,46,306,23],[238,48,306,29,"val"],[238,51,306,23],[238,53,306,37],[239,0,307,8],[239,16,307,14,"t"],[239,17,307,15],[239,20,307,18],[239,27,307,25,"val"],[239,30,307,8],[241,0,308,8],[241,16,308,12,"t"],[241,17,308,13],[241,22,308,18],[241,32,308,8],[241,34,308,30],[242,0,309,10],[242,21,309,17],[242,37,309,33,"val"],[242,40,309,36],[242,41,309,37,"name"],[242,45,309,17],[242,48,309,44],[242,52,309,10],[243,0,310,9],[243,13,308,8],[243,19,310,15],[243,23,310,19,"t"],[243,24,310,20],[243,29,310,25],[243,37,310,19],[243,41,310,37],[243,42,310,38,"isFinite"],[243,50,310,46],[243,51,310,47,"val"],[243,54,310,46],[243,55,310,15],[243,57,310,53],[244,0,311,10],[244,21,311,17],[244,28,311,24,"val"],[244,31,311,27],[244,32,311,28,"toString"],[244,40,311,24],[244,42,311,17],[244,45,311,41],[244,49,311,10],[245,0,312,9],[245,13,310,15],[245,19,312,15],[246,0,313,10],[246,21,313,17,"val"],[246,24,313,10],[247,0,314,9],[248,0,315,7],[248,11,306,6],[250,0,318,6,"invariant"],[250,10,318,6,"invariant"],[250,19,318,15],[250,20,319,8,"isValidArgument"],[250,35,319,23],[250,36,319,24,"params"],[250,42,319,23],[250,43,318,15],[250,45,320,8],[250,91,318,15],[250,93,321,8,"JSON"],[250,97,321,12],[250,98,321,13,"stringify"],[250,107,321,8],[250,108,321,23,"params"],[250,114,321,8],[250,116,321,31,"replacer"],[250,124,321,8],[250,125,318,15],[250,126,318,6],[251,0,325,6,"deepFreezeAndThrowOnMutationInDev"],[251,10,325,6,"deepFreezeAndThrowOnMutationInDev"],[251,43,325,39],[251,44,325,41,"params"],[251,50,325,39],[251,51,325,6],[252,0,326,5],[254,0,327,4],[254,13,327,9,"_queue"],[254,19,327,4],[254,20,327,16,"PARAMS"],[254,26,327,4],[254,28,327,24,"push"],[254,32,327,4],[254,33,327,29,"params"],[254,39,327,4],[256,0,329,4],[256,12,329,10,"now"],[256,15,329,13],[256,18,329,16,"Date"],[256,22,329,20],[256,23,329,21,"now"],[256,26,329,16],[256,28,329,4],[258,0,330,4],[258,12,331,6,"global"],[258,18,331,12],[258,19,331,13,"nativeFlushQueueImmediate"],[258,44,331,6],[258,48,332,6,"now"],[258,51,332,9],[258,54,332,12],[258,59,332,17,"_lastFlush"],[258,69,332,6],[258,73,332,31,"MIN_TIME_BETWEEN_FLUSHES_MS"],[258,100,330,4],[258,102,333,6],[259,0,334,6],[259,14,334,12,"queue"],[259,19,334,17],[259,22,334,20],[259,27,334,25,"_queue"],[259,33,334,6],[260,0,335,6],[260,15,335,11,"_queue"],[260,21,335,6],[260,24,335,20],[260,25,335,21],[260,27,335,20],[260,29,335,25],[260,31,335,20],[260,33,335,29],[260,35,335,20],[260,37,335,33],[260,42,335,38,"_callID"],[260,49,335,20],[260,50,335,6],[261,0,336,6],[261,15,336,11,"_lastFlush"],[261,25,336,6],[261,28,336,24,"now"],[261,31,336,6],[262,0,337,6,"global"],[262,10,337,6,"global"],[262,16,337,12],[262,17,337,13,"nativeFlushQueueImmediate"],[262,42,337,6],[262,43,337,39,"queue"],[262,48,337,6],[263,0,338,5],[265,0,339,4,"Systrace"],[265,8,339,4,"Systrace"],[265,16,339,12],[265,17,339,13,"counterEvent"],[265,29,339,4],[265,30,339,26],[265,58,339,4],[265,60,339,56],[265,65,339,61,"_queue"],[265,71,339,56],[265,72,339,68],[265,73,339,56],[265,75,339,71,"length"],[265,81,339,4],[267,0,340,4],[267,12,340,8,"__DEV__"],[267,19,340,15],[267,23,340,19],[267,28,340,24,"__spy"],[267,33,340,8],[267,37,340,33,"isFinite"],[267,45,340,41],[267,46,340,42,"moduleID"],[267,54,340,41],[267,55,340,4],[267,57,340,53],[268,0,341,6],[268,15,341,11,"__spy"],[268,20,341,6],[268,21,341,17],[269,0,342,8,"type"],[269,12,342,8,"type"],[269,16,342,12],[269,18,342,14,"TO_NATIVE"],[269,27,341,17],[270,0,343,8,"module"],[270,12,343,8,"module"],[270,18,343,14],[270,20,343,16],[270,25,343,21,"_remoteModuleTable"],[270,43,343,16],[270,44,343,40,"moduleID"],[270,52,343,16],[270,53,341,17],[271,0,344,8,"method"],[271,12,344,8,"method"],[271,18,344,14],[271,20,344,16],[271,25,344,21,"_remoteMethodTable"],[271,43,344,16],[271,44,344,40,"moduleID"],[271,52,344,16],[271,54,344,50,"methodID"],[271,62,344,16],[271,63,341,17],[272,0,345,8,"args"],[272,12,345,8,"args"],[272,16,345,12],[272,18,345,14,"params"],[273,0,341,17],[273,11,341,6],[274,0,347,5],[274,9,340,4],[274,15,347,11],[274,19,347,15],[274,24,347,20,"__spy"],[274,29,347,11],[274,31,347,27],[275,0,348,6],[275,15,348,11,"__spy"],[275,20,348,6],[275,21,348,17],[276,0,349,8,"type"],[276,12,349,8,"type"],[276,16,349,12],[276,18,349,14,"TO_NATIVE"],[276,27,348,17],[277,0,350,8,"module"],[277,12,350,8,"module"],[277,18,350,14],[277,20,350,16,"moduleID"],[277,28,350,24],[277,31,350,27],[277,33,348,17],[278,0,351,8,"method"],[278,12,351,8,"method"],[278,18,351,14],[278,20,351,16,"methodID"],[278,28,348,17],[279,0,352,8,"args"],[279,12,352,8,"args"],[279,16,352,12],[279,18,352,14,"params"],[280,0,348,17],[280,11,348,6],[281,0,354,5],[282,0,355,3],[285,40,358,4,"moduleID"],[285,48],[285,50,359,4,"name"],[285,54],[285,56,360,4,"methods"],[285,63],[285,65,361,4],[286,0,362,4],[286,12,362,8,"__DEV__"],[286,19,362,4],[286,21,362,17],[287,0,363,6],[287,15,363,11,"_remoteModuleTable"],[287,33,363,6],[287,34,363,30,"moduleID"],[287,42,363,6],[287,46,363,42,"name"],[287,50,363,6],[288,0,364,6],[288,15,364,11,"_remoteMethodTable"],[288,33,364,6],[288,34,364,30,"moduleID"],[288,42,364,6],[288,46,364,42,"methods"],[288,53,364,49],[288,57,364,53],[288,59,364,6],[289,0,365,5],[290,0,366,3],[293,44,371,24,"fn"],[293,46],[293,48,371,40],[294,0,372,4],[294,13,372,9,"_immediatesCallback"],[294,32,372,4],[294,35,372,31,"fn"],[294,37,372,4],[295,0,373,3],[298,30,379,10,"fn"],[298,32],[298,34,379,26],[299,0,380,4],[299,12,380,8],[299,17,380,13,"__shouldPauseOnThrow"],[299,37,380,8],[299,39,380,4],[299,41,380,37],[300,0,381,6,"fn"],[300,10,381,6,"fn"],[300,12,381,8],[301,0,382,5],[301,9,380,4],[301,15,382,11],[302,0,383,6],[302,14,383,10],[303,0,384,8,"fn"],[303,12,384,8,"fn"],[303,14,384,10],[304,0,385,7],[304,11,383,6],[304,12,385,8],[304,19,385,15,"error"],[304,24,385,8],[304,26,385,22],[305,0,386,8,"ErrorUtils"],[305,12,386,8,"ErrorUtils"],[305,22,386,18],[305,23,386,19,"reportFatalError"],[305,39,386,8],[305,40,386,36,"error"],[305,45,386,8],[306,0,387,7],[307,0,388,5],[308,0,389,3],[311,45,396,34],[312,0,397,4],[312,15,399,6],[312,22,399,13,"DebuggerInternal"],[312,38,399,6],[312,43,399,34],[312,54,399,6],[312,58,400,6,"DebuggerInternal"],[312,74,400,22],[312,75,400,23,"shouldPauseOnThrow"],[312,93,400,6],[312,98,400,46],[312,102,397,4],[313,0,402,3],[316,41,404,21],[317,0,405,4,"Systrace"],[317,8,405,4,"Systrace"],[317,16,405,12],[317,17,405,13,"beginEvent"],[317,27,405,4],[317,28,405,24],[317,55,405,4],[319,0,406,4],[319,12,406,8],[319,17,406,13,"_immediatesCallback"],[319,36,406,8],[319,40,406,36],[319,44,406,4],[319,46,406,42],[320,0,407,6],[320,15,407,11,"_immediatesCallback"],[320,34,407,6],[321,0,408,5],[323,0,409,4,"Systrace"],[323,8,409,4,"Systrace"],[323,16,409,12],[323,17,409,13,"endEvent"],[323,25,409,4],[324,0,410,3],[327,37,412,17,"module"],[327,43],[327,45,412,33,"method"],[327,51],[327,53,412,49,"args"],[327,57],[327,59,412,67],[328,0,413,4],[328,13,413,9,"_lastFlush"],[328,23,413,4],[328,26,413,22,"Date"],[328,30,413,26],[328,31,413,27,"now"],[328,34,413,22],[328,36,413,4],[329,0,414,4],[329,13,414,9,"_eventLoopStartTime"],[329,32,414,4],[329,35,414,31],[329,40,414,36,"_lastFlush"],[329,50,414,4],[331,0,415,4],[331,12,415,8,"__DEV__"],[331,19,415,15],[331,23,415,19],[331,28,415,24,"__spy"],[331,33,415,4],[331,35,415,31],[332,0,416,6,"Systrace"],[332,10,416,6,"Systrace"],[332,18,416,14],[332,19,416,15,"beginEvent"],[332,29,416,6],[332,30,416,29,"module"],[332,36,416,6],[332,45,416,39,"method"],[332,51,416,6],[332,60,416,49,"stringifySafe"],[332,73,416,62],[332,74,416,63,"args"],[332,78,416,62],[332,79,416,6],[333,0,417,5],[333,9,415,4],[333,15,417,11],[334,0,418,6,"Systrace"],[334,10,418,6,"Systrace"],[334,18,418,14],[334,19,418,15,"beginEvent"],[334,29,418,6],[334,30,418,29,"module"],[334,36,418,6],[334,45,418,39,"method"],[334,51,418,6],[335,0,419,5],[337,0,420,4],[337,12,420,8],[337,17,420,13,"__spy"],[337,22,420,4],[337,24,420,20],[338,0,421,6],[338,15,421,11,"__spy"],[338,20,421,6],[338,21,421,17],[339,0,421,18,"type"],[339,12,421,18,"type"],[339,16,421,22],[339,18,421,24,"TO_JS"],[339,23,421,17],[340,0,421,31,"module"],[340,12,421,31,"module"],[340,18,421,37],[340,20,421,31,"module"],[340,26,421,17],[341,0,421,39,"method"],[341,12,421,39,"method"],[341,18,421,45],[341,20,421,39,"method"],[341,26,421,17],[342,0,421,47,"args"],[342,12,421,47,"args"],[342,16,421,51],[342,18,421,47,"args"],[343,0,421,17],[343,11,421,6],[344,0,422,5],[346,0,423,4],[346,12,423,10,"moduleMethods"],[346,25,423,23],[346,28,423,26],[346,33,423,31,"getCallableModule"],[346,50,423,26],[346,51,423,49,"module"],[346,57,423,26],[346,58,423,4],[347,0,424,4,"invariant"],[347,8,424,4,"invariant"],[347,17,424,13],[347,18,425,6],[347,19,425,7],[347,20,425,8,"moduleMethods"],[347,33,424,13],[347,35,426,6],[347,95,424,13],[347,97,427,6,"module"],[347,103,424,13],[347,105,428,6,"method"],[347,111,424,13],[347,112,424,4],[348,0,430,4,"invariant"],[348,8,430,4,"invariant"],[348,17,430,13],[348,18,431,6],[348,19,431,7],[348,20,431,8,"moduleMethods"],[348,33,431,21],[348,34,431,22,"method"],[348,40,431,21],[348,41,430,13],[348,43,432,6],[348,82,430,13],[348,84,433,6,"method"],[348,90,430,13],[348,92,434,6,"module"],[348,98,430,13],[348,99,430,4],[349,0,436,4],[349,12,436,10,"result"],[349,18,436,16],[349,21,436,19,"moduleMethods"],[349,34,436,32],[349,35,436,33,"method"],[349,41,436,32],[349,42,436,19],[349,43,436,41,"apply"],[349,48,436,19],[349,49,436,47,"moduleMethods"],[349,62,436,19],[349,64,436,62,"args"],[349,68,436,19],[349,69,436,4],[350,0,437,4,"Systrace"],[350,8,437,4,"Systrace"],[350,16,437,12],[350,17,437,13,"endEvent"],[350,25,437,4],[351,0,438,4],[351,15,438,11,"result"],[351,21,438,4],[352,0,439,3],[355,39,441,19,"cbID"],[355,43],[355,45,441,33,"args"],[355,49],[355,51,441,46],[356,0,442,4],[356,13,442,9,"_lastFlush"],[356,23,442,4],[356,26,442,22,"Date"],[356,30,442,26],[356,31,442,27,"now"],[356,34,442,22],[356,36,442,4],[357,0,443,4],[357,13,443,9,"_eventLoopStartTime"],[357,32,443,4],[357,35,443,31],[357,40,443,36,"_lastFlush"],[357,50,443,4],[358,0,447,4],[358,12,447,10,"callID"],[358,18,447,16],[358,21,447,19,"cbID"],[358,25,447,23],[358,30,447,28],[358,31,447,4],[359,0,449,4],[359,12,449,10,"isSuccess"],[359,21,449,19],[359,24,449,22,"cbID"],[359,28,449,26],[359,31,449,29],[359,32,449,4],[360,0,450,4],[360,12,450,10,"callback"],[360,20,450,18],[360,23,450,21,"isSuccess"],[360,32,450,30],[360,35,451,8],[360,40,451,13,"_successCallbacks"],[360,57,451,8],[360,58,451,31,"get"],[360,61,451,8],[360,62,451,35,"callID"],[360,68,451,8],[360,69,450,30],[360,72,452,8],[360,77,452,13,"_failureCallbacks"],[360,94,452,8],[360,95,452,31,"get"],[360,98,452,8],[360,99,452,35,"callID"],[360,105,452,8],[360,106,450,4],[362,0,454,4],[362,12,454,8,"__DEV__"],[362,19,454,4],[362,21,454,17],[363,0,455,6],[363,14,455,12,"debug"],[363,19,455,17],[363,22,455,20],[363,27,455,25,"_debugInfo"],[363,37,455,20],[363,38,455,36,"callID"],[363,44,455,20],[363,45,455,6],[365,0,456,6],[365,14,456,12,"module"],[365,21,456,18],[365,24,456,21,"debug"],[365,29,456,26],[365,33,456,30],[365,38,456,35,"_remoteModuleTable"],[365,56,456,30],[365,57,456,54,"debug"],[365,62,456,59],[365,63,456,60],[365,64,456,59],[365,65,456,30],[365,66,456,6],[367,0,457,6],[367,14,457,12,"method"],[367,20,457,18],[367,23,457,21,"debug"],[367,28,457,26],[367,32,457,30],[367,37,457,35,"_remoteMethodTable"],[367,55,457,30],[367,56,457,54,"debug"],[367,61,457,59],[367,62,457,60],[367,63,457,59],[367,64,457,30],[367,66,457,64,"debug"],[367,71,457,69],[367,72,457,70],[367,73,457,69],[367,74,457,30],[367,75,457,6],[368,0,458,6,"invariant"],[368,10,458,6,"invariant"],[368,19,458,15],[368,20,459,8,"callback"],[368,28,458,15],[368,30,460,8],[368,63,460,39,"cbID"],[368,67,460,8],[368,87,460,58,"callID"],[368,93,460,8],[368,107,461,11,"method"],[368,113,461,17],[368,122,462,18,"module"],[368,129,461,17],[368,138,462,28,"method"],[368,144,461,17],[368,212,463,24,"module"],[368,219,463,30],[368,223,463,34],[368,234,461,17],[368,235,460,8],[368,254,464,22,"stringifySafe"],[368,267,464,35],[368,268,464,36,"args"],[368,272,464,35],[368,273,460,8],[368,280,458,15],[368,281,458,6],[369,0,466,6],[369,14,466,12,"profileName"],[369,25,466,23],[369,28,466,26,"debug"],[369,33,466,31],[369,36,467,10],[369,55,467,29,"module"],[369,62,467,10],[369,65,467,38],[369,68,467,10],[369,71,467,44,"method"],[369,77,467,10],[369,80,467,53],[369,83,466,31],[369,86,468,10,"cbID"],[369,90,466,6],[371,0,469,6],[371,14,469,10,"callback"],[371,22,469,18],[371,26,469,22],[371,31,469,27,"__spy"],[371,36,469,6],[371,38,469,34],[372,0,470,8],[372,17,470,13,"__spy"],[372,22,470,8],[372,23,470,19],[373,0,470,20,"type"],[373,14,470,20,"type"],[373,18,470,24],[373,20,470,26,"TO_JS"],[373,25,470,19],[374,0,470,33,"module"],[374,14,470,33,"module"],[374,20,470,39],[374,22,470,41],[374,26,470,19],[375,0,470,47,"method"],[375,14,470,47,"method"],[375,20,470,53],[375,22,470,55,"profileName"],[375,33,470,19],[376,0,470,68,"args"],[376,14,470,68,"args"],[376,18,470,72],[376,20,470,68,"args"],[377,0,470,19],[377,13,470,8],[378,0,471,7],[380,0,472,6,"Systrace"],[380,10,472,6,"Systrace"],[380,18,472,14],[380,19,472,15,"beginEvent"],[380,29,472,6],[380,63,473,39,"profileName"],[380,74,472,6],[380,84,473,55,"stringifySafe"],[380,97,473,68],[380,98,473,69,"args"],[380,102,473,68],[380,103,472,6],[381,0,475,5],[383,0,477,4],[383,12,477,8],[383,13,477,9,"callback"],[383,21,477,4],[383,23,477,19],[384,0,478,6],[385,0,479,5],[387,0,481,4],[387,13,481,9,"_successCallbacks"],[387,30,481,4],[387,31,481,27,"delete"],[387,37,481,4],[387,38,481,34,"callID"],[387,44,481,4],[389,0,482,4],[389,13,482,9,"_failureCallbacks"],[389,30,482,4],[389,31,482,27,"delete"],[389,37,482,4],[389,38,482,34,"callID"],[389,44,482,4],[391,0,483,4,"callback"],[391,8,483,4,"callback"],[391,16,483,12],[391,22,483,4],[391,50,483,16,"args"],[391,54,483,4],[393,0,485,4],[393,12,485,8,"__DEV__"],[393,19,485,4],[393,21,485,17],[394,0,486,6,"Systrace"],[394,10,486,6,"Systrace"],[394,18,486,14],[394,19,486,15,"endEvent"],[394,27,486,6],[395,0,487,5],[396,0,488,3],[399,26,89,13,"spyOrToggle"],[399,37],[399,39,89,63],[400,0,90,4],[400,12,90,8,"spyOrToggle"],[400,23,90,19],[400,28,90,24],[400,32,90,4],[400,34,90,30],[401,0,91,6,"MessageQueue"],[401,10,91,6,"MessageQueue"],[401,22,91,18],[401,23,91,19,"prototype"],[401,32,91,6],[401,33,91,29,"__spy"],[401,38,91,6],[401,41,91,37],[401,51,91,37,"info"],[401,55,91,41],[401,57,91,45],[402,0,92,8,"console"],[402,12,92,8,"console"],[402,19,92,15],[402,20,92,16,"log"],[402,23,92,8],[402,24,93,10],[402,25,93,13,"info"],[402,29,93,17],[402,30,93,18,"type"],[402,34,93,13],[402,39,93,27,"TO_JS"],[402,44,93,13],[402,47,93,35],[402,54,93,13],[402,57,93,45],[402,64,93,10],[402,83,94,15,"info"],[402,87,94,19],[402,88,94,20,"module"],[402,94,94,15],[402,97,94,29,"info"],[402,101,94,33],[402,102,94,34,"module"],[402,108,94,29],[402,111,94,43],[402,114,94,15],[402,117,94,49],[402,119,93,10],[402,123,94,54,"info"],[402,127,94,58],[402,128,94,59,"method"],[402,134,93,10],[402,145,95,16,"JSON"],[402,149,95,20],[402,150,95,21,"stringify"],[402,159,95,16],[402,160,95,31,"info"],[402,164,95,35],[402,165,95,36,"args"],[402,169,95,16],[402,170,93,10],[402,177,92,8],[403,0,97,7],[403,11,91,6],[404,0,98,5],[404,9,90,4],[404,15,98,11],[404,19,98,15,"spyOrToggle"],[404,30,98,26],[404,35,98,31],[404,40,98,11],[404,42,98,38],[405,0,99,6,"MessageQueue"],[405,10,99,6,"MessageQueue"],[405,22,99,18],[405,23,99,19,"prototype"],[405,32,99,6],[405,33,99,29,"__spy"],[405,38,99,6],[405,41,99,37],[405,45,99,6],[406,0,100,5],[406,9,98,11],[406,15,100,11],[407,0,101,6,"MessageQueue"],[407,10,101,6,"MessageQueue"],[407,22,101,18],[407,23,101,19,"prototype"],[407,32,101,6],[407,33,101,29,"__spy"],[407,38,101,6],[407,41,101,37,"spyOrToggle"],[407,52,101,6],[408,0,102,5],[409,0,103,3],[415,0,491,0,"module"],[415,2,491,0,"module"],[415,8,491,6],[415,9,491,7,"exports"],[415,16,491,0],[415,19,491,17,"MessageQueue"],[415,31,491,0]],"functionMap":{"names":["<global>","MessageQueue","constructor","spy","prototype.__spy","callFunctionReturnFlushedQueue","__guard$argument_0","callFunctionReturnResultAndFlushedQueue","invokeCallbackAndReturnFlushedQueue","flushedQueue","getEventLoopRunningTime","registerCallableModule","_lazyCallableModules.name","registerLazyCallableModule","getCallableModule","callNativeSyncHook","processCallbacks","_successCallbacks.forEach$argument_0","enqueueNativeCall","isValidArgument","replacer","createDebugLookup","setImmediatesCallback","__guard","__shouldPauseOnThrow","__callImmediates","__callFunction","__invokeCallback"],"mappings":"AAA;ACwC;ECgB;GD0B;EEM;qCCE;ODM;GFM;EIE;iBCK;KDE;GJG;EME;iBDM;KCE;GNG;EOE;iBFI;KEE;GPG;EQE;iBHC;KGE;GRK;ESE;GTE;EUE;sCCC,YD;GVC;EYE;sCDG;KCM;GZC;EaE;GbG;EcE;Gd8B;EeE;yCCe;WDK;Gf6B;EiBE;8BCiB;ODyB;uBEK;OFS;GjBwC;EoBE;GpBS;EqBK;GrBE;EsBM;GtBU;EuBO;GvBM;EwBE;GxBM;EyBE;GzB2B;E0BE;G1B+C;CDC"}},"type":"js/module"}]}