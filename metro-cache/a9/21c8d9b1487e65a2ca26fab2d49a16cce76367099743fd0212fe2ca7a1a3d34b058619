{"dependencies":[{"name":"@babel/runtime/helpers/defineProperty","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"fbjs/lib/performanceNow","data":{"isAsync":false}},{"name":"fbjs/lib/warning","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var _defineProperty = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/defineProperty\");\n\n  var _createClass = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/createClass\");\n\n  var _classCallCheck = _$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/classCallCheck\");\n\n  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n  var performanceNow = _$$_REQUIRE(_dependencyMap[3], \"fbjs/lib/performanceNow\");\n\n  var warning = _$$_REQUIRE(_dependencyMap[4], \"fbjs/lib/warning\");\n\n  var Info = function Info() {\n    _classCallCheck(this, Info);\n\n    this.any_blank_count = 0;\n    this.any_blank_ms = 0;\n    this.any_blank_speed_sum = 0;\n    this.mostly_blank_count = 0;\n    this.mostly_blank_ms = 0;\n    this.pixels_blank = 0;\n    this.pixels_sampled = 0;\n    this.pixels_scrolled = 0;\n    this.total_time_spent = 0;\n    this.sample_count = 0;\n  };\n\n  var DEBUG = false;\n  var _listeners = [];\n  var _minSampleCount = 10;\n\n  var _sampleRate = DEBUG ? 1 : null;\n\n  var FillRateHelper = function () {\n    _createClass(FillRateHelper, null, [{\n      key: \"addListener\",\n      value: function addListener(callback) {\n        warning(_sampleRate !== null, 'Call `FillRateHelper.setSampleRate` before `addListener`.');\n\n        _listeners.push(callback);\n\n        return {\n          remove: function remove() {\n            _listeners = _listeners.filter(function (listener) {\n              return callback !== listener;\n            });\n          }\n        };\n      }\n    }, {\n      key: \"setSampleRate\",\n      value: function setSampleRate(sampleRate) {\n        _sampleRate = sampleRate;\n      }\n    }, {\n      key: \"setMinSampleCount\",\n      value: function setMinSampleCount(minSampleCount) {\n        _minSampleCount = minSampleCount;\n      }\n    }]);\n\n    function FillRateHelper(getFrameMetrics) {\n      _classCallCheck(this, FillRateHelper);\n\n      this._anyBlankStartTime = null;\n      this._enabled = false;\n      this._info = new Info();\n      this._mostlyBlankStartTime = null;\n      this._samplesStartTime = null;\n      this._getFrameMetrics = getFrameMetrics;\n      this._enabled = (_sampleRate || 0) > Math.random();\n\n      this._resetData();\n    }\n\n    _createClass(FillRateHelper, [{\n      key: \"activate\",\n      value: function activate() {\n        if (this._enabled && this._samplesStartTime == null) {\n          DEBUG && console.debug('FillRateHelper: activate');\n          this._samplesStartTime = performanceNow();\n        }\n      }\n    }, {\n      key: \"deactivateAndFlush\",\n      value: function deactivateAndFlush() {\n        if (!this._enabled) {\n          return;\n        }\n\n        var start = this._samplesStartTime;\n\n        if (start == null) {\n          DEBUG && console.debug('FillRateHelper: bail on deactivate with no start time');\n          return;\n        }\n\n        if (this._info.sample_count < _minSampleCount) {\n          this._resetData();\n\n          return;\n        }\n\n        var total_time_spent = performanceNow() - start;\n\n        var info = _objectSpread({}, this._info, {\n          total_time_spent: total_time_spent\n        });\n\n        if (DEBUG) {\n          var derived = {\n            avg_blankness: this._info.pixels_blank / this._info.pixels_sampled,\n            avg_speed: this._info.pixels_scrolled / (total_time_spent / 1000),\n            avg_speed_when_any_blank: this._info.any_blank_speed_sum / this._info.any_blank_count,\n            any_blank_per_min: this._info.any_blank_count / (total_time_spent / 1000 / 60),\n            any_blank_time_frac: this._info.any_blank_ms / total_time_spent,\n            mostly_blank_per_min: this._info.mostly_blank_count / (total_time_spent / 1000 / 60),\n            mostly_blank_time_frac: this._info.mostly_blank_ms / total_time_spent\n          };\n\n          for (var key in derived) {\n            derived[key] = Math.round(1000 * derived[key]) / 1000;\n          }\n\n          console.debug('FillRateHelper deactivateAndFlush: ', {\n            derived: derived,\n            info: info\n          });\n        }\n\n        _listeners.forEach(function (listener) {\n          return listener(info);\n        });\n\n        this._resetData();\n      }\n    }, {\n      key: \"computeBlankness\",\n      value: function computeBlankness(props, state, scrollMetrics) {\n        if (!this._enabled || props.getItemCount(props.data) === 0 || this._samplesStartTime == null) {\n          return 0;\n        }\n\n        var dOffset = scrollMetrics.dOffset,\n            offset = scrollMetrics.offset,\n            velocity = scrollMetrics.velocity,\n            visibleLength = scrollMetrics.visibleLength;\n        this._info.sample_count++;\n        this._info.pixels_sampled += Math.round(visibleLength);\n        this._info.pixels_scrolled += Math.round(Math.abs(dOffset));\n        var scrollSpeed = Math.round(Math.abs(velocity) * 1000);\n        var now = performanceNow();\n\n        if (this._anyBlankStartTime != null) {\n          this._info.any_blank_ms += now - this._anyBlankStartTime;\n        }\n\n        this._anyBlankStartTime = null;\n\n        if (this._mostlyBlankStartTime != null) {\n          this._info.mostly_blank_ms += now - this._mostlyBlankStartTime;\n        }\n\n        this._mostlyBlankStartTime = null;\n        var blankTop = 0;\n        var first = state.first;\n\n        var firstFrame = this._getFrameMetrics(first);\n\n        while (first <= state.last && (!firstFrame || !firstFrame.inLayout)) {\n          firstFrame = this._getFrameMetrics(first);\n          first++;\n        }\n\n        if (firstFrame && first > 0) {\n          blankTop = Math.min(visibleLength, Math.max(0, firstFrame.offset - offset));\n        }\n\n        var blankBottom = 0;\n        var last = state.last;\n\n        var lastFrame = this._getFrameMetrics(last);\n\n        while (last >= state.first && (!lastFrame || !lastFrame.inLayout)) {\n          lastFrame = this._getFrameMetrics(last);\n          last--;\n        }\n\n        if (lastFrame && last < props.getItemCount(props.data) - 1) {\n          var bottomEdge = lastFrame.offset + lastFrame.length;\n          blankBottom = Math.min(visibleLength, Math.max(0, offset + visibleLength - bottomEdge));\n        }\n\n        var pixels_blank = Math.round(blankTop + blankBottom);\n        var blankness = pixels_blank / visibleLength;\n\n        if (blankness > 0) {\n          this._anyBlankStartTime = now;\n          this._info.any_blank_speed_sum += scrollSpeed;\n          this._info.any_blank_count++;\n          this._info.pixels_blank += pixels_blank;\n\n          if (blankness > 0.5) {\n            this._mostlyBlankStartTime = now;\n            this._info.mostly_blank_count++;\n          }\n        } else if (scrollSpeed < 0.01 || Math.abs(dOffset) < 1) {\n          this.deactivateAndFlush();\n        }\n\n        return blankness;\n      }\n    }, {\n      key: \"enabled\",\n      value: function enabled() {\n        return this._enabled;\n      }\n    }, {\n      key: \"_resetData\",\n      value: function _resetData() {\n        this._anyBlankStartTime = null;\n        this._info = new Info();\n        this._mostlyBlankStartTime = null;\n        this._samplesStartTime = null;\n      }\n    }]);\n\n    return FillRateHelper;\n  }();\n\n  module.exports = FillRateHelper;\n});","lineCount":237,"map":[[2,0,11,0],[14,0,13,0],[14,6,13,6,"performanceNow"],[14,20,13,20],[14,23,13,23,"require"],[14,34,13,30],[14,80,13,0],[16,0,14,0],[16,6,14,6,"warning"],[16,13,14,13],[16,16,14,16,"require"],[16,27,14,23],[16,66,14,0],[18,6,18,6,"Info"],[18,10],[21,9,19,2,"any_blank_count"],[21,24],[21,27,19,28],[21,28],[22,9,20,2,"any_blank_ms"],[22,21],[22,24,20,25],[22,25],[23,9,21,2,"any_blank_speed_sum"],[23,28],[23,31,21,32],[23,32],[24,9,22,2,"mostly_blank_count"],[24,27],[24,30,22,31],[24,31],[25,9,23,2,"mostly_blank_ms"],[25,24],[25,27,23,28],[25,28],[26,9,24,2,"pixels_blank"],[26,21],[26,24,24,25],[26,25],[27,9,25,2,"pixels_sampled"],[27,23],[27,26,25,27],[27,27],[28,9,26,2,"pixels_scrolled"],[28,24],[28,27,26,28],[28,28],[29,9,27,2,"total_time_spent"],[29,25],[29,28,27,29],[29,29],[30,9,28,2,"sample_count"],[30,21],[30,24,28,25],[30,25],[33,0,33,0],[33,6,33,6,"DEBUG"],[33,11,33,11],[33,14,33,14],[33,19,33,0],[34,0,35,0],[34,6,35,4,"_listeners"],[34,16,35,37],[34,19,35,40],[34,21,35,0],[35,0,36,0],[35,6,36,4,"_minSampleCount"],[35,21,36,19],[35,24,36,22],[35,26,36,0],[37,0,37,0],[37,6,37,4,"_sampleRate"],[37,17,37,15],[37,20,37,18,"DEBUG"],[37,25,37,23],[37,28,37,26],[37,29,37,23],[37,32,37,30],[37,36,37,0],[39,6,47,6,"FillRateHelper"],[39,20],[42,34,55,21,"callback"],[42,42],[42,44,55,75],[43,0,56,4,"warning"],[43,8,56,4,"warning"],[43,15,56,11],[43,16,57,6,"_sampleRate"],[43,27,57,17],[43,32,57,22],[43,36,56,11],[43,38,58,6],[43,97,56,11],[43,98,56,4],[45,0,60,4,"_listeners"],[45,8,60,4,"_listeners"],[45,18,60,14],[45,19,60,15,"push"],[45,23,60,4],[45,24,60,20,"callback"],[45,32,60,4],[47,0,61,4],[47,15,61,11],[48,0,62,6,"remove"],[48,10,62,6,"remove"],[48,16,62,12],[48,18,62,14],[48,36,62,20],[49,0,63,8,"_listeners"],[49,12,63,8,"_listeners"],[49,22,63,18],[49,25,63,21,"_listeners"],[49,35,63,31],[49,36,63,32,"filter"],[49,42,63,21],[49,43,63,39],[49,53,63,39,"listener"],[49,61,63,47],[50,0,63,47],[50,21,63,51,"callback"],[50,29,63,59],[50,34,63,64,"listener"],[50,42,63,47],[51,0,63,47],[51,13,63,21],[51,14,63,8],[52,0,64,7],[53,0,61,11],[53,9,61,4],[54,0,66,3],[57,36,68,23,"sampleRate"],[57,46],[57,48,68,43],[58,0,69,4,"_sampleRate"],[58,8,69,4,"_sampleRate"],[58,19,69,15],[58,22,69,18,"sampleRate"],[58,32,69,4],[59,0,70,3],[62,40,72,27,"minSampleCount"],[62,54],[62,56,72,51],[63,0,73,4,"_minSampleCount"],[63,8,73,4,"_minSampleCount"],[63,23,73,19],[63,26,73,22,"minSampleCount"],[63,40,73,4],[64,0,74,3],[67,0,76,2],[67,28,76,14,"getFrameMetrics"],[67,43,76,2],[67,45,76,65],[68,0,76,65],[70,0,76,65],[70,11,48,2,"_anyBlankStartTime"],[70,29,76,65],[70,32,48,24],[70,36,76,65],[71,0,76,65],[71,11,49,2,"_enabled"],[71,19,76,65],[71,22,49,13],[71,27,76,65],[72,0,76,65],[72,11,51,2,"_info"],[72,16,76,65],[72,19,51,10],[72,23,51,14,"Info"],[72,27,51,10],[72,29,76,65],[73,0,76,65],[73,11,52,2,"_mostlyBlankStartTime"],[73,32,76,65],[73,35,52,27],[73,39,76,65],[74,0,76,65],[74,11,53,2,"_samplesStartTime"],[74,28,76,65],[74,31,53,23],[74,35,76,65],[75,0,77,4],[75,11,77,9,"_getFrameMetrics"],[75,27,77,4],[75,30,77,28,"getFrameMetrics"],[75,45,77,4],[76,0,78,4],[76,11,78,9,"_enabled"],[76,19,78,4],[76,22,78,20],[76,23,78,21,"_sampleRate"],[76,34,78,32],[76,38,78,36],[76,39,78,20],[76,43,78,41,"Math"],[76,47,78,45],[76,48,78,46,"random"],[76,54,78,41],[76,56,78,4],[78,0,79,4],[78,11,79,9,"_resetData"],[78,21,79,4],[79,0,80,3],[83,33,82,13],[84,0,83,4],[84,12,83,8],[84,17,83,13,"_enabled"],[84,25,83,8],[84,29,83,25],[84,34,83,30,"_samplesStartTime"],[84,51,83,25],[84,55,83,51],[84,59,83,4],[84,61,83,57],[85,0,84,6,"DEBUG"],[85,10,84,6,"DEBUG"],[85,15,84,11],[85,19,84,15,"console"],[85,26,84,22],[85,27,84,23,"debug"],[85,32,84,15],[85,33,84,29],[85,59,84,15],[85,60,84,6],[86,0,85,6],[86,15,85,11,"_samplesStartTime"],[86,32,85,6],[86,35,85,31,"performanceNow"],[86,49,85,45],[86,51,85,6],[87,0,86,5],[88,0,87,3],[91,43,89,23],[92,0,90,4],[92,12,90,8],[92,13,90,9],[92,18,90,14,"_enabled"],[92,26,90,4],[92,28,90,24],[93,0,91,6],[94,0,92,5],[96,0,93,4],[96,12,93,10,"start"],[96,17,93,15],[96,20,93,18],[96,25,93,23,"_samplesStartTime"],[96,42,93,4],[98,0,94,4],[98,12,94,8,"start"],[98,17,94,13],[98,21,94,17],[98,25,94,4],[98,27,94,23],[99,0,95,6,"DEBUG"],[99,10,95,6,"DEBUG"],[99,15,95,11],[99,19,96,8,"console"],[99,26,96,15],[99,27,96,16,"debug"],[99,32,96,8],[99,33,96,22],[99,88,96,8],[99,89,95,6],[100,0,97,6],[101,0,98,5],[103,0,99,4],[103,12,99,8],[103,17,99,13,"_info"],[103,22,99,8],[103,23,99,19,"sample_count"],[103,35,99,8],[103,38,99,34,"_minSampleCount"],[103,53,99,4],[103,55,99,51],[104,0,101,6],[104,15,101,11,"_resetData"],[104,25,101,6],[106,0,102,6],[107,0,103,5],[109,0,104,4],[109,12,104,10,"total_time_spent"],[109,28,104,26],[109,31,104,29,"performanceNow"],[109,45,104,43],[109,50,104,48,"start"],[109,55,104,4],[111,0,105,4],[111,12,105,10,"info"],[111,16,105,19],[111,37,106,9],[111,42,106,14,"_info"],[111,47,105,19],[112,0,107,6,"total_time_spent"],[112,10,107,6,"total_time_spent"],[112,26,107,22],[112,28,107,6,"total_time_spent"],[113,0,105,19],[113,10,105,4],[115,0,109,4],[115,12,109,8,"DEBUG"],[115,17,109,4],[115,19,109,15],[116,0,110,6],[116,14,110,12,"derived"],[116,21,110,19],[116,24,110,22],[117,0,111,8,"avg_blankness"],[117,12,111,8,"avg_blankness"],[117,25,111,21],[117,27,111,23],[117,32,111,28,"_info"],[117,37,111,23],[117,38,111,34,"pixels_blank"],[117,50,111,23],[117,53,111,49],[117,58,111,54,"_info"],[117,63,111,49],[117,64,111,60,"pixels_sampled"],[117,78,110,22],[118,0,112,8,"avg_speed"],[118,12,112,8,"avg_speed"],[118,21,112,17],[118,23,112,19],[118,28,112,24,"_info"],[118,33,112,19],[118,34,112,30,"pixels_scrolled"],[118,49,112,19],[118,53,112,49,"total_time_spent"],[118,69,112,65],[118,72,112,68],[118,76,112,19],[118,77,110,22],[119,0,113,8,"avg_speed_when_any_blank"],[119,12,113,8,"avg_speed_when_any_blank"],[119,36,113,32],[119,38,114,10],[119,43,114,15,"_info"],[119,48,114,10],[119,49,114,21,"any_blank_speed_sum"],[119,68,114,10],[119,71,114,43],[119,76,114,48,"_info"],[119,81,114,43],[119,82,114,54,"any_blank_count"],[119,97,110,22],[120,0,115,8,"any_blank_per_min"],[120,12,115,8,"any_blank_per_min"],[120,29,115,25],[120,31,116,10],[120,36,116,15,"_info"],[120,41,116,10],[120,42,116,21,"any_blank_count"],[120,57,116,10],[120,61,116,40,"total_time_spent"],[120,77,116,56],[120,80,116,59],[120,84,116,40],[120,87,116,66],[120,89,116,10],[120,90,110,22],[121,0,117,8,"any_blank_time_frac"],[121,12,117,8,"any_blank_time_frac"],[121,31,117,27],[121,33,117,29],[121,38,117,34,"_info"],[121,43,117,29],[121,44,117,40,"any_blank_ms"],[121,56,117,29],[121,59,117,55,"total_time_spent"],[121,75,110,22],[122,0,118,8,"mostly_blank_per_min"],[122,12,118,8,"mostly_blank_per_min"],[122,32,118,28],[122,34,119,10],[122,39,119,15,"_info"],[122,44,119,10],[122,45,119,21,"mostly_blank_count"],[122,63,119,10],[122,67,119,43,"total_time_spent"],[122,83,119,59],[122,86,119,62],[122,90,119,43],[122,93,119,69],[122,95,119,10],[122,96,110,22],[123,0,120,8,"mostly_blank_time_frac"],[123,12,120,8,"mostly_blank_time_frac"],[123,34,120,30],[123,36,120,32],[123,41,120,37,"_info"],[123,46,120,32],[123,47,120,43,"mostly_blank_ms"],[123,62,120,32],[123,65,120,61,"total_time_spent"],[124,0,110,22],[124,11,110,6],[126,0,122,6],[126,15,122,11],[126,19,122,17,"key"],[126,22,122,6],[126,26,122,24,"derived"],[126,33,122,6],[126,35,122,33],[127,0,123,8,"derived"],[127,12,123,8,"derived"],[127,19,123,15],[127,20,123,16,"key"],[127,23,123,15],[127,24,123,8],[127,27,123,23,"Math"],[127,31,123,27],[127,32,123,28,"round"],[127,37,123,23],[127,38,123,34],[127,45,123,41,"derived"],[127,52,123,48],[127,53,123,49,"key"],[127,56,123,48],[127,57,123,23],[127,61,123,57],[127,65,123,8],[128,0,124,7],[130,0,125,6,"console"],[130,10,125,6,"console"],[130,17,125,13],[130,18,125,14,"debug"],[130,23,125,6],[130,24,125,20],[130,61,125,6],[130,63,125,59],[131,0,125,60,"derived"],[131,12,125,60,"derived"],[131,19,125,67],[131,21,125,60,"derived"],[131,28,125,59],[132,0,125,69,"info"],[132,12,125,69,"info"],[132,16,125,73],[132,18,125,69,"info"],[133,0,125,59],[133,11,125,6],[134,0,126,5],[136,0,127,4,"_listeners"],[136,8,127,4,"_listeners"],[136,18,127,14],[136,19,127,15,"forEach"],[136,26,127,4],[136,27,127,23],[136,37,127,23,"listener"],[136,45,127,31],[137,0,127,31],[137,17,127,35,"listener"],[137,25,127,43],[137,26,127,44,"info"],[137,30,127,43],[137,31,127,31],[138,0,127,31],[138,9,127,4],[140,0,128,4],[140,13,128,9,"_resetData"],[140,23,128,4],[141,0,129,3],[144,39,132,4,"props"],[144,44],[144,46,137,4,"state"],[144,51],[144,53,141,4,"scrollMetrics"],[144,66],[144,68,147,12],[145,0,148,4],[145,12,149,6],[145,13,149,7],[145,18,149,12,"_enabled"],[145,26,149,6],[145,30,150,6,"props"],[145,35,150,11],[145,36,150,12,"getItemCount"],[145,48,150,6],[145,49,150,25,"props"],[145,54,150,30],[145,55,150,31,"data"],[145,59,150,6],[145,65,150,41],[145,66,149,6],[145,70,151,6],[145,75,151,11,"_samplesStartTime"],[145,92,151,6],[145,96,151,32],[145,100,148,4],[145,102,152,6],[146,0,153,6],[146,17,153,13],[146,18,153,6],[147,0,154,5],[149,0,147,12],[149,12,155,11,"dOffset"],[149,19,147,12],[149,22,155,55,"scrollMetrics"],[149,35,147,12],[149,36,155,11,"dOffset"],[149,43,147,12],[150,0,147,12],[150,12,155,20,"offset"],[150,18,147,12],[150,21,155,55,"scrollMetrics"],[150,34,147,12],[150,35,155,20,"offset"],[150,41,147,12],[151,0,147,12],[151,12,155,28,"velocity"],[151,20,147,12],[151,23,155,55,"scrollMetrics"],[151,36,147,12],[151,37,155,28,"velocity"],[151,45,147,12],[152,0,147,12],[152,12,155,38,"visibleLength"],[152,25,147,12],[152,28,155,55,"scrollMetrics"],[152,41,147,12],[152,42,155,38,"visibleLength"],[152,55,147,12],[153,0,159,4],[153,13,159,9,"_info"],[153,18,159,4],[153,19,159,15,"sample_count"],[153,31,159,4],[154,0,160,4],[154,13,160,9,"_info"],[154,18,160,4],[154,19,160,15,"pixels_sampled"],[154,33,160,4],[154,37,160,33,"Math"],[154,41,160,37],[154,42,160,38,"round"],[154,47,160,33],[154,48,160,44,"visibleLength"],[154,61,160,33],[154,62,160,4],[155,0,161,4],[155,13,161,9,"_info"],[155,18,161,4],[155,19,161,15,"pixels_scrolled"],[155,34,161,4],[155,38,161,34,"Math"],[155,42,161,38],[155,43,161,39,"round"],[155,48,161,34],[155,49,161,45,"Math"],[155,53,161,49],[155,54,161,50,"abs"],[155,57,161,45],[155,58,161,54,"dOffset"],[155,65,161,45],[155,66,161,34],[155,67,161,4],[156,0,162,4],[156,12,162,10,"scrollSpeed"],[156,23,162,21],[156,26,162,24,"Math"],[156,30,162,28],[156,31,162,29,"round"],[156,36,162,24],[156,37,162,35,"Math"],[156,41,162,39],[156,42,162,40,"abs"],[156,45,162,35],[156,46,162,44,"velocity"],[156,54,162,35],[156,58,162,56],[156,62,162,24],[156,63,162,4],[157,0,165,4],[157,12,165,10,"now"],[157,15,165,13],[157,18,165,16,"performanceNow"],[157,32,165,30],[157,34,165,4],[159,0,166,4],[159,12,166,8],[159,17,166,13,"_anyBlankStartTime"],[159,35,166,8],[159,39,166,35],[159,43,166,4],[159,45,166,41],[160,0,167,6],[160,15,167,11,"_info"],[160,20,167,6],[160,21,167,17,"any_blank_ms"],[160,33,167,6],[160,37,167,33,"now"],[160,40,167,36],[160,43,167,39],[160,48,167,44,"_anyBlankStartTime"],[160,66,167,6],[161,0,168,5],[163,0,169,4],[163,13,169,9,"_anyBlankStartTime"],[163,31,169,4],[163,34,169,30],[163,38,169,4],[165,0,170,4],[165,12,170,8],[165,17,170,13,"_mostlyBlankStartTime"],[165,38,170,8],[165,42,170,38],[165,46,170,4],[165,48,170,44],[166,0,171,6],[166,15,171,11,"_info"],[166,20,171,6],[166,21,171,17,"mostly_blank_ms"],[166,36,171,6],[166,40,171,36,"now"],[166,43,171,39],[166,46,171,42],[166,51,171,47,"_mostlyBlankStartTime"],[166,72,171,6],[167,0,172,5],[169,0,173,4],[169,13,173,9,"_mostlyBlankStartTime"],[169,34,173,4],[169,37,173,33],[169,41,173,4],[170,0,175,4],[170,12,175,8,"blankTop"],[170,20,175,16],[170,23,175,19],[170,24,175,4],[171,0,176,4],[171,12,176,8,"first"],[171,17,176,13],[171,20,176,16,"state"],[171,25,176,21],[171,26,176,22,"first"],[171,31,176,4],[173,0,177,4],[173,12,177,8,"firstFrame"],[173,22,177,18],[173,25,177,21],[173,30,177,26,"_getFrameMetrics"],[173,46,177,21],[173,47,177,43,"first"],[173,52,177,21],[173,53,177,4],[175,0,178,4],[175,15,178,11,"first"],[175,20,178,16],[175,24,178,20,"state"],[175,29,178,25],[175,30,178,26,"last"],[175,34,178,11],[175,39,178,35],[175,40,178,36,"firstFrame"],[175,50,178,35],[175,54,178,50],[175,55,178,51,"firstFrame"],[175,65,178,61],[175,66,178,62,"inLayout"],[175,74,178,11],[175,75,178,4],[175,77,178,73],[176,0,179,6,"firstFrame"],[176,10,179,6,"firstFrame"],[176,20,179,16],[176,23,179,19],[176,28,179,24,"_getFrameMetrics"],[176,44,179,19],[176,45,179,41,"first"],[176,50,179,19],[176,51,179,6],[177,0,180,6,"first"],[177,10,180,6,"first"],[177,15,180,11],[178,0,181,5],[180,0,184,4],[180,12,184,8,"firstFrame"],[180,22,184,18],[180,26,184,22,"first"],[180,31,184,27],[180,34,184,30],[180,35,184,4],[180,37,184,33],[181,0,185,6,"blankTop"],[181,10,185,6,"blankTop"],[181,18,185,14],[181,21,185,17,"Math"],[181,25,185,21],[181,26,185,22,"min"],[181,29,185,17],[181,30,186,8,"visibleLength"],[181,43,185,17],[181,45,187,8,"Math"],[181,49,187,12],[181,50,187,13,"max"],[181,53,187,8],[181,54,187,17],[181,55,187,8],[181,57,187,20,"firstFrame"],[181,67,187,30],[181,68,187,31,"offset"],[181,74,187,20],[181,77,187,40,"offset"],[181,83,187,8],[181,84,185,17],[181,85,185,6],[182,0,189,5],[184,0,190,4],[184,12,190,8,"blankBottom"],[184,23,190,19],[184,26,190,22],[184,27,190,4],[185,0,191,4],[185,12,191,8,"last"],[185,16,191,12],[185,19,191,15,"state"],[185,24,191,20],[185,25,191,21,"last"],[185,29,191,4],[187,0,192,4],[187,12,192,8,"lastFrame"],[187,21,192,17],[187,24,192,20],[187,29,192,25,"_getFrameMetrics"],[187,45,192,20],[187,46,192,42,"last"],[187,50,192,20],[187,51,192,4],[189,0,193,4],[189,15,193,11,"last"],[189,19,193,15],[189,23,193,19,"state"],[189,28,193,24],[189,29,193,25,"first"],[189,34,193,11],[189,39,193,35],[189,40,193,36,"lastFrame"],[189,49,193,35],[189,53,193,49],[189,54,193,50,"lastFrame"],[189,63,193,59],[189,64,193,60,"inLayout"],[189,72,193,11],[189,73,193,4],[189,75,193,71],[190,0,194,6,"lastFrame"],[190,10,194,6,"lastFrame"],[190,19,194,15],[190,22,194,18],[190,27,194,23,"_getFrameMetrics"],[190,43,194,18],[190,44,194,40,"last"],[190,48,194,18],[190,49,194,6],[191,0,195,6,"last"],[191,10,195,6,"last"],[191,14,195,10],[192,0,196,5],[194,0,199,4],[194,12,199,8,"lastFrame"],[194,21,199,17],[194,25,199,21,"last"],[194,29,199,25],[194,32,199,28,"props"],[194,37,199,33],[194,38,199,34,"getItemCount"],[194,50,199,28],[194,51,199,47,"props"],[194,56,199,52],[194,57,199,53,"data"],[194,61,199,28],[194,65,199,61],[194,66,199,4],[194,68,199,64],[195,0,200,6],[195,14,200,12,"bottomEdge"],[195,24,200,22],[195,27,200,25,"lastFrame"],[195,36,200,34],[195,37,200,35,"offset"],[195,43,200,25],[195,46,200,44,"lastFrame"],[195,55,200,53],[195,56,200,54,"length"],[195,62,200,6],[196,0,201,6,"blankBottom"],[196,10,201,6,"blankBottom"],[196,21,201,17],[196,24,201,20,"Math"],[196,28,201,24],[196,29,201,25,"min"],[196,32,201,20],[196,33,202,8,"visibleLength"],[196,46,201,20],[196,48,203,8,"Math"],[196,52,203,12],[196,53,203,13,"max"],[196,56,203,8],[196,57,203,17],[196,58,203,8],[196,60,203,20,"offset"],[196,66,203,26],[196,69,203,29,"visibleLength"],[196,82,203,20],[196,85,203,45,"bottomEdge"],[196,95,203,8],[196,96,201,20],[196,97,201,6],[197,0,205,5],[199,0,206,4],[199,12,206,10,"pixels_blank"],[199,24,206,22],[199,27,206,25,"Math"],[199,31,206,29],[199,32,206,30,"round"],[199,37,206,25],[199,38,206,36,"blankTop"],[199,46,206,44],[199,49,206,47,"blankBottom"],[199,60,206,25],[199,61,206,4],[200,0,207,4],[200,12,207,10,"blankness"],[200,21,207,19],[200,24,207,22,"pixels_blank"],[200,36,207,34],[200,39,207,37,"visibleLength"],[200,52,207,4],[202,0,208,4],[202,12,208,8,"blankness"],[202,21,208,17],[202,24,208,20],[202,25,208,4],[202,27,208,23],[203,0,209,6],[203,15,209,11,"_anyBlankStartTime"],[203,33,209,6],[203,36,209,32,"now"],[203,39,209,6],[204,0,210,6],[204,15,210,11,"_info"],[204,20,210,6],[204,21,210,17,"any_blank_speed_sum"],[204,40,210,6],[204,44,210,40,"scrollSpeed"],[204,55,210,6],[205,0,211,6],[205,15,211,11,"_info"],[205,20,211,6],[205,21,211,17,"any_blank_count"],[205,36,211,6],[206,0,212,6],[206,15,212,11,"_info"],[206,20,212,6],[206,21,212,17,"pixels_blank"],[206,33,212,6],[206,37,212,33,"pixels_blank"],[206,49,212,6],[208,0,213,6],[208,14,213,10,"blankness"],[208,23,213,19],[208,26,213,22],[208,29,213,6],[208,31,213,27],[209,0,214,8],[209,17,214,13,"_mostlyBlankStartTime"],[209,38,214,8],[209,41,214,37,"now"],[209,44,214,8],[210,0,215,8],[210,17,215,13,"_info"],[210,22,215,8],[210,23,215,19,"mostly_blank_count"],[210,41,215,8],[211,0,216,7],[212,0,217,5],[212,9,208,4],[212,15,217,11],[212,19,217,15,"scrollSpeed"],[212,30,217,26],[212,33,217,29],[212,37,217,15],[212,41,217,37,"Math"],[212,45,217,41],[212,46,217,42,"abs"],[212,49,217,37],[212,50,217,46,"dOffset"],[212,57,217,37],[212,61,217,57],[212,62,217,11],[212,64,217,60],[213,0,218,6],[213,15,218,11,"deactivateAndFlush"],[213,33,218,6],[214,0,219,5],[216,0,220,4],[216,15,220,11,"blankness"],[216,24,220,4],[217,0,221,3],[220,32,223,21],[221,0,224,4],[221,15,224,11],[221,20,224,16,"_enabled"],[221,28,224,4],[222,0,225,3],[225,35,227,15],[226,0,228,4],[226,13,228,9,"_anyBlankStartTime"],[226,31,228,4],[226,34,228,30],[226,38,228,4],[227,0,229,4],[227,13,229,9,"_info"],[227,18,229,4],[227,21,229,17],[227,25,229,21,"Info"],[227,29,229,17],[227,31,229,4],[228,0,230,4],[228,13,230,9,"_mostlyBlankStartTime"],[228,34,230,4],[228,37,230,33],[228,41,230,4],[229,0,231,4],[229,13,231,9,"_samplesStartTime"],[229,30,231,4],[229,33,231,29],[229,37,231,4],[230,0,232,3],[236,0,235,0,"module"],[236,2,235,0,"module"],[236,8,235,6],[236,9,235,7,"exports"],[236,16,235,0],[236,19,235,17,"FillRateHelper"],[236,33,235,0]],"functionMap":{"names":["<global>","Info","FillRateHelper","addListener","remove","_listeners.filter$argument_0","setSampleRate","setMinSampleCount","constructor","activate","deactivateAndFlush","_listeners.forEach$argument_0","computeBlankness","enabled","_resetData"],"mappings":"AAA;ACiB;CDW;AEkB;ECQ;cCO;uCCC,iCD;ODC;GDE;EIE;GJE;EKE;GLE;EME;GNI;EOE;GPK;EQE;uBCsC,0BD;GRE;EUE;GV0F;EWE;GXE;EYE;GZK;CFC"}},"type":"js/module"}]}