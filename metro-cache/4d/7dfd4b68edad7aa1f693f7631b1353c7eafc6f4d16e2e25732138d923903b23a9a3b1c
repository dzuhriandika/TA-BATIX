{"dependencies":[{"name":"@babel/runtime/helpers/defineProperty","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/inherits","data":{"isAsync":false}},{"name":"../Utilities/Platform","data":{"isAsync":false}},{"name":"react","data":{"isAsync":false}},{"name":"../StyleSheet/StyleSheet","data":{"isAsync":false}},{"name":"../Text/Text","data":{"isAsync":false}},{"name":"./Touchable/TouchableNativeFeedback","data":{"isAsync":false}},{"name":"./Touchable/TouchableOpacity","data":{"isAsync":false}},{"name":"./View/View","data":{"isAsync":false}},{"name":"invariant","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var _defineProperty = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/defineProperty\");\n\n  var _classCallCheck = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/classCallCheck\");\n\n  var _createClass = _$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/createClass\");\n\n  var _possibleConstructorReturn = _$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/possibleConstructorReturn\");\n\n  var _getPrototypeOf = _$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/getPrototypeOf\");\n\n  var _inherits = _$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/inherits\");\n\n  var _jsxFileName = \"/home/anzalladd/Documents/crudReactNative/node_modules/react-native/Libraries/Components/Button.js\";\n\n  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n  var Platform = _$$_REQUIRE(_dependencyMap[6], \"../Utilities/Platform\");\n\n  var React = _$$_REQUIRE(_dependencyMap[7], \"react\");\n\n  var StyleSheet = _$$_REQUIRE(_dependencyMap[8], \"../StyleSheet/StyleSheet\");\n\n  var Text = _$$_REQUIRE(_dependencyMap[9], \"../Text/Text\");\n\n  var TouchableNativeFeedback = _$$_REQUIRE(_dependencyMap[10], \"./Touchable/TouchableNativeFeedback\");\n\n  var TouchableOpacity = _$$_REQUIRE(_dependencyMap[11], \"./Touchable/TouchableOpacity\");\n\n  var View = _$$_REQUIRE(_dependencyMap[12], \"./View/View\");\n\n  var invariant = _$$_REQUIRE(_dependencyMap[13], \"invariant\");\n\n  var Button = function (_React$Component) {\n    _inherits(Button, _React$Component);\n\n    function Button() {\n      _classCallCheck(this, Button);\n\n      return _possibleConstructorReturn(this, _getPrototypeOf(Button).apply(this, arguments));\n    }\n\n    _createClass(Button, [{\n      key: \"render\",\n      value: function render() {\n        var _this$props = this.props,\n            accessibilityLabel = _this$props.accessibilityLabel,\n            color = _this$props.color,\n            onPress = _this$props.onPress,\n            touchSoundDisabled = _this$props.touchSoundDisabled,\n            title = _this$props.title,\n            hasTVPreferredFocus = _this$props.hasTVPreferredFocus,\n            nextFocusDown = _this$props.nextFocusDown,\n            nextFocusForward = _this$props.nextFocusForward,\n            nextFocusLeft = _this$props.nextFocusLeft,\n            nextFocusRight = _this$props.nextFocusRight,\n            nextFocusUp = _this$props.nextFocusUp,\n            disabled = _this$props.disabled,\n            testID = _this$props.testID;\n        var buttonStyles = [styles.button];\n        var textStyles = [styles.text];\n\n        if (color) {\n          if (\"android\" === 'ios') {\n            textStyles.push({\n              color: color\n            });\n          } else {\n            buttonStyles.push({\n              backgroundColor: color\n            });\n          }\n        }\n\n        var accessibilityStates = [];\n\n        if (disabled) {\n          buttonStyles.push(styles.buttonDisabled);\n          textStyles.push(styles.textDisabled);\n          accessibilityStates.push('disabled');\n        }\n\n        invariant(typeof title === 'string', 'The title prop of a Button must be a string');\n        var formattedTitle = \"android\" === 'android' ? title.toUpperCase() : title;\n        var Touchable = \"android\" === 'android' ? TouchableNativeFeedback : TouchableOpacity;\n        return React.createElement(Touchable, {\n          accessibilityLabel: accessibilityLabel,\n          accessibilityRole: \"button\",\n          accessibilityStates: accessibilityStates,\n          hasTVPreferredFocus: hasTVPreferredFocus,\n          nextFocusDown: nextFocusDown,\n          nextFocusForward: nextFocusForward,\n          nextFocusLeft: nextFocusLeft,\n          nextFocusRight: nextFocusRight,\n          nextFocusUp: nextFocusUp,\n          testID: testID,\n          disabled: disabled,\n          onPress: onPress,\n          touchSoundDisabled: touchSoundDisabled,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171\n          }\n        }, React.createElement(View, {\n          style: buttonStyles,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 185\n          }\n        }, React.createElement(Text, {\n          style: textStyles,\n          disabled: disabled,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 186\n          }\n        }, formattedTitle)));\n      }\n    }]);\n\n    return Button;\n  }(React.Component);\n\n  var styles = StyleSheet.create({\n    button: {\n      elevation: 4,\n      backgroundColor: '#2196F3',\n      borderRadius: 2\n    },\n    text: _objectSpread({\n      textAlign: 'center',\n      padding: 8\n    }, {\n      color: 'white',\n      fontWeight: '500'\n    }),\n    buttonDisabled: {\n      elevation: 0,\n      backgroundColor: '#dfdfdf'\n    },\n    textDisabled: {\n      color: '#a1a1a1'\n    }\n  });\n  module.exports = Button;\n});","lineCount":150,"map":[[2,0,11,0],[22,0,13,0],[22,6,13,6,"Platform"],[22,14,13,14],[22,17,13,17,"require"],[22,28,13,24],[22,72,13,0],[24,0,14,0],[24,6,14,6,"React"],[24,11,14,11],[24,14,14,14,"require"],[24,25,14,21],[24,53,14,0],[26,0,15,0],[26,6,15,6,"StyleSheet"],[26,16,15,16],[26,19,15,19,"require"],[26,30,15,26],[26,77,15,0],[28,0,16,0],[28,6,16,6,"Text"],[28,10,16,10],[28,13,16,13,"require"],[28,24,16,20],[28,59,16,0],[30,0,17,0],[30,6,17,6,"TouchableNativeFeedback"],[30,29,17,29],[30,32,17,32,"require"],[30,43,17,39],[30,102,17,0],[32,0,18,0],[32,6,18,6,"TouchableOpacity"],[32,22,18,22],[32,25,18,25,"require"],[32,36,18,32],[32,88,18,0],[34,0,19,0],[34,6,19,6,"View"],[34,10,19,10],[34,13,19,13,"require"],[34,24,19,20],[34,59,19,0],[36,0,21,0],[36,6,21,6,"invariant"],[36,15,21,15],[36,18,21,18,"require"],[36,29,21,25],[36,62,21,0],[38,6,130,6,"Button"],[38,12],[49,31,131,23],[50,0,131,23],[50,26,146,8],[50,31,146,13,"props"],[50,36,131,23],[51,0,131,23],[51,12,133,6,"accessibilityLabel"],[51,30,131,23],[51,45,133,6,"accessibilityLabel"],[51,63,131,23],[52,0,131,23],[52,12,134,6,"color"],[52,17,131,23],[52,32,134,6,"color"],[52,37,131,23],[53,0,131,23],[53,12,135,6,"onPress"],[53,19,131,23],[53,34,135,6,"onPress"],[53,41,131,23],[54,0,131,23],[54,12,136,6,"touchSoundDisabled"],[54,30,131,23],[54,45,136,6,"touchSoundDisabled"],[54,63,131,23],[55,0,131,23],[55,12,137,6,"title"],[55,17,131,23],[55,32,137,6,"title"],[55,37,131,23],[56,0,131,23],[56,12,138,6,"hasTVPreferredFocus"],[56,31,131,23],[56,46,138,6,"hasTVPreferredFocus"],[56,65,131,23],[57,0,131,23],[57,12,139,6,"nextFocusDown"],[57,25,131,23],[57,40,139,6,"nextFocusDown"],[57,53,131,23],[58,0,131,23],[58,12,140,6,"nextFocusForward"],[58,28,131,23],[58,43,140,6,"nextFocusForward"],[58,59,131,23],[59,0,131,23],[59,12,141,6,"nextFocusLeft"],[59,25,131,23],[59,40,141,6,"nextFocusLeft"],[59,53,131,23],[60,0,131,23],[60,12,142,6,"nextFocusRight"],[60,26,131,23],[60,41,142,6,"nextFocusRight"],[60,55,131,23],[61,0,131,23],[61,12,143,6,"nextFocusUp"],[61,23,131,23],[61,38,143,6,"nextFocusUp"],[61,49,131,23],[62,0,131,23],[62,12,144,6,"disabled"],[62,20,131,23],[62,35,144,6,"disabled"],[62,43,131,23],[63,0,131,23],[63,12,145,6,"testID"],[63,18,131,23],[63,33,145,6,"testID"],[63,39,131,23],[64,0,147,4],[64,12,147,10,"buttonStyles"],[64,24,147,22],[64,27,147,25],[64,28,147,26,"styles"],[64,34,147,32],[64,35,147,33,"button"],[64,41,147,25],[64,42,147,4],[65,0,148,4],[65,12,148,10,"textStyles"],[65,22,148,20],[65,25,148,23],[65,26,148,24,"styles"],[65,32,148,30],[65,33,148,31,"text"],[65,37,148,23],[65,38,148,4],[67,0,149,4],[67,12,149,8,"color"],[67,17,149,4],[67,19,149,15],[68,0,150,6],[68,14,150,10],[68,28,150,26],[68,33,150,6],[68,35,150,33],[69,0,151,8,"textStyles"],[69,12,151,8,"textStyles"],[69,22,151,18],[69,23,151,19,"push"],[69,27,151,8],[69,28,151,24],[70,0,151,25,"color"],[70,14,151,25,"color"],[70,19,151,30],[70,21,151,32,"color"],[71,0,151,24],[71,13,151,8],[72,0,152,7],[72,11,150,6],[72,17,152,13],[73,0,153,8,"buttonStyles"],[73,12,153,8,"buttonStyles"],[73,24,153,20],[73,25,153,21,"push"],[73,29,153,8],[73,30,153,26],[74,0,153,27,"backgroundColor"],[74,14,153,27,"backgroundColor"],[74,29,153,42],[74,31,153,44,"color"],[75,0,153,26],[75,13,153,8],[76,0,154,7],[77,0,155,5],[79,0,156,4],[79,12,156,10,"accessibilityStates"],[79,31,156,29],[79,34,156,32],[79,36,156,4],[81,0,157,4],[81,12,157,8,"disabled"],[81,20,157,4],[81,22,157,18],[82,0,158,6,"buttonStyles"],[82,10,158,6,"buttonStyles"],[82,22,158,18],[82,23,158,19,"push"],[82,27,158,6],[82,28,158,24,"styles"],[82,34,158,30],[82,35,158,31,"buttonDisabled"],[82,49,158,6],[83,0,159,6,"textStyles"],[83,10,159,6,"textStyles"],[83,20,159,16],[83,21,159,17,"push"],[83,25,159,6],[83,26,159,22,"styles"],[83,32,159,28],[83,33,159,29,"textDisabled"],[83,45,159,6],[84,0,160,6,"accessibilityStates"],[84,10,160,6,"accessibilityStates"],[84,29,160,25],[84,30,160,26,"push"],[84,34,160,6],[84,35,160,31],[84,45,160,6],[85,0,161,5],[87,0,162,4,"invariant"],[87,8,162,4,"invariant"],[87,17,162,13],[87,18,163,6],[87,25,163,13,"title"],[87,30,163,6],[87,35,163,23],[87,43,162,13],[87,45,164,6],[87,90,162,13],[87,91,162,4],[88,0,166,4],[88,12,166,10,"formattedTitle"],[88,26,166,24],[88,29,167,6],[88,43,167,22],[88,52,167,6],[88,55,167,34,"title"],[88,60,167,39],[88,61,167,40,"toUpperCase"],[88,72,167,34],[88,74,167,6],[88,77,167,56,"title"],[88,82,166,4],[89,0,168,4],[89,12,168,10,"Touchable"],[89,21,168,19],[89,24,169,6],[89,38,169,22],[89,47,169,6],[89,50,169,34,"TouchableNativeFeedback"],[89,73,169,6],[89,76,169,60,"TouchableOpacity"],[89,92,168,4],[90,0,170,4],[90,15,171,6],[90,35,171,7],[90,44,171,6],[91,0,172,8],[91,10,172,8],[91,28,172,26],[91,30,172,28,"accessibilityLabel"],[91,48,171,6],[92,0,173,8],[92,10,173,8],[92,27,173,25],[92,29,173,26],[92,37,171,6],[93,0,174,8],[93,10,174,8],[93,29,174,27],[93,31,174,29,"accessibilityStates"],[93,50,171,6],[94,0,175,8],[94,10,175,8],[94,29,175,27],[94,31,175,29,"hasTVPreferredFocus"],[94,50,171,6],[95,0,176,8],[95,10,176,8],[95,23,176,21],[95,25,176,23,"nextFocusDown"],[95,38,171,6],[96,0,177,8],[96,10,177,8],[96,26,177,24],[96,28,177,26,"nextFocusForward"],[96,44,171,6],[97,0,178,8],[97,10,178,8],[97,23,178,21],[97,25,178,23,"nextFocusLeft"],[97,38,171,6],[98,0,179,8],[98,10,179,8],[98,24,179,22],[98,26,179,24,"nextFocusRight"],[98,40,171,6],[99,0,180,8],[99,10,180,8],[99,21,180,19],[99,23,180,21,"nextFocusUp"],[99,34,171,6],[100,0,181,8],[100,10,181,8],[100,16,181,14],[100,18,181,16,"testID"],[100,24,171,6],[101,0,182,8],[101,10,182,8],[101,18,182,16],[101,20,182,18,"disabled"],[101,28,171,6],[102,0,183,8],[102,10,183,8],[102,17,183,15],[102,19,183,17,"onPress"],[102,26,171,6],[103,0,184,8],[103,10,184,8],[103,28,184,26],[103,30,184,28,"touchSoundDisabled"],[103,48,171,6],[104,0,171,6],[105,0,171,6],[106,0,171,6],[107,0,171,6],[108,0,171,6],[108,11,185,8],[108,31,185,9],[108,35,185,8],[109,0,185,14],[109,10,185,14],[109,15,185,19],[109,17,185,21,"buttonStyles"],[109,29,185,8],[110,0,185,8],[111,0,185,8],[112,0,185,8],[113,0,185,8],[114,0,185,8],[114,11,186,10],[114,31,186,11],[114,35,186,10],[115,0,186,16],[115,10,186,16],[115,15,186,21],[115,17,186,23,"textStyles"],[115,27,186,10],[116,0,186,35],[116,10,186,35],[116,18,186,43],[116,20,186,45,"disabled"],[116,28,186,10],[117,0,186,10],[118,0,186,10],[119,0,186,10],[120,0,186,10],[121,0,186,10],[121,11,187,13,"formattedTitle"],[121,25,186,10],[121,26,185,8],[121,27,171,6],[121,28,170,4],[122,0,192,3],[126,4,130,21,"React"],[126,9,130,26],[126,10,130,27,"Component"],[126,19],[128,0,195,0],[128,6,195,6,"styles"],[128,12,195,12],[128,15,195,15,"StyleSheet"],[128,25,195,25],[128,26,195,26,"create"],[128,32,195,15],[128,33,195,33],[129,0,196,2,"button"],[129,4,196,2,"button"],[129,10,196,8],[129,12,198,13],[130,0,199,6,"elevation"],[130,6,199,6,"elevation"],[130,15,199,15],[130,17,199,17],[130,18,198,13],[131,0,201,6,"backgroundColor"],[131,6,201,6,"backgroundColor"],[131,21,201,21],[131,23,201,23],[131,32,198,13],[132,0,202,6,"borderRadius"],[132,6,202,6,"borderRadius"],[132,18,202,18],[132,20,202,20],[133,0,198,13],[133,5,195,33],[134,0,205,2,"text"],[134,4,205,2,"text"],[134,8,205,6],[135,0,206,4,"textAlign"],[135,6,206,4,"textAlign"],[135,15,206,13],[135,17,206,15],[135,25,205,6],[136,0,207,4,"padding"],[136,6,207,4,"padding"],[136,13,207,11],[136,15,207,13],[137,0,205,6],[137,7,214,15],[138,0,215,8,"color"],[138,6,215,8,"color"],[138,11,215,13],[138,13,215,15],[138,20,214,15],[139,0,216,8,"fontWeight"],[139,6,216,8,"fontWeight"],[139,16,216,18],[139,18,216,20],[140,0,214,15],[140,5,205,6],[140,6,195,33],[141,0,220,2,"buttonDisabled"],[141,4,220,2,"buttonDisabled"],[141,18,220,16],[141,20,222,13],[142,0,223,6,"elevation"],[142,6,223,6,"elevation"],[142,15,223,15],[142,17,223,17],[142,18,222,13],[143,0,224,6,"backgroundColor"],[143,6,224,6,"backgroundColor"],[143,21,224,21],[143,23,224,23],[144,0,222,13],[144,5,195,33],[145,0,227,2,"textDisabled"],[145,4,227,2,"textDisabled"],[145,16,227,14],[145,18,231,13],[146,0,232,6,"color"],[146,6,232,6,"color"],[146,11,232,11],[146,13,232,13],[147,0,231,13],[148,0,195,33],[148,3,195,15],[148,4,195,0],[149,0,237,0,"module"],[149,2,237,0,"module"],[149,8,237,6],[149,9,237,7,"exports"],[149,16,237,0],[149,19,237,17,"Button"],[149,25,237,0]],"functionMap":{"names":["<global>","Button","render"],"mappings":"AAA;ACiI;ECC;GD6D;CDC"}},"type":"js/module"}]}