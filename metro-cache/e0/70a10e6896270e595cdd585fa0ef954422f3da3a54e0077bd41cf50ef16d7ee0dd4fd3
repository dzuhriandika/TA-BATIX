{"dependencies":[{"name":"@babel/runtime/helpers/extends","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/assertThisInitialized","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/inherits","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/defineProperty","data":{"isAsync":false}},{"name":"../DeprecatedPropTypes/DeprecatedTextPropTypes","data":{"isAsync":false}},{"name":"react","data":{"isAsync":false}},{"name":"../Components/View/ReactNativeViewAttributes","data":{"isAsync":false}},{"name":"./TextAncestor","data":{"isAsync":false}},{"name":"../Components/Touchable/Touchable","data":{"isAsync":false}},{"name":"../ReactNative/UIManager","data":{"isAsync":false}},{"name":"../Renderer/shims/createReactNativeComponentClass","data":{"isAsync":false}},{"name":"nullthrows","data":{"isAsync":false}},{"name":"../StyleSheet/processColor","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var _extends = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/extends\");\n\n  var _classCallCheck = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/classCallCheck\");\n\n  var _createClass = _$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/createClass\");\n\n  var _possibleConstructorReturn = _$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/possibleConstructorReturn\");\n\n  var _getPrototypeOf = _$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/getPrototypeOf\");\n\n  var _assertThisInitialized = _$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/assertThisInitialized\");\n\n  var _inherits = _$$_REQUIRE(_dependencyMap[6], \"@babel/runtime/helpers/inherits\");\n\n  var _defineProperty = _$$_REQUIRE(_dependencyMap[7], \"@babel/runtime/helpers/defineProperty\");\n\n  var _jsxFileName = \"/home/anzalladd/Documents/crudReactNative/node_modules/react-native/Libraries/Text/Text.js\";\n\n  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n  var DeprecatedTextPropTypes = _$$_REQUIRE(_dependencyMap[8], \"../DeprecatedPropTypes/DeprecatedTextPropTypes\");\n\n  var React = _$$_REQUIRE(_dependencyMap[9], \"react\");\n\n  var ReactNativeViewAttributes = _$$_REQUIRE(_dependencyMap[10], \"../Components/View/ReactNativeViewAttributes\");\n\n  var TextAncestor = _$$_REQUIRE(_dependencyMap[11], \"./TextAncestor\");\n\n  var Touchable = _$$_REQUIRE(_dependencyMap[12], \"../Components/Touchable/Touchable\");\n\n  var UIManager = _$$_REQUIRE(_dependencyMap[13], \"../ReactNative/UIManager\");\n\n  var createReactNativeComponentClass = _$$_REQUIRE(_dependencyMap[14], \"../Renderer/shims/createReactNativeComponentClass\");\n\n  var nullthrows = _$$_REQUIRE(_dependencyMap[15], \"nullthrows\");\n\n  var processColor = _$$_REQUIRE(_dependencyMap[16], \"../StyleSheet/processColor\");\n\n  var PRESS_RECT_OFFSET = {\n    top: 20,\n    left: 20,\n    right: 20,\n    bottom: 30\n  };\n  var viewConfig = {\n    validAttributes: _objectSpread({}, ReactNativeViewAttributes.UIView, {\n      isHighlighted: true,\n      numberOfLines: true,\n      ellipsizeMode: true,\n      allowFontScaling: true,\n      maxFontSizeMultiplier: true,\n      disabled: true,\n      selectable: true,\n      selectionColor: true,\n      adjustsFontSizeToFit: true,\n      minimumFontScale: true,\n      textBreakStrategy: true,\n      onTextLayout: true,\n      onInlineViewLayout: true,\n      dataDetectorType: true\n    }),\n    directEventTypes: {\n      topTextLayout: {\n        registrationName: 'onTextLayout'\n      },\n      topInlineViewLayout: {\n        registrationName: 'onInlineViewLayout'\n      }\n    },\n    uiViewClassName: 'RCTText'\n  };\n\n  var TouchableText = function (_React$Component) {\n    _inherits(TouchableText, _React$Component);\n\n    function TouchableText() {\n      var _getPrototypeOf2;\n\n      var _this;\n\n      _classCallCheck(this, TouchableText);\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TouchableText)).call.apply(_getPrototypeOf2, [this].concat(args)));\n      _this.state = _objectSpread({}, Touchable.Mixin.touchableGetInitialState(), {\n        isHighlighted: false,\n        createResponderHandlers: _this._createResponseHandlers.bind(_assertThisInitialized(_this)),\n        responseHandlers: null\n      });\n      return _this;\n    }\n\n    _createClass(TouchableText, [{\n      key: \"render\",\n      value: function render() {\n        var props = this.props;\n\n        if (isTouchable(props)) {\n          props = _objectSpread({}, props, {}, this.state.responseHandlers, {\n            isHighlighted: this.state.isHighlighted\n          });\n        }\n\n        if (props.selectionColor != null) {\n          props = _objectSpread({}, props, {\n            selectionColor: processColor(props.selectionColor)\n          });\n        }\n\n        if (__DEV__) {\n          if (Touchable.TOUCH_TARGET_DEBUG && props.onPress != null) {\n            props = _objectSpread({}, props, {\n              style: [props.style, {\n                color: 'magenta'\n              }]\n            });\n          }\n        }\n\n        return React.createElement(TextAncestor.Consumer, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153\n          }\n        }, function (hasTextAncestor) {\n          return hasTextAncestor ? React.createElement(RCTVirtualText, _extends({}, props, {\n            ref: props.forwardedRef,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 156\n            }\n          })) : React.createElement(TextAncestor.Provider, {\n            value: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 158\n            }\n          }, React.createElement(RCTText, _extends({}, props, {\n            ref: props.forwardedRef,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 159\n            }\n          })));\n        });\n      }\n    }, {\n      key: \"_createResponseHandlers\",\n      value: function _createResponseHandlers() {\n        var _this2 = this;\n\n        return {\n          onStartShouldSetResponder: function onStartShouldSetResponder() {\n            var onStartShouldSetResponder = _this2.props.onStartShouldSetResponder;\n            var shouldSetResponder = (onStartShouldSetResponder == null ? false : onStartShouldSetResponder()) || isTouchable(_this2.props);\n\n            if (shouldSetResponder) {\n              _this2._attachTouchHandlers();\n            }\n\n            return shouldSetResponder;\n          },\n          onResponderGrant: function onResponderGrant(event, dispatchID) {\n            nullthrows(_this2.touchableHandleResponderGrant)(event, dispatchID);\n\n            if (_this2.props.onResponderGrant != null) {\n              _this2.props.onResponderGrant.call(_this2, event, dispatchID);\n            }\n          },\n          onResponderMove: function onResponderMove(event) {\n            nullthrows(_this2.touchableHandleResponderMove)(event);\n\n            if (_this2.props.onResponderMove != null) {\n              _this2.props.onResponderMove.call(_this2, event);\n            }\n          },\n          onResponderRelease: function onResponderRelease(event) {\n            nullthrows(_this2.touchableHandleResponderRelease)(event);\n\n            if (_this2.props.onResponderRelease != null) {\n              _this2.props.onResponderRelease.call(_this2, event);\n            }\n          },\n          onResponderTerminate: function onResponderTerminate(event) {\n            nullthrows(_this2.touchableHandleResponderTerminate)(event);\n\n            if (_this2.props.onResponderTerminate != null) {\n              _this2.props.onResponderTerminate.call(_this2, event);\n            }\n          },\n          onResponderTerminationRequest: function onResponderTerminationRequest() {\n            var onResponderTerminationRequest = _this2.props.onResponderTerminationRequest;\n\n            if (!nullthrows(_this2.touchableHandleResponderTerminationRequest)()) {\n              return false;\n            }\n\n            if (onResponderTerminationRequest == null) {\n              return true;\n            }\n\n            return onResponderTerminationRequest();\n          }\n        };\n      }\n    }, {\n      key: \"_attachTouchHandlers\",\n      value: function _attachTouchHandlers() {\n        var _this3 = this;\n\n        if (this.touchableGetPressRectOffset != null) {\n          return;\n        }\n\n        for (var key in Touchable.Mixin) {\n          if (typeof Touchable.Mixin[key] === 'function') {\n            this[key] = Touchable.Mixin[key].bind(this);\n          }\n        }\n\n        this.touchableHandleActivePressIn = function () {\n          if (!_this3.props.suppressHighlighting && isTouchable(_this3.props)) {\n            _this3.setState({\n              isHighlighted: true\n            });\n          }\n        };\n\n        this.touchableHandleActivePressOut = function () {\n          if (!_this3.props.suppressHighlighting && isTouchable(_this3.props)) {\n            _this3.setState({\n              isHighlighted: false\n            });\n          }\n        };\n\n        this.touchableHandlePress = function (event) {\n          if (_this3.props.onPress != null) {\n            _this3.props.onPress(event);\n          }\n        };\n\n        this.touchableHandleLongPress = function (event) {\n          if (_this3.props.onLongPress != null) {\n            _this3.props.onLongPress(event);\n          }\n        };\n\n        this.touchableGetPressRectOffset = function () {\n          return _this3.props.pressRetentionOffset == null ? PRESS_RECT_OFFSET : _this3.props.pressRetentionOffset;\n        };\n      }\n    }], [{\n      key: \"getDerivedStateFromProps\",\n      value: function getDerivedStateFromProps(nextProps, prevState) {\n        return prevState.responseHandlers == null && isTouchable(nextProps) ? {\n          responseHandlers: prevState.createResponderHandlers()\n        } : null;\n      }\n    }]);\n\n    return TouchableText;\n  }(React.Component);\n\n  TouchableText.defaultProps = {\n    accessible: true,\n    allowFontScaling: true,\n    ellipsizeMode: 'tail'\n  };\n  TouchableText.viewConfig = viewConfig;\n\n  var isTouchable = function isTouchable(props) {\n    return props.onPress != null || props.onLongPress != null || props.onStartShouldSetResponder != null;\n  };\n\n  var RCTText = createReactNativeComponentClass(viewConfig.uiViewClassName, function () {\n    return viewConfig;\n  });\n  var RCTVirtualText = UIManager.getViewManagerConfig('RCTVirtualText') == null ? RCTText : createReactNativeComponentClass('RCTVirtualText', function () {\n    return {\n      validAttributes: _objectSpread({}, ReactNativeViewAttributes.UIView, {\n        isHighlighted: true,\n        maxFontSizeMultiplier: true\n      }),\n      uiViewClassName: 'RCTVirtualText'\n    };\n  });\n\n  var Text = function Text(props, forwardedRef) {\n    return React.createElement(TouchableText, _extends({}, props, {\n      forwardedRef: forwardedRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      }\n    }));\n  };\n\n  var TextToExport = React.forwardRef(Text);\n  TextToExport.displayName = 'Text';\n  TextToExport.propTypes = DeprecatedTextPropTypes;\n  module.exports = TextToExport;\n});","lineCount":311,"map":[[2,0,11,0],[26,0,13,0],[26,6,13,6,"DeprecatedTextPropTypes"],[26,29,13,29],[26,32,13,32,"require"],[26,43,13,39],[26,112,13,0],[28,0,14,0],[28,6,14,6,"React"],[28,11,14,11],[28,14,14,14,"require"],[28,25,14,21],[28,53,14,0],[30,0,15,0],[30,6,15,6,"ReactNativeViewAttributes"],[30,31,15,31],[30,34,15,34,"require"],[30,45,15,41],[30,113,15,0],[32,0,16,0],[32,6,16,6,"TextAncestor"],[32,18,16,18],[32,21,16,21,"require"],[32,32,16,28],[32,70,16,0],[34,0,17,0],[34,6,17,6,"Touchable"],[34,15,17,15],[34,18,17,18,"require"],[34,29,17,25],[34,86,17,0],[36,0,18,0],[36,6,18,6,"UIManager"],[36,15,18,15],[36,18,18,18,"require"],[36,29,18,25],[36,77,18,0],[38,0,20,0],[38,6,20,6,"createReactNativeComponentClass"],[38,37,20,37],[38,40,20,40,"require"],[38,51,20,47],[38,124,20,0],[40,0,21,0],[40,6,21,6,"nullthrows"],[40,16,21,16],[40,19,21,19,"require"],[40,30,21,26],[40,64,21,0],[42,0,22,0],[42,6,22,6,"processColor"],[42,18,22,18],[42,21,22,21,"require"],[42,32,22,28],[42,82,22,0],[44,0,52,0],[44,6,52,6,"PRESS_RECT_OFFSET"],[44,23,52,23],[44,26,52,26],[45,0,52,27,"top"],[45,4,52,27,"top"],[45,7,52,30],[45,9,52,32],[45,11,52,26],[46,0,52,36,"left"],[46,4,52,36,"left"],[46,8,52,40],[46,10,52,42],[46,12,52,26],[47,0,52,46,"right"],[47,4,52,46,"right"],[47,9,52,51],[47,11,52,53],[47,13,52,26],[48,0,52,57,"bottom"],[48,4,52,57,"bottom"],[48,10,52,63],[48,12,52,65],[49,0,52,26],[49,3,52,0],[50,0,54,0],[50,6,54,6,"viewConfig"],[50,16,54,16],[50,19,54,19],[51,0,55,2,"validAttributes"],[51,4,55,2,"validAttributes"],[51,19,55,17],[51,39,56,7,"ReactNativeViewAttributes"],[51,64,56,32],[51,65,56,33,"UIView"],[51,71,55,17],[52,0,57,4,"isHighlighted"],[52,6,57,4,"isHighlighted"],[52,19,57,17],[52,21,57,19],[52,25,55,17],[53,0,58,4,"numberOfLines"],[53,6,58,4,"numberOfLines"],[53,19,58,17],[53,21,58,19],[53,25,55,17],[54,0,59,4,"ellipsizeMode"],[54,6,59,4,"ellipsizeMode"],[54,19,59,17],[54,21,59,19],[54,25,55,17],[55,0,60,4,"allowFontScaling"],[55,6,60,4,"allowFontScaling"],[55,22,60,20],[55,24,60,22],[55,28,55,17],[56,0,61,4,"maxFontSizeMultiplier"],[56,6,61,4,"maxFontSizeMultiplier"],[56,27,61,25],[56,29,61,27],[56,33,55,17],[57,0,62,4,"disabled"],[57,6,62,4,"disabled"],[57,14,62,12],[57,16,62,14],[57,20,55,17],[58,0,63,4,"selectable"],[58,6,63,4,"selectable"],[58,16,63,14],[58,18,63,16],[58,22,55,17],[59,0,64,4,"selectionColor"],[59,6,64,4,"selectionColor"],[59,20,64,18],[59,22,64,20],[59,26,55,17],[60,0,65,4,"adjustsFontSizeToFit"],[60,6,65,4,"adjustsFontSizeToFit"],[60,26,65,24],[60,28,65,26],[60,32,55,17],[61,0,66,4,"minimumFontScale"],[61,6,66,4,"minimumFontScale"],[61,22,66,20],[61,24,66,22],[61,28,55,17],[62,0,67,4,"textBreakStrategy"],[62,6,67,4,"textBreakStrategy"],[62,23,67,21],[62,25,67,23],[62,29,55,17],[63,0,68,4,"onTextLayout"],[63,6,68,4,"onTextLayout"],[63,18,68,16],[63,20,68,18],[63,24,55,17],[64,0,69,4,"onInlineViewLayout"],[64,6,69,4,"onInlineViewLayout"],[64,24,69,22],[64,26,69,24],[64,30,55,17],[65,0,70,4,"dataDetectorType"],[65,6,70,4,"dataDetectorType"],[65,22,70,20],[65,24,70,22],[66,0,55,17],[66,6,54,19],[67,0,72,2,"directEventTypes"],[67,4,72,2,"directEventTypes"],[67,20,72,18],[67,22,72,20],[68,0,73,4,"topTextLayout"],[68,6,73,4,"topTextLayout"],[68,19,73,17],[68,21,73,19],[69,0,74,6,"registrationName"],[69,8,74,6,"registrationName"],[69,24,74,22],[69,26,74,24],[70,0,73,19],[70,7,72,20],[71,0,76,4,"topInlineViewLayout"],[71,6,76,4,"topInlineViewLayout"],[71,25,76,23],[71,27,76,25],[72,0,77,6,"registrationName"],[72,8,77,6,"registrationName"],[72,24,77,22],[72,26,77,24],[73,0,76,25],[74,0,72,20],[74,5,54,19],[75,0,80,2,"uiViewClassName"],[75,4,80,2,"uiViewClassName"],[75,19,80,17],[75,21,80,19],[76,0,54,19],[76,3,54,0],[78,6,88,6,"TouchableText"],[78,19],[93,12,109,2,"state"],[93,17],[93,38,110,7,"Touchable"],[93,47,110,16],[93,48,110,17,"Mixin"],[93,53,110,7],[93,54,110,23,"touchableGetInitialState"],[93,78,110,7],[93,80],[94,0,111,4,"isHighlighted"],[94,8,111,4,"isHighlighted"],[94,21,111,17],[94,23,111,19],[94,28],[95,0,112,4,"createResponderHandlers"],[95,8,112,4,"createResponderHandlers"],[95,31,112,27],[95,33,112,29],[95,39,112,34,"_createResponseHandlers"],[95,62,112,29],[95,63,112,58,"bind"],[95,67,112,29],[95,98],[96,0,113,4,"responseHandlers"],[96,8,113,4,"responseHandlers"],[96,24,113,20],[96,26,113,22],[103,31,129,23],[104,0,130,4],[104,12,130,8,"props"],[104,17,130,13],[104,20,130,16],[104,25,130,21,"props"],[104,30,130,4],[106,0,131,4],[106,12,131,8,"isTouchable"],[106,23,131,19],[106,24,131,20,"props"],[106,29,131,19],[106,30,131,4],[106,32,131,28],[107,0,132,6,"props"],[107,10,132,6,"props"],[107,15,132,11],[107,36,133,11,"props"],[107,41,132,11],[107,47,134,11],[107,52,134,16,"state"],[107,57,134,11],[107,58,134,22,"responseHandlers"],[107,74,132,11],[108,0,135,8,"isHighlighted"],[108,12,135,8,"isHighlighted"],[108,25,135,21],[108,27,135,23],[108,32,135,28,"state"],[108,37,135,23],[108,38,135,34,"isHighlighted"],[109,0,132,11],[109,12,132,6],[110,0,137,5],[112,0,138,4],[112,12,138,8,"props"],[112,17,138,13],[112,18,138,14,"selectionColor"],[112,32,138,8],[112,36,138,32],[112,40,138,4],[112,42,138,38],[113,0,139,6,"props"],[113,10,139,6,"props"],[113,15,139,11],[113,36,140,11,"props"],[113,41,139,11],[114,0,141,8,"selectionColor"],[114,12,141,8,"selectionColor"],[114,26,141,22],[114,28,141,24,"processColor"],[114,40,141,36],[114,41,141,37,"props"],[114,46,141,42],[114,47,141,43,"selectionColor"],[114,61,141,36],[115,0,139,11],[115,12,139,6],[116,0,143,5],[118,0,144,4],[118,12,144,8,"__DEV__"],[118,19,144,4],[118,21,144,17],[119,0,145,6],[119,14,145,10,"Touchable"],[119,23,145,19],[119,24,145,20,"TOUCH_TARGET_DEBUG"],[119,42,145,10],[119,46,145,42,"props"],[119,51,145,47],[119,52,145,48,"onPress"],[119,59,145,42],[119,63,145,59],[119,67,145,6],[119,69,145,65],[120,0,146,8,"props"],[120,12,146,8,"props"],[120,17,146,13],[120,38,147,13,"props"],[120,43,146,13],[121,0,148,10,"style"],[121,14,148,10,"style"],[121,19,148,15],[121,21,148,17],[121,22,148,18,"props"],[121,27,148,23],[121,28,148,24,"style"],[121,33,148,17],[121,35,148,31],[122,0,148,32,"color"],[122,16,148,32,"color"],[122,21,148,37],[122,23,148,39],[123,0,148,31],[123,15,148,17],[124,0,146,13],[124,14,146,8],[125,0,150,7],[126,0,151,5],[128,0,152,4],[128,15,153,6],[128,35,153,7],[128,47,153,6],[128,48,153,20],[128,56,153,6],[129,0,153,6],[130,0,153,6],[131,0,153,6],[132,0,153,6],[133,0,153,6],[133,11,154,9],[133,21,154,9,"hasTextAncestor"],[133,36,154,24],[134,0,154,24],[134,17,155,10,"hasTextAncestor"],[134,32,155,25],[134,35,156,12],[134,55,156,13],[134,69,156,12],[134,84,156,32,"props"],[134,89,156,12],[135,0,156,39],[135,12,156,39],[135,15,156,42],[135,17,156,44,"props"],[135,22,156,49],[135,23,156,50,"forwardedRef"],[135,35,156,12],[136,0,156,12],[137,0,156,12],[138,0,156,12],[139,0,156,12],[140,0,156,12],[140,13,155,25],[140,16,158,12],[140,36,158,13],[140,48,158,12],[140,49,158,26],[140,57,158,12],[141,0,158,35],[141,12,158,35],[141,17,158,40],[141,19,158,42],[141,23,158,12],[142,0,158,12],[143,0,158,12],[144,0,158,12],[145,0,158,12],[146,0,158,12],[146,13,159,14],[146,33,159,15],[146,40,159,14],[146,55,159,27,"props"],[146,60,159,14],[147,0,159,34],[147,12,159,34],[147,15,159,37],[147,17,159,39,"props"],[147,22,159,44],[147,23,159,45,"forwardedRef"],[147,35,159,14],[148,0,159,14],[149,0,159,14],[150,0,159,14],[151,0,159,14],[152,0,159,14],[152,13,158,12],[152,14,154,24],[153,0,154,24],[153,9,153,6],[153,10,152,4],[154,0,165,3],[157,48,167,46],[158,0,167,46],[160,0,168,4],[160,15,168,11],[161,0,169,6,"onStartShouldSetResponder"],[161,10,169,6,"onStartShouldSetResponder"],[161,35,169,31],[161,37,169,33],[161,74,169,48],[162,0,169,48],[162,16,170,15,"onStartShouldSetResponder"],[162,41,169,48],[162,44,170,44],[162,50,170,48],[162,51,170,49,"props"],[162,56,169,48],[162,57,170,15,"onStartShouldSetResponder"],[162,82,169,48],[163,0,171,8],[163,16,171,14,"shouldSetResponder"],[163,34,171,32],[163,37,172,10],[163,38,172,11,"onStartShouldSetResponder"],[163,63,172,36],[163,67,172,40],[163,71,172,11],[163,74,173,14],[163,79,172,11],[163,82,174,14,"onStartShouldSetResponder"],[163,107,174,39],[163,109,172,10],[163,114,174,46,"isTouchable"],[163,125,174,57],[163,126,174,58],[163,132,174,62],[163,133,174,63,"props"],[163,138,174,57],[163,139,171,8],[165,0,176,8],[165,16,176,12,"shouldSetResponder"],[165,34,176,8],[165,36,176,32],[166,0,177,10],[166,14,177,10],[166,20,177,14],[166,21,177,15,"_attachTouchHandlers"],[166,41,177,10],[167,0,178,9],[169,0,179,8],[169,19,179,15,"shouldSetResponder"],[169,37,179,8],[170,0,180,7],[170,11,168,11],[171,0,181,6,"onResponderGrant"],[171,10,181,6,"onResponderGrant"],[171,26,181,22],[171,28,181,24],[171,54,181,25,"event"],[171,59,181,24],[171,61,181,44,"dispatchID"],[171,71,181,24],[171,73,181,73],[172,0,182,8,"nullthrows"],[172,12,182,8,"nullthrows"],[172,22,182,18],[172,23,182,19],[172,29,182,23],[172,30,182,24,"touchableHandleResponderGrant"],[172,59,182,18],[172,60,182,8],[172,61,182,55,"event"],[172,66,182,8],[172,68,182,62,"dispatchID"],[172,78,182,8],[174,0,183,8],[174,16,183,12],[174,22,183,16],[174,23,183,17,"props"],[174,28,183,12],[174,29,183,23,"onResponderGrant"],[174,45,183,12],[174,49,183,43],[174,53,183,8],[174,55,183,49],[175,0,184,10],[175,14,184,10],[175,20,184,14],[175,21,184,15,"props"],[175,26,184,10],[175,27,184,21,"onResponderGrant"],[175,43,184,10],[175,44,184,38,"call"],[175,48,184,10],[175,49,184,43],[175,55,184,10],[175,57,184,49,"event"],[175,62,184,10],[175,64,184,56,"dispatchID"],[175,74,184,10],[176,0,185,9],[177,0,186,7],[177,11,168,11],[178,0,187,6,"onResponderMove"],[178,10,187,6,"onResponderMove"],[178,25,187,21],[178,27,187,23],[178,52,187,24,"event"],[178,57,187,23],[178,59,187,52],[179,0,188,8,"nullthrows"],[179,12,188,8,"nullthrows"],[179,22,188,18],[179,23,188,19],[179,29,188,23],[179,30,188,24,"touchableHandleResponderMove"],[179,58,188,18],[179,59,188,8],[179,60,188,54,"event"],[179,65,188,8],[181,0,189,8],[181,16,189,12],[181,22,189,16],[181,23,189,17,"props"],[181,28,189,12],[181,29,189,23,"onResponderMove"],[181,44,189,12],[181,48,189,42],[181,52,189,8],[181,54,189,48],[182,0,190,10],[182,14,190,10],[182,20,190,14],[182,21,190,15,"props"],[182,26,190,10],[182,27,190,21,"onResponderMove"],[182,42,190,10],[182,43,190,37,"call"],[182,47,190,10],[182,48,190,42],[182,54,190,10],[182,56,190,48,"event"],[182,61,190,10],[183,0,191,9],[184,0,192,7],[184,11,168,11],[185,0,193,6,"onResponderRelease"],[185,10,193,6,"onResponderRelease"],[185,28,193,24],[185,30,193,26],[185,58,193,27,"event"],[185,63,193,26],[185,65,193,55],[186,0,194,8,"nullthrows"],[186,12,194,8,"nullthrows"],[186,22,194,18],[186,23,194,19],[186,29,194,23],[186,30,194,24,"touchableHandleResponderRelease"],[186,61,194,18],[186,62,194,8],[186,63,194,57,"event"],[186,68,194,8],[188,0,195,8],[188,16,195,12],[188,22,195,16],[188,23,195,17,"props"],[188,28,195,12],[188,29,195,23,"onResponderRelease"],[188,47,195,12],[188,51,195,45],[188,55,195,8],[188,57,195,51],[189,0,196,10],[189,14,196,10],[189,20,196,14],[189,21,196,15,"props"],[189,26,196,10],[189,27,196,21,"onResponderRelease"],[189,45,196,10],[189,46,196,40,"call"],[189,50,196,10],[189,51,196,45],[189,57,196,10],[189,59,196,51,"event"],[189,64,196,10],[190,0,197,9],[191,0,198,7],[191,11,168,11],[192,0,199,6,"onResponderTerminate"],[192,10,199,6,"onResponderTerminate"],[192,30,199,26],[192,32,199,28],[192,62,199,29,"event"],[192,67,199,28],[192,69,199,57],[193,0,200,8,"nullthrows"],[193,12,200,8,"nullthrows"],[193,22,200,18],[193,23,200,19],[193,29,200,23],[193,30,200,24,"touchableHandleResponderTerminate"],[193,63,200,18],[193,64,200,8],[193,65,200,59,"event"],[193,70,200,8],[195,0,201,8],[195,16,201,12],[195,22,201,16],[195,23,201,17,"props"],[195,28,201,12],[195,29,201,23,"onResponderTerminate"],[195,49,201,12],[195,53,201,47],[195,57,201,8],[195,59,201,53],[196,0,202,10],[196,14,202,10],[196,20,202,14],[196,21,202,15,"props"],[196,26,202,10],[196,27,202,21,"onResponderTerminate"],[196,47,202,10],[196,48,202,42,"call"],[196,52,202,10],[196,53,202,47],[196,59,202,10],[196,61,202,53,"event"],[196,66,202,10],[197,0,203,9],[198,0,204,7],[198,11,168,11],[199,0,205,6,"onResponderTerminationRequest"],[199,10,205,6,"onResponderTerminationRequest"],[199,39,205,35],[199,41,205,37],[199,82,205,52],[200,0,205,52],[200,16,206,15,"onResponderTerminationRequest"],[200,45,205,52],[200,48,206,48],[200,54,206,52],[200,55,206,53,"props"],[200,60,205,52],[200,61,206,15,"onResponderTerminationRequest"],[200,90,205,52],[202,0,207,8],[202,16,207,12],[202,17,207,13,"nullthrows"],[202,27,207,23],[202,28,207,24],[202,34,207,28],[202,35,207,29,"touchableHandleResponderTerminationRequest"],[202,77,207,23],[202,78,207,13],[202,80,207,8],[202,82,207,76],[203,0,208,10],[203,21,208,17],[203,26,208,10],[204,0,209,9],[206,0,210,8],[206,16,210,12,"onResponderTerminationRequest"],[206,45,210,41],[206,49,210,45],[206,53,210,8],[206,55,210,51],[207,0,211,10],[207,21,211,17],[207,25,211,10],[208,0,212,9],[210,0,213,8],[210,19,213,15,"onResponderTerminationRequest"],[210,48,213,44],[210,50,213,8],[211,0,214,7],[212,0,168,11],[212,9,168,4],[213,0,216,3],[216,45,221,31],[217,0,221,31],[219,0,222,4],[219,12,222,8],[219,17,222,13,"touchableGetPressRectOffset"],[219,44,222,8],[219,48,222,44],[219,52,222,4],[219,54,222,50],[220,0,223,6],[221,0,224,5],[223,0,225,4],[223,13,225,9],[223,17,225,15,"key"],[223,20,225,4],[223,24,225,22,"Touchable"],[223,33,225,31],[223,34,225,32,"Mixin"],[223,39,225,4],[223,41,225,39],[224,0,226,6],[224,14,226,10],[224,21,226,17,"Touchable"],[224,30,226,26],[224,31,226,27,"Mixin"],[224,36,226,17],[224,37,226,33,"key"],[224,40,226,17],[224,41,226,10],[224,46,226,42],[224,56,226,6],[224,58,226,54],[225,0,227,9],[225,16,227,8],[225,17,227,20,"key"],[225,20,227,8],[225,24,227,27,"Touchable"],[225,33,227,36],[225,34,227,37,"Mixin"],[225,39,227,27],[225,40,227,43,"key"],[225,43,227,27],[225,45,227,48,"bind"],[225,49,227,27],[225,50,227,53],[225,54,227,27],[225,55,227,8],[226,0,228,7],[227,0,229,5],[229,0,230,4],[229,13,230,9,"touchableHandleActivePressIn"],[229,41,230,4],[229,44,230,40],[229,56,230,52],[230,0,231,6],[230,14,231,10],[230,15,231,11],[230,21,231,15],[230,22,231,16,"props"],[230,27,231,11],[230,28,231,22,"suppressHighlighting"],[230,48,231,10],[230,52,231,46,"isTouchable"],[230,63,231,57],[230,64,231,58],[230,70,231,62],[230,71,231,63,"props"],[230,76,231,57],[230,77,231,6],[230,79,231,71],[231,0,232,8],[231,12,232,8],[231,18,232,12],[231,19,232,13,"setState"],[231,27,232,8],[231,28,232,22],[232,0,232,23,"isHighlighted"],[232,14,232,23,"isHighlighted"],[232,27,232,36],[232,29,232,38],[233,0,232,22],[233,13,232,8],[234,0,233,7],[235,0,234,5],[235,9,230,4],[237,0,235,4],[237,13,235,9,"touchableHandleActivePressOut"],[237,42,235,4],[237,45,235,41],[237,57,235,53],[238,0,236,6],[238,14,236,10],[238,15,236,11],[238,21,236,15],[238,22,236,16,"props"],[238,27,236,11],[238,28,236,22,"suppressHighlighting"],[238,48,236,10],[238,52,236,46,"isTouchable"],[238,63,236,57],[238,64,236,58],[238,70,236,62],[238,71,236,63,"props"],[238,76,236,57],[238,77,236,6],[238,79,236,71],[239,0,237,8],[239,12,237,8],[239,18,237,12],[239,19,237,13,"setState"],[239,27,237,8],[239,28,237,22],[240,0,237,23,"isHighlighted"],[240,14,237,23,"isHighlighted"],[240,27,237,36],[240,29,237,38],[241,0,237,22],[241,13,237,8],[242,0,238,7],[243,0,239,5],[243,9,235,4],[245,0,240,4],[245,13,240,9,"touchableHandlePress"],[245,33,240,4],[245,36,240,32],[245,46,240,33,"event"],[245,51,240,32],[245,53,240,61],[246,0,241,6],[246,14,241,10],[246,20,241,14],[246,21,241,15,"props"],[246,26,241,10],[246,27,241,21,"onPress"],[246,34,241,10],[246,38,241,32],[246,42,241,6],[246,44,241,38],[247,0,242,8],[247,12,242,8],[247,18,242,12],[247,19,242,13,"props"],[247,24,242,8],[247,25,242,19,"onPress"],[247,32,242,8],[247,33,242,27,"event"],[247,38,242,8],[248,0,243,7],[249,0,244,5],[249,9,240,4],[251,0,245,4],[251,13,245,9,"touchableHandleLongPress"],[251,37,245,4],[251,40,245,36],[251,50,245,37,"event"],[251,55,245,36],[251,57,245,65],[252,0,246,6],[252,14,246,10],[252,20,246,14],[252,21,246,15,"props"],[252,26,246,10],[252,27,246,21,"onLongPress"],[252,38,246,10],[252,42,246,36],[252,46,246,6],[252,48,246,42],[253,0,247,8],[253,12,247,8],[253,18,247,12],[253,19,247,13,"props"],[253,24,247,8],[253,25,247,19,"onLongPress"],[253,36,247,8],[253,37,247,31,"event"],[253,42,247,8],[254,0,248,7],[255,0,249,5],[255,9,245,4],[257,0,250,4],[257,13,250,9,"touchableGetPressRectOffset"],[257,40,250,4],[257,43,250,39],[258,0,250,39],[258,17,251,6],[258,23,251,10],[258,24,251,11,"props"],[258,29,251,6],[258,30,251,17,"pressRetentionOffset"],[258,50,251,6],[258,54,251,41],[258,58,251,6],[258,61,252,10,"PRESS_RECT_OFFSET"],[258,78,251,6],[258,81,253,10],[258,87,253,14],[258,88,253,15,"props"],[258,93,253,10],[258,94,253,21,"pressRetentionOffset"],[258,114,250,39],[259,0,250,39],[259,9,250,4],[260,0,254,3],[263,47,117,4,"nextProps"],[263,56],[263,58,118,4,"prevState"],[263,67],[263,69,119,26],[264,0,120,4],[264,15,120,11,"prevState"],[264,24,120,20],[264,25,120,21,"responseHandlers"],[264,41,120,11],[264,45,120,41],[264,49,120,11],[264,53,120,49,"isTouchable"],[264,64,120,60],[264,65,120,61,"nextProps"],[264,74,120,60],[264,75,120,11],[264,78,121,8],[265,0,122,10,"responseHandlers"],[265,10,122,10,"responseHandlers"],[265,26,122,26],[265,28,122,28,"prevState"],[265,37,122,37],[265,38,122,38,"createResponderHandlers"],[265,61,122,28],[266,0,121,8],[266,9,120,11],[266,12,124,8],[266,16,120,4],[267,0,125,3],[271,4,88,28,"React"],[271,9,88,33],[271,10,88,34,"Component"],[271,19],[273,0,88,6,"TouchableText"],[273,2,88,6,"TouchableText"],[273,15],[273,16,89,9,"defaultProps"],[273,28],[273,31,89,24],[274,0,90,4,"accessible"],[274,4,90,4,"accessible"],[274,14,90,14],[274,16,90,16],[274,20,89,24],[275,0,91,4,"allowFontScaling"],[275,4,91,4,"allowFontScaling"],[275,20,91,20],[275,22,91,22],[275,26,89,24],[276,0,92,4,"ellipsizeMode"],[276,4,92,4,"ellipsizeMode"],[276,17,92,17],[276,19,92,19],[277,0,89,24],[277,3],[278,0,88,6,"TouchableText"],[278,2,88,6,"TouchableText"],[278,15],[278,16,127,9,"viewConfig"],[278,26],[278,29,127,22,"viewConfig"],[278,39],[280,0,257,0],[280,6,257,6,"isTouchable"],[280,17,257,17],[280,20,257,20],[280,29,257,6,"isTouchable"],[280,40,257,20],[280,41,257,21,"props"],[280,46,257,20],[281,0,257,20],[281,11,258,2,"props"],[281,16,258,7],[281,17,258,8,"onPress"],[281,24,258,2],[281,28,258,19],[281,32,258,2],[281,36,259,2,"props"],[281,41,259,7],[281,42,259,8,"onLongPress"],[281,53,259,2],[281,57,259,23],[281,61,258,2],[281,65,260,2,"props"],[281,70,260,7],[281,71,260,8,"onStartShouldSetResponder"],[281,96,260,2],[281,100,260,37],[281,104,257,20],[282,0,257,20],[282,3,257,0],[284,0,262,0],[284,6,262,6,"RCTText"],[284,13,262,13],[284,16,262,16,"createReactNativeComponentClass"],[284,47,262,47],[284,48,263,2,"viewConfig"],[284,58,263,12],[284,59,263,13,"uiViewClassName"],[284,74,262,47],[284,76,264,2],[285,0,264,2],[285,11,264,8,"viewConfig"],[285,21,264,2],[286,0,264,2],[286,3,262,47],[286,4,262,0],[287,0,267,0],[287,6,267,6,"RCTVirtualText"],[287,20,267,20],[287,23,268,2,"UIManager"],[287,32,268,11],[287,33,268,12,"getViewManagerConfig"],[287,53,268,2],[287,54,268,33],[287,70,268,2],[287,75,268,54],[287,79,268,2],[287,82,269,6,"RCTText"],[287,89,268,2],[287,92,270,6,"createReactNativeComponentClass"],[287,123,270,37],[287,124,270,38],[287,140,270,37],[287,142,270,56],[288,0,270,56],[288,11,270,63],[289,0,271,8,"validAttributes"],[289,6,271,8,"validAttributes"],[289,21,271,23],[289,41,272,13,"ReactNativeViewAttributes"],[289,66,272,38],[289,67,272,39,"UIView"],[289,73,271,23],[290,0,273,10,"isHighlighted"],[290,8,273,10,"isHighlighted"],[290,21,273,23],[290,23,273,25],[290,27,271,23],[291,0,274,10,"maxFontSizeMultiplier"],[291,8,274,10,"maxFontSizeMultiplier"],[291,29,274,31],[291,31,274,33],[292,0,271,23],[292,8,270,63],[293,0,276,8,"uiViewClassName"],[293,6,276,8,"uiViewClassName"],[293,21,276,23],[293,23,276,25],[294,0,270,63],[294,5,270,56],[295,0,270,56],[295,3,270,37],[295,4,267,0],[297,0,279,0],[297,6,279,6,"Text"],[297,10,279,10],[297,13,279,13],[297,22,279,6,"Text"],[297,26,279,13],[297,27,280,2,"props"],[297,32,279,13],[297,34,281,2,"forwardedRef"],[297,46,279,13],[297,48,282,5],[298,0,283,2],[298,11,283,9],[298,31,283,10],[298,44,283,9],[298,59,283,28,"props"],[298,64,283,9],[299,0,283,35],[299,6,283,35],[299,18,283,47],[299,20,283,49,"forwardedRef"],[299,32,283,9],[300,0,283,9],[301,0,283,9],[302,0,283,9],[303,0,283,9],[304,0,283,9],[304,7,283,2],[305,0,284,1],[305,3,279,0],[307,0,285,0],[307,6,285,6,"TextToExport"],[307,18,285,18],[307,21,285,21,"React"],[307,26,285,26],[307,27,285,27,"forwardRef"],[307,37,285,21],[307,38,285,38,"Text"],[307,42,285,21],[307,43,285,0],[308,0,286,0,"TextToExport"],[308,2,286,0,"TextToExport"],[308,14,286,12],[308,15,286,13,"displayName"],[308,26,286,0],[308,29,286,27],[308,35,286,0],[309,0,292,0,"TextToExport"],[309,2,292,0,"TextToExport"],[309,14,292,12],[309,15,292,13,"propTypes"],[309,24,292,0],[309,27,292,25,"DeprecatedTextPropTypes"],[309,50,292,0],[310,0,294,0,"module"],[310,2,294,0,"module"],[310,8,294,6],[310,9,294,7,"exports"],[310,16,294,0],[310,19,294,19,"TextToExport"],[310,31,294,0]],"functionMap":{"names":["<global>","TouchableText","TouchableText.getDerivedStateFromProps","TouchableText#render","TextAncestor.Consumer.props.children","TouchableText#_createResponseHandlers","onStartShouldSetResponder","onResponderGrant","onResponderMove","onResponderRelease","onResponderTerminate","onResponderTerminationRequest","TouchableText#_attachTouchHandlers","touchableHandleActivePressIn","touchableHandleActivePressOut","touchableHandlePress","touchableHandleLongPress","touchableGetPressRectOffset","isTouchable","createReactNativeComponentClass$argument_1","Text"],"mappings":"AAA;ACuF;EC4B;GDS;EEI;SCyB;WDO;GFI;EIE;iCCE;ODW;wBEC;OFK;uBGC;OHK;0BIC;OJK;4BKC;OLK;qCMC;ONS;GJE;EWK;wCCS;KDI;yCEC;KFI;gCGC;KHI;oCIC;KJI;uCKC;yCLG;GXC;CDC;oBkBE;yClBG;EmBI,gBnB;wDmBM;QnBO;aoBE;CpBK"}},"type":"js/module"}]}