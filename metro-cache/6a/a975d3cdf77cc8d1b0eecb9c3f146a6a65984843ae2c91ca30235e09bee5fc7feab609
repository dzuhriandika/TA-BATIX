{"dependencies":[{"name":"@babel/runtime/helpers/toConsumableArray","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"isAsync":false}},{"name":"./YellowBoxWarning","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var _toConsumableArray = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/toConsumableArray\");\n\n  var _slicedToArray = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/slicedToArray\");\n\n  var YellowBoxWarning = _$$_REQUIRE(_dependencyMap[2], \"./YellowBoxWarning\");\n\n  var observers = new Set();\n  var ignorePatterns = new Set();\n  var registry = new Map();\n  var disabled = false;\n  var projection = new Map();\n  var updateTimeout = null;\n\n  function isWarningIgnored(warning) {\n    for (var _iterator = ignorePatterns, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[typeof Symbol === \"function\" ? Symbol.iterator : \"@@iterator\"]();;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var _pattern = _ref;\n\n      if (_pattern instanceof RegExp && _pattern.test(warning.message.content)) {\n        return true;\n      } else if (typeof _pattern === 'string' && warning.message.content.includes(_pattern)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  function handleUpdate() {\n    projection = new Map();\n\n    if (!disabled) {\n      for (var _iterator2 = registry, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[typeof Symbol === \"function\" ? Symbol.iterator : \"@@iterator\"]();;) {\n        var _ref4;\n\n        if (_isArray2) {\n          if (_i2 >= _iterator2.length) break;\n          _ref4 = _iterator2[_i2++];\n        } else {\n          _i2 = _iterator2.next();\n          if (_i2.done) break;\n          _ref4 = _i2.value;\n        }\n\n        var _ref5 = _ref4;\n\n        var _ref3 = _slicedToArray(_ref5, 2);\n\n        var _category = _ref3[0];\n        var _warnings = _ref3[1];\n\n        var _filtered = _warnings.filter(function (warning) {\n          return !isWarningIgnored(warning);\n        });\n\n        if (_filtered.length > 0) {\n          projection.set(_category, _filtered);\n        }\n      }\n    }\n\n    if (updateTimeout == null) {\n      updateTimeout = setImmediate(function () {\n        updateTimeout = null;\n\n        for (var _iterator3 = observers, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : _iterator3[typeof Symbol === \"function\" ? Symbol.iterator : \"@@iterator\"]();;) {\n          var _ref7;\n\n          if (_isArray3) {\n            if (_i3 >= _iterator3.length) break;\n            _ref7 = _iterator3[_i3++];\n          } else {\n            _i3 = _iterator3.next();\n            if (_i3.done) break;\n            _ref7 = _i3.value;\n          }\n\n          var _ref8 = _ref7;\n          var _observer = _ref8.observer;\n\n          _observer(projection);\n        }\n      });\n    }\n  }\n\n  var YellowBoxRegistry = {\n    add: function add(_ref9) {\n      var args = _ref9.args,\n          framesToPop = _ref9.framesToPop;\n\n      if (typeof args[0] === 'string' && args[0].startsWith('(ADVICE)')) {\n        return;\n      }\n\n      var _YellowBoxWarning$par = YellowBoxWarning.parse({\n        args: args,\n        framesToPop: framesToPop + 1\n      }),\n          category = _YellowBoxWarning$par.category,\n          message = _YellowBoxWarning$par.message,\n          stack = _YellowBoxWarning$par.stack;\n\n      var warnings = registry.get(category);\n\n      if (warnings == null) {\n        warnings = [];\n      }\n\n      warnings = [].concat(_toConsumableArray(warnings), [new YellowBoxWarning(message, stack)]);\n      registry.delete(category);\n      registry.set(category, warnings);\n      handleUpdate();\n    },\n    delete: function _delete(category) {\n      if (registry.has(category)) {\n        registry.delete(category);\n        handleUpdate();\n      }\n    },\n    clear: function clear() {\n      if (registry.size > 0) {\n        registry.clear();\n        handleUpdate();\n      }\n    },\n    addIgnorePatterns: function addIgnorePatterns(patterns) {\n      var newPatterns = patterns.filter(function (pattern) {\n        if (pattern instanceof RegExp) {\n          for (var _iterator4 = ignorePatterns.entries(), _isArray4 = Array.isArray(_iterator4), _i4 = 0, _iterator4 = _isArray4 ? _iterator4 : _iterator4[typeof Symbol === \"function\" ? Symbol.iterator : \"@@iterator\"]();;) {\n            var _ref10;\n\n            if (_isArray4) {\n              if (_i4 >= _iterator4.length) break;\n              _ref10 = _iterator4[_i4++];\n            } else {\n              _i4 = _iterator4.next();\n              if (_i4.done) break;\n              _ref10 = _i4.value;\n            }\n\n            var _existingPattern = _ref10;\n\n            if (_existingPattern instanceof RegExp && _existingPattern.toString() === pattern.toString()) {\n              return false;\n            }\n          }\n\n          return true;\n        }\n\n        return !ignorePatterns.has(pattern);\n      });\n\n      if (newPatterns.length === 0) {\n        return;\n      }\n\n      for (var _iterator5 = newPatterns, _isArray5 = Array.isArray(_iterator5), _i5 = 0, _iterator5 = _isArray5 ? _iterator5 : _iterator5[typeof Symbol === \"function\" ? Symbol.iterator : \"@@iterator\"]();;) {\n        var _ref11;\n\n        if (_isArray5) {\n          if (_i5 >= _iterator5.length) break;\n          _ref11 = _iterator5[_i5++];\n        } else {\n          _i5 = _iterator5.next();\n          if (_i5.done) break;\n          _ref11 = _i5.value;\n        }\n\n        var _pattern2 = _ref11;\n        ignorePatterns.add(_pattern2);\n      }\n\n      handleUpdate();\n    },\n    setDisabled: function setDisabled(value) {\n      if (value === disabled) {\n        return;\n      }\n\n      disabled = value;\n      handleUpdate();\n    },\n    isDisabled: function isDisabled() {\n      return disabled;\n    },\n    observe: function observe(observer) {\n      var subscription = {\n        observer: observer\n      };\n      observers.add(subscription);\n      observer(projection);\n      return {\n        unsubscribe: function unsubscribe() {\n          observers.delete(subscription);\n        }\n      };\n    }\n  };\n  module.exports = YellowBoxRegistry;\n});","lineCount":215,"map":[[2,0,11,0],[8,0,13,0],[8,6,13,6,"YellowBoxWarning"],[8,22,13,22],[8,25,13,25,"require"],[8,36,13,32],[8,77,13,0],[10,0,27,0],[10,6,27,6,"observers"],[10,15,27,42],[10,18,27,45],[10,22,27,49,"Set"],[10,25,27,45],[10,27,27,0],[11,0,28,0],[11,6,28,6,"ignorePatterns"],[11,20,28,40],[11,23,28,43],[11,27,28,47,"Set"],[11,30,28,43],[11,32,28,0],[12,0,29,0],[12,6,29,6,"registry"],[12,14,29,24],[12,17,29,27],[12,21,29,31,"Map"],[12,24,29,27],[12,26,29,0],[13,0,31,0],[13,6,31,4,"disabled"],[13,14,31,12],[13,17,31,15],[13,22,31,0],[14,0,32,0],[14,6,32,4,"projection"],[14,16,32,14],[14,19,32,17],[14,23,32,21,"Map"],[14,26,32,17],[14,28,32,0],[15,0,33,0],[15,6,33,4,"updateTimeout"],[15,19,33,17],[15,22,33,20],[15,26,33,0],[17,0,35,0],[17,11,35,9,"isWarningIgnored"],[17,27,35,0],[17,28,35,26,"warning"],[17,35,35,0],[17,37,35,62],[18,0,36,2],[18,25,36,24,"ignorePatterns"],[18,39,36,2],[18,199,36,40],[19,0,36,40],[21,0,36,40],[22,0,36,40],[23,0,36,40],[24,0,36,40],[25,0,36,40],[26,0,36,40],[27,0,36,40],[28,0,36,40],[30,0,36,40],[30,10,36,13,"pattern"],[30,18,36,40],[32,0,37,4],[32,10,37,8,"pattern"],[32,18,37,15],[32,30,37,27,"RegExp"],[32,36,37,8],[32,40,37,37,"pattern"],[32,48,37,44],[32,49,37,45,"test"],[32,53,37,37],[32,54,37,50,"warning"],[32,61,37,57],[32,62,37,58,"message"],[32,69,37,50],[32,70,37,66,"content"],[32,77,37,37],[32,78,37,4],[32,80,37,76],[33,0,38,6],[33,15,38,13],[33,19,38,6],[34,0,39,5],[34,7,37,4],[34,13,39,11],[34,17,40,6],[34,24,40,13,"pattern"],[34,32,40,6],[34,37,40,25],[34,45,40,6],[34,49,41,6,"warning"],[34,56,41,13],[34,57,41,14,"message"],[34,64,41,6],[34,65,41,22,"content"],[34,72,41,6],[34,73,41,30,"includes"],[34,81,41,6],[34,82,41,39,"pattern"],[34,90,41,6],[34,91,39,11],[34,93,42,6],[35,0,43,6],[35,15,43,13],[35,19,43,6],[36,0,44,5],[37,0,45,3],[39,0,46,2],[39,11,46,9],[39,16,46,2],[40,0,47,1],[42,0,49,0],[42,11,49,9,"handleUpdate"],[42,23,49,0],[42,26,49,30],[43,0,50,2,"projection"],[43,4,50,2,"projection"],[43,14,50,12],[43,17,50,15],[43,21,50,19,"Map"],[43,24,50,15],[43,26,50,2],[45,0,51,2],[45,8,51,6],[45,9,51,7,"disabled"],[45,17,51,2],[45,19,51,17],[46,0,52,4],[46,28,52,39,"registry"],[46,36,52,4],[46,203,52,49],[47,0,52,49],[49,0,52,49],[50,0,52,49],[51,0,52,49],[52,0,52,49],[53,0,52,49],[54,0,52,49],[55,0,52,49],[56,0,52,49],[58,0,52,49],[60,0,52,49],[62,0,52,49],[62,12,52,16,"category"],[62,21,52,49],[63,0,52,49],[63,12,52,26,"warnings"],[63,21,52,49],[65,0,53,6],[65,12,53,12,"filtered"],[65,21,53,20],[65,24,53,23,"warnings"],[65,33,53,31],[65,34,53,32,"filter"],[65,40,53,23],[65,41,53,39],[65,51,53,39,"warning"],[65,58,53,46],[66,0,53,46],[66,17,53,50],[66,18,53,51,"isWarningIgnored"],[66,34,53,67],[66,35,53,68,"warning"],[66,42,53,67],[66,43,53,46],[67,0,53,46],[67,9,53,23],[67,10,53,6],[69,0,54,6],[69,12,54,10,"filtered"],[69,21,54,18],[69,22,54,19,"length"],[69,28,54,10],[69,31,54,28],[69,32,54,6],[69,34,54,31],[70,0,55,8,"projection"],[70,10,55,8,"projection"],[70,20,55,18],[70,21,55,19,"set"],[70,24,55,8],[70,25,55,23,"category"],[70,34,55,8],[70,36,55,33,"filtered"],[70,45,55,8],[71,0,56,7],[72,0,57,5],[73,0,58,3],[75,0,59,2],[75,8,59,6,"updateTimeout"],[75,21,59,19],[75,25,59,23],[75,29,59,2],[75,31,59,29],[76,0,60,4,"updateTimeout"],[76,6,60,4,"updateTimeout"],[76,19,60,17],[76,22,60,20,"setImmediate"],[76,34,60,32],[76,35,60,33],[76,47,60,39],[77,0,61,6,"updateTimeout"],[77,8,61,6,"updateTimeout"],[77,21,61,19],[77,24,61,22],[77,28,61,6],[79,0,62,6],[79,30,62,31,"observers"],[79,39,62,6],[79,206,62,42],[80,0,62,42],[82,0,62,42],[83,0,62,42],[84,0,62,42],[85,0,62,42],[86,0,62,42],[87,0,62,42],[88,0,62,42],[89,0,62,42],[91,0,62,42],[92,0,62,42],[92,14,62,18,"observer"],[92,23,62,42],[92,32,62,18,"observer"],[92,40,62,42],[94,0,63,8,"observer"],[94,10,63,8,"observer"],[94,19,63,16],[94,20,63,17,"projection"],[94,30,63,16],[94,31,63,8],[95,0,64,7],[96,0,65,5],[96,7,60,32],[96,8,60,4],[97,0,66,3],[98,0,67,1],[100,0,69,0],[100,6,69,6,"YellowBoxRegistry"],[100,23,69,23],[100,26,69,26],[101,0,70,2,"add"],[101,4,70,2,"add"],[101,7,69,26],[101,29,76,13],[102,0,76,13],[102,10,71,4,"args"],[102,14,76,13],[102,23,71,4,"args"],[102,27,76,13],[103,0,76,13],[103,10,72,4,"framesToPop"],[103,21,76,13],[103,30,72,4,"framesToPop"],[103,41,76,13],[105,0,77,4],[105,10,77,8],[105,17,77,15,"args"],[105,21,77,19],[105,22,77,20],[105,23,77,19],[105,24,77,8],[105,29,77,27],[105,37,77,8],[105,41,77,39,"args"],[105,45,77,43],[105,46,77,44],[105,47,77,43],[105,48,77,39],[105,49,77,47,"startsWith"],[105,59,77,39],[105,60,77,58],[105,70,77,39],[105,71,77,4],[105,73,77,71],[106,0,78,6],[107,0,79,5],[109,0,76,13],[109,34,80,39,"YellowBoxWarning"],[109,50,80,55],[109,51,80,56,"parse"],[109,56,80,39],[109,57,80,62],[110,0,81,6,"args"],[110,8,81,6,"args"],[110,12,81,10],[110,14,81,6,"args"],[110,18,80,62],[111,0,82,6,"framesToPop"],[111,8,82,6,"framesToPop"],[111,19,82,17],[111,21,82,19,"framesToPop"],[111,32,82,30],[111,35,82,33],[112,0,80,62],[112,7,80,39],[112,8,76,13],[113,0,76,13],[113,10,80,11,"category"],[113,18,76,13],[113,43,80,11,"category"],[113,51,76,13],[114,0,76,13],[114,10,80,21,"message"],[114,17,76,13],[114,42,80,21,"message"],[114,49,76,13],[115,0,76,13],[115,10,80,30,"stack"],[115,15,76,13],[115,40,80,30,"stack"],[115,45,76,13],[117,0,85,4],[117,10,85,8,"warnings"],[117,18,85,16],[117,21,85,19,"registry"],[117,29,85,27],[117,30,85,28,"get"],[117,33,85,19],[117,34,85,32,"category"],[117,42,85,19],[117,43,85,4],[119,0,86,4],[119,10,86,8,"warnings"],[119,18,86,16],[119,22,86,20],[119,26,86,4],[119,28,86,26],[120,0,87,6,"warnings"],[120,8,87,6,"warnings"],[120,16,87,14],[120,19,87,17],[120,21,87,6],[121,0,88,5],[123,0,89,4,"warnings"],[123,6,89,4,"warnings"],[123,14,89,12],[123,46,89,19,"warnings"],[123,54,89,12],[123,58,89,29],[123,62,89,33,"YellowBoxWarning"],[123,78,89,29],[123,79,89,50,"message"],[123,86,89,29],[123,88,89,59,"stack"],[123,93,89,29],[123,94,89,12],[123,96,89,4],[124,0,91,4,"registry"],[124,6,91,4,"registry"],[124,14,91,12],[124,15,91,13,"delete"],[124,21,91,4],[124,22,91,20,"category"],[124,30,91,4],[125,0,92,4,"registry"],[125,6,92,4,"registry"],[125,14,92,12],[125,15,92,13,"set"],[125,18,92,4],[125,19,92,17,"category"],[125,27,92,4],[125,29,92,27,"warnings"],[125,37,92,4],[126,0,94,4,"handleUpdate"],[126,6,94,4,"handleUpdate"],[126,18,94,16],[127,0,95,3],[127,5,69,26],[128,0,97,2,"delete"],[128,4,97,2,"delete"],[128,10,69,26],[128,29,97,9,"category"],[128,37,69,26],[128,39,97,35],[129,0,98,4],[129,10,98,8,"registry"],[129,18,98,16],[129,19,98,17,"has"],[129,22,98,8],[129,23,98,21,"category"],[129,31,98,8],[129,32,98,4],[129,34,98,32],[130,0,99,6,"registry"],[130,8,99,6,"registry"],[130,16,99,14],[130,17,99,15,"delete"],[130,23,99,6],[130,24,99,22,"category"],[130,32,99,6],[131,0,100,6,"handleUpdate"],[131,8,100,6,"handleUpdate"],[131,20,100,18],[132,0,101,5],[133,0,102,3],[133,5,69,26],[134,0,104,2,"clear"],[134,4,104,2,"clear"],[134,9,69,26],[134,28,104,16],[135,0,105,4],[135,10,105,8,"registry"],[135,18,105,16],[135,19,105,17,"size"],[135,23,105,8],[135,26,105,24],[135,27,105,4],[135,29,105,27],[136,0,106,6,"registry"],[136,8,106,6,"registry"],[136,16,106,14],[136,17,106,15,"clear"],[136,22,106,6],[137,0,107,6,"handleUpdate"],[137,8,107,6,"handleUpdate"],[137,20,107,18],[138,0,108,5],[139,0,109,3],[139,5,69,26],[140,0,111,2,"addIgnorePatterns"],[140,4,111,2,"addIgnorePatterns"],[140,21,69,26],[140,50,111,20,"patterns"],[140,58,69,26],[140,60,111,67],[141,0,112,4],[141,10,112,10,"newPatterns"],[141,21,112,21],[141,24,112,24,"patterns"],[141,32,112,32],[141,33,112,33,"filter"],[141,39,112,24],[141,40,112,40],[141,50,112,41,"pattern"],[141,57,112,40],[141,59,112,68],[142,0,113,6],[142,12,113,10,"pattern"],[142,19,113,17],[142,31,113,29,"RegExp"],[142,37,113,6],[142,39,113,37],[143,0,114,8],[143,32,114,38,"ignorePatterns"],[143,46,114,52],[143,47,114,53,"entries"],[143,54,114,38],[143,56,114,8],[143,223,114,64],[144,0,114,64],[146,0,114,64],[147,0,114,64],[148,0,114,64],[149,0,114,64],[150,0,114,64],[151,0,114,64],[152,0,114,64],[153,0,114,64],[155,0,114,64],[155,16,114,19,"existingPattern"],[155,32,114,64],[157,0,115,10],[157,16,116,12,"existingPattern"],[157,32,116,27],[157,44,116,39,"RegExp"],[157,50,116,12],[157,54,117,12,"existingPattern"],[157,70,117,27],[157,71,117,28,"toString"],[157,79,117,12],[157,86,117,43,"pattern"],[157,93,117,50],[157,94,117,51,"toString"],[157,102,117,43],[157,104,115,10],[157,106,118,12],[158,0,119,12],[158,21,119,19],[158,26,119,12],[159,0,120,11],[160,0,121,9],[162,0,122,8],[162,17,122,15],[162,21,122,8],[163,0,123,7],[165,0,124,6],[165,15,124,13],[165,16,124,14,"ignorePatterns"],[165,30,124,28],[165,31,124,29,"has"],[165,34,124,14],[165,35,124,33,"pattern"],[165,42,124,14],[165,43,124,6],[166,0,125,5],[166,7,112,24],[166,8,112,4],[168,0,126,4],[168,10,126,8,"newPatterns"],[168,21,126,19],[168,22,126,20,"length"],[168,28,126,8],[168,33,126,31],[168,34,126,4],[168,36,126,34],[169,0,127,6],[170,0,128,5],[172,0,129,4],[172,28,129,26,"newPatterns"],[172,39,129,4],[172,206,129,39],[173,0,129,39],[175,0,129,39],[176,0,129,39],[177,0,129,39],[178,0,129,39],[179,0,129,39],[180,0,129,39],[181,0,129,39],[182,0,129,39],[184,0,129,39],[184,12,129,15,"pattern"],[184,21,129,39],[185,0,130,6,"ignorePatterns"],[185,8,130,6,"ignorePatterns"],[185,22,130,20],[185,23,130,21,"add"],[185,26,130,6],[185,27,130,25,"pattern"],[185,36,130,6],[186,0,131,5],[188,0,132,4,"handleUpdate"],[188,6,132,4,"handleUpdate"],[188,18,132,16],[189,0,133,3],[189,5,69,26],[190,0,135,2,"setDisabled"],[190,4,135,2,"setDisabled"],[190,15,69,26],[190,38,135,14,"value"],[190,43,69,26],[190,45,135,36],[191,0,136,4],[191,10,136,8,"value"],[191,15,136,13],[191,20,136,18,"disabled"],[191,28,136,4],[191,30,136,28],[192,0,137,6],[193,0,138,5],[195,0,139,4,"disabled"],[195,6,139,4,"disabled"],[195,14,139,12],[195,17,139,15,"value"],[195,22,139,4],[196,0,140,4,"handleUpdate"],[196,6,140,4,"handleUpdate"],[196,18,140,16],[197,0,141,3],[197,5,69,26],[198,0,143,2,"isDisabled"],[198,4,143,2,"isDisabled"],[198,14,69,26],[198,38,143,24],[199,0,144,4],[199,13,144,11,"disabled"],[199,21,144,4],[200,0,145,3],[200,5,69,26],[201,0,147,2,"observe"],[201,4,147,2,"observe"],[201,11,69,26],[201,30,147,10,"observer"],[201,38,69,26],[201,40,147,44],[202,0,148,4],[202,10,148,10,"subscription"],[202,22,148,22],[202,25,148,25],[203,0,148,26,"observer"],[203,8,148,26,"observer"],[203,16,148,34],[203,18,148,26,"observer"],[204,0,148,25],[204,7,148,4],[205,0,149,4,"observers"],[205,6,149,4,"observers"],[205,15,149,13],[205,16,149,14,"add"],[205,19,149,4],[205,20,149,18,"subscription"],[205,32,149,4],[206,0,150,4,"observer"],[206,6,150,4,"observer"],[206,14,150,12],[206,15,150,13,"projection"],[206,25,150,12],[206,26,150,4],[207,0,151,4],[207,13,151,11],[208,0,152,6,"unsubscribe"],[208,8,152,6,"unsubscribe"],[208,19,151,11],[208,44,152,26],[209,0,153,8,"observers"],[209,10,153,8,"observers"],[209,19,153,17],[209,20,153,18,"delete"],[209,26,153,8],[209,27,153,25,"subscription"],[209,39,153,8],[210,0,154,7],[211,0,151,11],[211,7,151,4],[212,0,156,3],[213,0,69,26],[213,3,69,0],[214,0,159,0,"module"],[214,2,159,0,"module"],[214,8,159,6],[214,9,159,7,"exports"],[214,16,159,0],[214,19,159,17,"YellowBoxRegistry"],[214,36,159,0]],"functionMap":{"names":["<global>","isWarningIgnored","handleUpdate","warnings.filter$argument_0","setImmediate$argument_0","add","_delete","clear","addIgnorePatterns","patterns.filter$argument_0","setDisabled","isDisabled","observe","unsubscribe"],"mappings":"AAA;ACkC;CDY;AEE;uCCI,qCD;iCEO;KFK;CFE;EKG;GLyB;EME;GNK;EOE;GPK;EQE;wCCC;KDa;GRQ;EUE;GVM;EWE;GXE;EYE;MCK;ODE;GZE"}},"type":"js/module"}]}