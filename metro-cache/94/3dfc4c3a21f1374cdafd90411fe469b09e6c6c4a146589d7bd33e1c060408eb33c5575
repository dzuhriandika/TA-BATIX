{"dependencies":[{"name":"../ReactNative/I18nManager","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var I18nManager = _$$_REQUIRE(_dependencyMap[0], \"../ReactNative/I18nManager\");\n\n  function resolveBoxStyle(prefix, style) {\n    var hasParts = false;\n    var result = {\n      bottom: 0,\n      left: 0,\n      right: 0,\n      top: 0\n    };\n    var styleForAll = style[prefix];\n\n    if (styleForAll != null) {\n      for (var _i = 0, _Object$keys = Object.keys(result); _i < _Object$keys.length; _i++) {\n        var key = _Object$keys[_i];\n        result[key] = styleForAll;\n      }\n\n      hasParts = true;\n    }\n\n    var styleForHorizontal = style[prefix + 'Horizontal'];\n\n    if (styleForHorizontal != null) {\n      result.left = styleForHorizontal;\n      result.right = styleForHorizontal;\n      hasParts = true;\n    } else {\n      var styleForLeft = style[prefix + 'Left'];\n\n      if (styleForLeft != null) {\n        result.left = styleForLeft;\n        hasParts = true;\n      }\n\n      var styleForRight = style[prefix + 'Right'];\n\n      if (styleForRight != null) {\n        result.right = styleForRight;\n        hasParts = true;\n      }\n\n      var styleForEnd = style[prefix + 'End'];\n\n      if (styleForEnd != null) {\n        var constants = I18nManager.getConstants();\n\n        if (constants.isRTL && constants.doLeftAndRightSwapInRTL) {\n          result.left = styleForEnd;\n        } else {\n          result.right = styleForEnd;\n        }\n\n        hasParts = true;\n      }\n\n      var styleForStart = style[prefix + 'Start'];\n\n      if (styleForStart != null) {\n        var _constants = I18nManager.getConstants();\n\n        if (_constants.isRTL && _constants.doLeftAndRightSwapInRTL) {\n          result.right = styleForStart;\n        } else {\n          result.left = styleForStart;\n        }\n\n        hasParts = true;\n      }\n    }\n\n    var styleForVertical = style[prefix + 'Vertical'];\n\n    if (styleForVertical != null) {\n      result.bottom = styleForVertical;\n      result.top = styleForVertical;\n      hasParts = true;\n    } else {\n      var styleForBottom = style[prefix + 'Bottom'];\n\n      if (styleForBottom != null) {\n        result.bottom = styleForBottom;\n        hasParts = true;\n      }\n\n      var styleForTop = style[prefix + 'Top'];\n\n      if (styleForTop != null) {\n        result.top = styleForTop;\n        hasParts = true;\n      }\n    }\n\n    return hasParts ? result : null;\n  }\n\n  module.exports = resolveBoxStyle;\n});","lineCount":101,"map":[[2,0,11,0],[4,0,13,0],[4,6,13,6,"I18nManager"],[4,17,13,17],[4,20,13,20,"require"],[4,31,13,27],[4,80,13,0],[6,0,25,0],[6,11,25,9,"resolveBoxStyle"],[6,26,25,0],[6,27,26,2,"prefix"],[6,33,25,0],[6,35,27,2,"style"],[6,40,25,0],[6,42,33,4],[7,0,34,2],[7,8,34,6,"hasParts"],[7,16,34,14],[7,19,34,17],[7,24,34,2],[8,0,35,2],[8,8,35,8,"result"],[8,14,35,14],[8,17,35,17],[9,0,36,4,"bottom"],[9,6,36,4,"bottom"],[9,12,36,10],[9,14,36,12],[9,15,35,17],[10,0,37,4,"left"],[10,6,37,4,"left"],[10,10,37,8],[10,12,37,10],[10,13,35,17],[11,0,38,4,"right"],[11,6,38,4,"right"],[11,11,38,9],[11,13,38,11],[11,14,35,17],[12,0,39,4,"top"],[12,6,39,4,"top"],[12,9,39,7],[12,11,39,9],[13,0,35,17],[13,5,35,2],[14,0,44,2],[14,8,44,8,"styleForAll"],[14,19,44,19],[14,22,44,22,"style"],[14,27,44,27],[14,28,44,28,"prefix"],[14,34,44,27],[14,35,44,2],[16,0,45,2],[16,8,45,6,"styleForAll"],[16,19,45,17],[16,23,45,21],[16,27,45,2],[16,29,45,27],[17,0,46,4],[17,38,46,22,"Object"],[17,44,46,28],[17,45,46,29,"keys"],[17,49,46,22],[17,50,46,34,"result"],[17,56,46,22],[17,57,46,4],[17,91,46,43],[18,0,46,9],[18,12,46,15,"key"],[18,15,46,18],[18,34,46,9],[19,0,47,6,"result"],[19,8,47,6,"result"],[19,14,47,12],[19,15,47,13,"key"],[19,18,47,12],[19,19,47,6],[19,22,47,20,"styleForAll"],[19,33,47,6],[20,0,48,5],[22,0,49,4,"hasParts"],[22,6,49,4,"hasParts"],[22,14,49,12],[22,17,49,15],[22,21,49,4],[23,0,50,3],[25,0,52,2],[25,8,52,8,"styleForHorizontal"],[25,26,52,26],[25,29,52,29,"style"],[25,34,52,34],[25,35,52,35,"prefix"],[25,41,52,41],[25,44,52,44],[25,56,52,34],[25,57,52,2],[27,0,53,2],[27,8,53,6,"styleForHorizontal"],[27,26,53,24],[27,30,53,28],[27,34,53,2],[27,36,53,34],[28,0,54,4,"result"],[28,6,54,4,"result"],[28,12,54,10],[28,13,54,11,"left"],[28,17,54,4],[28,20,54,18,"styleForHorizontal"],[28,38,54,4],[29,0,55,4,"result"],[29,6,55,4,"result"],[29,12,55,10],[29,13,55,11,"right"],[29,18,55,4],[29,21,55,19,"styleForHorizontal"],[29,39,55,4],[30,0,56,4,"hasParts"],[30,6,56,4,"hasParts"],[30,14,56,12],[30,17,56,15],[30,21,56,4],[31,0,57,3],[31,5,53,2],[31,11,57,9],[32,0,58,4],[32,10,58,10,"styleForLeft"],[32,22,58,22],[32,25,58,25,"style"],[32,30,58,30],[32,31,58,31,"prefix"],[32,37,58,37],[32,40,58,40],[32,46,58,30],[32,47,58,4],[34,0,59,4],[34,10,59,8,"styleForLeft"],[34,22,59,20],[34,26,59,24],[34,30,59,4],[34,32,59,30],[35,0,60,6,"result"],[35,8,60,6,"result"],[35,14,60,12],[35,15,60,13,"left"],[35,19,60,6],[35,22,60,20,"styleForLeft"],[35,34,60,6],[36,0,61,6,"hasParts"],[36,8,61,6,"hasParts"],[36,16,61,14],[36,19,61,17],[36,23,61,6],[37,0,62,5],[39,0,64,4],[39,10,64,10,"styleForRight"],[39,23,64,23],[39,26,64,26,"style"],[39,31,64,31],[39,32,64,32,"prefix"],[39,38,64,38],[39,41,64,41],[39,48,64,31],[39,49,64,4],[41,0,65,4],[41,10,65,8,"styleForRight"],[41,23,65,21],[41,27,65,25],[41,31,65,4],[41,33,65,31],[42,0,66,6,"result"],[42,8,66,6,"result"],[42,14,66,12],[42,15,66,13,"right"],[42,20,66,6],[42,23,66,21,"styleForRight"],[42,36,66,6],[43,0,67,6,"hasParts"],[43,8,67,6,"hasParts"],[43,16,67,14],[43,19,67,17],[43,23,67,6],[44,0,68,5],[46,0,70,4],[46,10,70,10,"styleForEnd"],[46,21,70,21],[46,24,70,24,"style"],[46,29,70,29],[46,30,70,30,"prefix"],[46,36,70,36],[46,39,70,39],[46,44,70,29],[46,45,70,4],[48,0,71,4],[48,10,71,8,"styleForEnd"],[48,21,71,19],[48,25,71,23],[48,29,71,4],[48,31,71,29],[49,0,72,6],[49,12,72,12,"constants"],[49,21,72,21],[49,24,72,24,"I18nManager"],[49,35,72,35],[49,36,72,36,"getConstants"],[49,48,72,24],[49,50,72,6],[51,0,73,6],[51,12,73,10,"constants"],[51,21,73,19],[51,22,73,20,"isRTL"],[51,27,73,10],[51,31,73,29,"constants"],[51,40,73,38],[51,41,73,39,"doLeftAndRightSwapInRTL"],[51,64,73,6],[51,66,73,64],[52,0,74,8,"result"],[52,10,74,8,"result"],[52,16,74,14],[52,17,74,15,"left"],[52,21,74,8],[52,24,74,22,"styleForEnd"],[52,35,74,8],[53,0,75,7],[53,9,73,6],[53,15,75,13],[54,0,76,8,"result"],[54,10,76,8,"result"],[54,16,76,14],[54,17,76,15,"right"],[54,22,76,8],[54,25,76,23,"styleForEnd"],[54,36,76,8],[55,0,77,7],[57,0,78,6,"hasParts"],[57,8,78,6,"hasParts"],[57,16,78,14],[57,19,78,17],[57,23,78,6],[58,0,79,5],[60,0,80,4],[60,10,80,10,"styleForStart"],[60,23,80,23],[60,26,80,26,"style"],[60,31,80,31],[60,32,80,32,"prefix"],[60,38,80,38],[60,41,80,41],[60,48,80,31],[60,49,80,4],[62,0,81,4],[62,10,81,8,"styleForStart"],[62,23,81,21],[62,27,81,25],[62,31,81,4],[62,33,81,31],[63,0,82,6],[63,12,82,12,"constants"],[63,22,82,21],[63,25,82,24,"I18nManager"],[63,36,82,35],[63,37,82,36,"getConstants"],[63,49,82,24],[63,51,82,6],[65,0,83,6],[65,12,83,10,"constants"],[65,22,83,19],[65,23,83,20,"isRTL"],[65,28,83,10],[65,32,83,29,"constants"],[65,42,83,38],[65,43,83,39,"doLeftAndRightSwapInRTL"],[65,66,83,6],[65,68,83,64],[66,0,84,8,"result"],[66,10,84,8,"result"],[66,16,84,14],[66,17,84,15,"right"],[66,22,84,8],[66,25,84,23,"styleForStart"],[66,38,84,8],[67,0,85,7],[67,9,83,6],[67,15,85,13],[68,0,86,8,"result"],[68,10,86,8,"result"],[68,16,86,14],[68,17,86,15,"left"],[68,21,86,8],[68,24,86,22,"styleForStart"],[68,37,86,8],[69,0,87,7],[71,0,88,6,"hasParts"],[71,8,88,6,"hasParts"],[71,16,88,14],[71,19,88,17],[71,23,88,6],[72,0,89,5],[73,0,90,3],[75,0,92,2],[75,8,92,8,"styleForVertical"],[75,24,92,24],[75,27,92,27,"style"],[75,32,92,32],[75,33,92,33,"prefix"],[75,39,92,39],[75,42,92,42],[75,52,92,32],[75,53,92,2],[77,0,93,2],[77,8,93,6,"styleForVertical"],[77,24,93,22],[77,28,93,26],[77,32,93,2],[77,34,93,32],[78,0,94,4,"result"],[78,6,94,4,"result"],[78,12,94,10],[78,13,94,11,"bottom"],[78,19,94,4],[78,22,94,20,"styleForVertical"],[78,38,94,4],[79,0,95,4,"result"],[79,6,95,4,"result"],[79,12,95,10],[79,13,95,11,"top"],[79,16,95,4],[79,19,95,17,"styleForVertical"],[79,35,95,4],[80,0,96,4,"hasParts"],[80,6,96,4,"hasParts"],[80,14,96,12],[80,17,96,15],[80,21,96,4],[81,0,97,3],[81,5,93,2],[81,11,97,9],[82,0,98,4],[82,10,98,10,"styleForBottom"],[82,24,98,24],[82,27,98,27,"style"],[82,32,98,32],[82,33,98,33,"prefix"],[82,39,98,39],[82,42,98,42],[82,50,98,32],[82,51,98,4],[84,0,99,4],[84,10,99,8,"styleForBottom"],[84,24,99,22],[84,28,99,26],[84,32,99,4],[84,34,99,32],[85,0,100,6,"result"],[85,8,100,6,"result"],[85,14,100,12],[85,15,100,13,"bottom"],[85,21,100,6],[85,24,100,22,"styleForBottom"],[85,38,100,6],[86,0,101,6,"hasParts"],[86,8,101,6,"hasParts"],[86,16,101,14],[86,19,101,17],[86,23,101,6],[87,0,102,5],[89,0,104,4],[89,10,104,10,"styleForTop"],[89,21,104,21],[89,24,104,24,"style"],[89,29,104,29],[89,30,104,30,"prefix"],[89,36,104,36],[89,39,104,39],[89,44,104,29],[89,45,104,4],[91,0,105,4],[91,10,105,8,"styleForTop"],[91,21,105,19],[91,25,105,23],[91,29,105,4],[91,31,105,29],[92,0,106,6,"result"],[92,8,106,6,"result"],[92,14,106,12],[92,15,106,13,"top"],[92,18,106,6],[92,21,106,19,"styleForTop"],[92,32,106,6],[93,0,107,6,"hasParts"],[93,8,107,6,"hasParts"],[93,16,107,14],[93,19,107,17],[93,23,107,6],[94,0,108,5],[95,0,109,3],[97,0,111,2],[97,11,111,9,"hasParts"],[97,19,111,17],[97,22,111,20,"result"],[97,28,111,17],[97,31,111,29],[97,35,111,2],[98,0,112,1],[100,0,114,0,"module"],[100,2,114,0,"module"],[100,8,114,6],[100,9,114,7,"exports"],[100,16,114,0],[100,19,114,17,"resolveBoxStyle"],[100,34,114,0]],"functionMap":{"names":["<global>","resolveBoxStyle"],"mappings":"AAA;ACwB;CDuF"}},"type":"js/module"}]}