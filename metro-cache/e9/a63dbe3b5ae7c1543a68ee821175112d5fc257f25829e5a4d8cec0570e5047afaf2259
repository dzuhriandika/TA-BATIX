{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"./NativeBlobModule","data":{"isAsync":false}},{"name":"./Blob","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.URL = exports.URLSearchParams = void 0;\n\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/createClass\"));\n\n  var _NativeBlobModule = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"./NativeBlobModule\"));\n\n  var _Symbol$iterator;\n\n  var Blob = _$$_REQUIRE(_dependencyMap[4], \"./Blob\");\n\n  var BLOB_URL_PREFIX = null;\n\n  if (_NativeBlobModule.default && typeof _NativeBlobModule.default.getConstants().BLOB_URI_SCHEME === 'string') {\n    var constants = _NativeBlobModule.default.getConstants();\n\n    BLOB_URL_PREFIX = constants.BLOB_URI_SCHEME + ':';\n\n    if (typeof constants.BLOB_URI_HOST === 'string') {\n      BLOB_URL_PREFIX += \"//\" + constants.BLOB_URI_HOST + \"/\";\n    }\n  }\n\n  _Symbol$iterator = Symbol.iterator;\n\n  var URLSearchParams = function () {\n    function URLSearchParams(params) {\n      var _this = this;\n\n      (0, _classCallCheck2.default)(this, URLSearchParams);\n      this._searchParams = [];\n\n      if (typeof params === 'object') {\n        Object.keys(params).forEach(function (key) {\n          return _this.append(key, params[key]);\n        });\n      }\n    }\n\n    (0, _createClass2.default)(URLSearchParams, [{\n      key: \"append\",\n      value: function append(key, value) {\n        this._searchParams.push([key, value]);\n      }\n    }, {\n      key: \"delete\",\n      value: function _delete(name) {\n        throw new Error('not implemented');\n      }\n    }, {\n      key: \"get\",\n      value: function get(name) {\n        throw new Error('not implemented');\n      }\n    }, {\n      key: \"getAll\",\n      value: function getAll(name) {\n        throw new Error('not implemented');\n      }\n    }, {\n      key: \"has\",\n      value: function has(name) {\n        throw new Error('not implemented');\n      }\n    }, {\n      key: \"set\",\n      value: function set(name, value) {\n        throw new Error('not implemented');\n      }\n    }, {\n      key: \"sort\",\n      value: function sort() {\n        throw new Error('not implemented');\n      }\n    }, {\n      key: _Symbol$iterator,\n      value: function value() {\n        return this._searchParams[typeof Symbol === \"function\" ? Symbol.iterator : \"@@iterator\"]();\n      }\n    }, {\n      key: \"toString\",\n      value: function toString() {\n        if (this._searchParams.length === 0) {\n          return '';\n        }\n\n        var last = this._searchParams.length - 1;\n        return this._searchParams.reduce(function (acc, curr, index) {\n          return acc + curr.join('=') + (index === last ? '' : '&');\n        }, '');\n      }\n    }]);\n    return URLSearchParams;\n  }();\n\n  exports.URLSearchParams = URLSearchParams;\n\n  function validateBaseUrl(url) {\n    return /^(?:(?:(?:https?|ftp):)?\\/\\/)(?:(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,})))(?::\\d{2,5})?(?:[/?#]\\S*)?$/i.test(url);\n  }\n\n  var URL = function () {\n    (0, _createClass2.default)(URL, null, [{\n      key: \"createObjectURL\",\n      value: function createObjectURL(blob) {\n        if (BLOB_URL_PREFIX === null) {\n          throw new Error('Cannot create URL for blob!');\n        }\n\n        return \"\" + BLOB_URL_PREFIX + blob.data.blobId + \"?offset=\" + blob.data.offset + \"&size=\" + blob.size;\n      }\n    }, {\n      key: \"revokeObjectURL\",\n      value: function revokeObjectURL(url) {}\n    }]);\n\n    function URL(url, base) {\n      (0, _classCallCheck2.default)(this, URL);\n      this._searchParamsInstance = null;\n      var baseUrl = null;\n\n      if (!base || validateBaseUrl(url)) {\n        this._url = url;\n\n        if (!this._url.endsWith('/')) {\n          this._url += '/';\n        }\n      } else {\n        if (typeof base === 'string') {\n          baseUrl = base;\n\n          if (!validateBaseUrl(baseUrl)) {\n            throw new TypeError(\"Invalid base URL: \" + baseUrl);\n          }\n        } else if (typeof base === 'object') {\n          baseUrl = base.toString();\n        }\n\n        if (baseUrl.endsWith('/') && url.startsWith('/')) {\n          baseUrl = baseUrl.slice(0, baseUrl.length - 1);\n        }\n\n        if (baseUrl.endsWith(url)) {\n          url = '';\n        }\n\n        this._url = \"\" + baseUrl + url;\n      }\n    }\n\n    (0, _createClass2.default)(URL, [{\n      key: \"toJSON\",\n      value: function toJSON() {\n        return this.toString();\n      }\n    }, {\n      key: \"toString\",\n      value: function toString() {\n        if (this._searchParamsInstance === null) {\n          return this._url;\n        }\n\n        var separator = this._url.indexOf('?') > -1 ? '&' : '?';\n        return this._url + separator + this._searchParamsInstance.toString();\n      }\n    }, {\n      key: \"hash\",\n      get: function get() {\n        throw new Error('not implemented');\n      }\n    }, {\n      key: \"host\",\n      get: function get() {\n        throw new Error('not implemented');\n      }\n    }, {\n      key: \"hostname\",\n      get: function get() {\n        throw new Error('not implemented');\n      }\n    }, {\n      key: \"href\",\n      get: function get() {\n        return this.toString();\n      }\n    }, {\n      key: \"origin\",\n      get: function get() {\n        throw new Error('not implemented');\n      }\n    }, {\n      key: \"password\",\n      get: function get() {\n        throw new Error('not implemented');\n      }\n    }, {\n      key: \"pathname\",\n      get: function get() {\n        throw new Error('not implemented');\n      }\n    }, {\n      key: \"port\",\n      get: function get() {\n        throw new Error('not implemented');\n      }\n    }, {\n      key: \"protocol\",\n      get: function get() {\n        throw new Error('not implemented');\n      }\n    }, {\n      key: \"search\",\n      get: function get() {\n        throw new Error('not implemented');\n      }\n    }, {\n      key: \"searchParams\",\n      get: function get() {\n        if (this._searchParamsInstance == null) {\n          this._searchParamsInstance = new URLSearchParams();\n        }\n\n        return this._searchParamsInstance;\n      }\n    }, {\n      key: \"username\",\n      get: function get() {\n        throw new Error('not implemented');\n      }\n    }]);\n    return URL;\n  }();\n\n  exports.URL = URL;\n});","lineCount":244,"map":[[2,0,10,0],[15,0,14,0],[19,0,12,0],[19,6,12,6,"Blob"],[19,10,12,10],[19,13,12,13,"require"],[19,24,12,20],[19,53,12,0],[21,0,16,0],[21,6,16,4,"BLOB_URL_PREFIX"],[21,21,16,19],[21,24,16,22],[21,28,16,0],[23,0,18,0],[23,6,19,2,"NativeBlobModule"],[23,35,20,2],[23,42,20,9,"NativeBlobModule"],[23,68,20,26,"getConstants"],[23,80,20,9],[23,83,20,41,"BLOB_URI_SCHEME"],[23,98,20,2],[23,103,20,61],[23,111,18,0],[23,113,21,2],[24,0,22,2],[24,8,22,8,"constants"],[24,17,22,17],[24,20,22,20,"NativeBlobModule"],[24,46,22,37,"getConstants"],[24,58,22,20],[24,60,22,2],[26,0,23,2,"BLOB_URL_PREFIX"],[26,4,23,2,"BLOB_URL_PREFIX"],[26,19,23,17],[26,22,23,20,"constants"],[26,31,23,29],[26,32,23,30,"BLOB_URI_SCHEME"],[26,47,23,20],[26,50,23,48],[26,53,23,2],[28,0,24,2],[28,8,24,6],[28,15,24,13,"constants"],[28,24,24,22],[28,25,24,23,"BLOB_URI_HOST"],[28,38,24,6],[28,43,24,41],[28,51,24,2],[28,53,24,51],[29,0,25,4,"BLOB_URL_PREFIX"],[29,6,25,4,"BLOB_URL_PREFIX"],[29,21,25,19],[29,32,25,28,"constants"],[29,41,25,37],[29,42,25,38,"BLOB_URI_HOST"],[29,55,25,19],[29,61,25,4],[30,0,26,3],[31,0,27,1],[33,21,93,3,"Symbol"],[33,27,93,9],[33,28,93,10,"iterator"],[33,36],[35,6,56,13,"URLSearchParams"],[35,21],[36,0,59,2],[36,29,59,14,"params"],[36,35,59,2],[36,37,59,27],[37,0,59,27],[39,0,59,27],[40,0,59,27],[40,11,57,2,"_searchParams"],[40,24,59,27],[40,27,57,18],[40,29,59,27],[42,0,60,4],[42,10,60,8],[42,17,60,15,"params"],[42,23,60,8],[42,28,60,26],[42,36,60,4],[42,38,60,36],[43,0,61,6,"Object"],[43,8,61,6,"Object"],[43,14,61,12],[43,15,61,13,"keys"],[43,19,61,6],[43,20,61,18,"params"],[43,26,61,6],[43,28,61,26,"forEach"],[43,35,61,6],[43,36,61,34],[43,46,61,34,"key"],[43,49,61,37],[44,0,61,37],[44,17,61,41],[44,22,61,45],[44,23,61,46,"append"],[44,29,61,41],[44,30,61,53,"key"],[44,33,61,41],[44,35,61,58,"params"],[44,41,61,64],[44,42,61,65,"key"],[44,45,61,64],[44,46,61,41],[44,47,61,37],[45,0,61,37],[45,9,61,6],[46,0,62,5],[47,0,63,3],[51,29,65,9,"key"],[51,32],[51,34,65,22,"value"],[51,39],[51,41,65,37],[52,0,66,4],[52,13,66,9,"_searchParams"],[52,26,66,4],[52,27,66,23,"push"],[52,31,66,4],[52,32,66,28],[52,33,66,29,"key"],[52,36,66,28],[52,38,66,34,"value"],[52,43,66,28],[52,44,66,4],[53,0,67,3],[56,30,69,9,"name"],[56,34],[56,36,69,15],[57,0,70,4],[57,14,70,10],[57,18,70,14,"Error"],[57,23,70,10],[57,24,70,20],[57,41,70,10],[57,42,70,4],[58,0,71,3],[61,26,73,6,"name"],[61,30],[61,32,73,12],[62,0,74,4],[62,14,74,10],[62,18,74,14,"Error"],[62,23,74,10],[62,24,74,20],[62,41,74,10],[62,42,74,4],[63,0,75,3],[66,29,77,9,"name"],[66,33],[66,35,77,15],[67,0,78,4],[67,14,78,10],[67,18,78,14,"Error"],[67,23,78,10],[67,24,78,20],[67,41,78,10],[67,42,78,4],[68,0,79,3],[71,26,81,6,"name"],[71,30],[71,32,81,12],[72,0,82,4],[72,14,82,10],[72,18,82,14,"Error"],[72,23,82,10],[72,24,82,20],[72,41,82,10],[72,42,82,4],[73,0,83,3],[76,26,85,6,"name"],[76,30],[76,32,85,12,"value"],[76,37],[76,39,85,19],[77,0,86,4],[77,14,86,10],[77,18,86,14,"Error"],[77,23,86,10],[77,24,86,20],[77,41,86,10],[77,42,86,4],[78,0,87,3],[81,29,89,9],[82,0,90,4],[82,14,90,10],[82,18,90,14,"Error"],[82,23,90,10],[82,24,90,20],[82,41,90,10],[82,42,90,4],[83,0,91,3],[86,30,93,22],[87,0,94,4],[87,15,94,11],[87,20,94,16,"_searchParams"],[87,33,94,11],[87,65,94,30,"Symbol"],[87,71,94,36],[87,72,94,37,"iterator"],[87,80,94,11],[87,98,94,4],[88,0,95,3],[91,33,97,13],[92,0,98,4],[92,12,98,8],[92,17,98,13,"_searchParams"],[92,30,98,8],[92,31,98,27,"length"],[92,37,98,8],[92,42,98,38],[92,43,98,4],[92,45,98,41],[93,0,99,6],[93,17,99,13],[93,19,99,6],[94,0,100,5],[96,0,101,4],[96,12,101,10,"last"],[96,16,101,14],[96,19,101,17],[96,24,101,22,"_searchParams"],[96,37,101,17],[96,38,101,36,"length"],[96,44,101,17],[96,47,101,45],[96,48,101,4],[97,0,102,4],[97,15,102,11],[97,20,102,16,"_searchParams"],[97,33,102,11],[97,34,102,30,"reduce"],[97,40,102,11],[97,41,102,37],[97,51,102,38,"acc"],[97,54,102,37],[97,56,102,43,"curr"],[97,60,102,37],[97,62,102,49,"index"],[97,67,102,37],[97,69,102,59],[98,0,103,6],[98,17,103,13,"acc"],[98,20,103,16],[98,23,103,19,"curr"],[98,27,103,23],[98,28,103,24,"join"],[98,32,103,19],[98,33,103,29],[98,36,103,19],[98,37,103,13],[98,41,103,37,"index"],[98,46,103,42],[98,51,103,47,"last"],[98,55,103,37],[98,58,103,54],[98,60,103,37],[98,63,103,59],[98,66,103,13],[98,67,103,6],[99,0,104,5],[99,9,102,11],[99,11,104,7],[99,13,102,11],[99,14,102,4],[100,0,105,3],[107,0,108,0],[107,11,108,9,"validateBaseUrl"],[107,26,108,0],[107,27,108,25,"url"],[107,30,108,0],[107,32,108,38],[108,0,110,2],[108,11,110,9],[108,333,110,331,"test"],[108,337,110,9],[108,338,111,4,"url"],[108,341,110,9],[108,342,110,2],[109,0,113,1],[111,6,115,13,"URL"],[111,9],[114,38,118,25,"blob"],[114,42],[114,44,118,37],[115,0,119,4],[115,12,119,8,"BLOB_URL_PREFIX"],[115,27,119,23],[115,32,119,28],[115,36,119,4],[115,38,119,34],[116,0,120,6],[116,16,120,12],[116,20,120,16,"Error"],[116,25,120,12],[116,26,120,22],[116,55,120,12],[116,56,120,6],[117,0,121,5],[119,0,122,4],[119,20,122,14,"BLOB_URL_PREFIX"],[119,35,122,4],[119,38,122,32,"blob"],[119,42,122,36],[119,43,122,37,"data"],[119,47,122,32],[119,48,122,42,"blobId"],[119,54,122,4],[119,70,123,6,"blob"],[119,74,123,10],[119,75,123,11,"data"],[119,79,123,6],[119,80,123,16,"offset"],[119,86,122,4],[119,100,124,13,"blob"],[119,104,124,17],[119,105,124,18,"size"],[119,109,122,4],[120,0,125,3],[123,38,127,25,"url"],[123,41],[123,43,127,38],[123,44,129,3],[126,0,131,2],[126,17,131,14,"url"],[126,20,131,2],[126,22,131,27,"base"],[126,26,131,2],[126,28,131,41],[127,0,131,41],[128,0,131,41],[128,11,116,2,"_searchParamsInstance"],[128,32,131,41],[128,35,116,26],[128,39,131,41],[129,0,132,4],[129,10,132,8,"baseUrl"],[129,17,132,15],[129,20,132,18],[129,24,132,4],[131,0,133,4],[131,10,133,8],[131,11,133,9,"base"],[131,15,133,8],[131,19,133,17,"validateBaseUrl"],[131,34,133,32],[131,35,133,33,"url"],[131,38,133,32],[131,39,133,4],[131,41,133,39],[132,0,134,6],[132,13,134,11,"_url"],[132,17,134,6],[132,20,134,18,"url"],[132,23,134,6],[134,0,135,6],[134,12,135,10],[134,13,135,11],[134,18,135,16,"_url"],[134,22,135,11],[134,23,135,21,"endsWith"],[134,31,135,11],[134,32,135,30],[134,35,135,11],[134,36,135,6],[134,38,135,36],[135,0,136,8],[135,15,136,13,"_url"],[135,19,136,8],[135,23,136,21],[135,26,136,8],[136,0,137,7],[137,0,138,5],[137,7,133,4],[137,13,138,11],[138,0,139,6],[138,12,139,10],[138,19,139,17,"base"],[138,23,139,10],[138,28,139,26],[138,36,139,6],[138,38,139,36],[139,0,140,8,"baseUrl"],[139,10,140,8,"baseUrl"],[139,17,140,15],[139,20,140,18,"base"],[139,24,140,8],[141,0,141,8],[141,14,141,12],[141,15,141,13,"validateBaseUrl"],[141,30,141,28],[141,31,141,29,"baseUrl"],[141,38,141,28],[141,39,141,8],[141,41,141,39],[142,0,142,10],[142,18,142,16],[142,22,142,20,"TypeError"],[142,31,142,16],[142,55,142,51,"baseUrl"],[142,62,142,16],[142,63,142,10],[143,0,143,9],[144,0,144,7],[144,9,139,6],[144,15,144,13],[144,19,144,17],[144,26,144,24,"base"],[144,30,144,17],[144,35,144,33],[144,43,144,13],[144,45,144,43],[145,0,145,8,"baseUrl"],[145,10,145,8,"baseUrl"],[145,17,145,15],[145,20,145,18,"base"],[145,24,145,22],[145,25,145,23,"toString"],[145,33,145,18],[145,35,145,8],[146,0,146,7],[148,0,147,6],[148,12,147,10,"baseUrl"],[148,19,147,17],[148,20,147,18,"endsWith"],[148,28,147,10],[148,29,147,27],[148,32,147,10],[148,37,147,35,"url"],[148,40,147,38],[148,41,147,39,"startsWith"],[148,51,147,35],[148,52,147,50],[148,55,147,35],[148,56,147,6],[148,58,147,56],[149,0,148,8,"baseUrl"],[149,10,148,8,"baseUrl"],[149,17,148,15],[149,20,148,18,"baseUrl"],[149,27,148,25],[149,28,148,26,"slice"],[149,33,148,18],[149,34,148,32],[149,35,148,18],[149,37,148,35,"baseUrl"],[149,44,148,42],[149,45,148,43,"length"],[149,51,148,35],[149,54,148,52],[149,55,148,18],[149,56,148,8],[150,0,149,7],[152,0,150,6],[152,12,150,10,"baseUrl"],[152,19,150,17],[152,20,150,18,"endsWith"],[152,28,150,10],[152,29,150,27,"url"],[152,32,150,10],[152,33,150,6],[152,35,150,33],[153,0,151,8,"url"],[153,10,151,8,"url"],[153,13,151,11],[153,16,151,14],[153,18,151,8],[154,0,152,7],[156,0,153,6],[156,13,153,11,"_url"],[156,17,153,6],[156,25,153,21,"baseUrl"],[156,32,153,6],[156,35,153,31,"url"],[156,38,153,6],[157,0,154,5],[158,0,155,3],[162,31,204,19],[163,0,205,4],[163,15,205,11],[163,20,205,16,"toString"],[163,28,205,11],[163,30,205,4],[164,0,206,3],[167,33,208,21],[168,0,209,4],[168,12,209,8],[168,17,209,13,"_searchParamsInstance"],[168,38,209,8],[168,43,209,39],[168,47,209,4],[168,49,209,45],[169,0,210,6],[169,17,210,13],[169,22,210,18,"_url"],[169,26,210,6],[170,0,211,5],[172,0,212,4],[172,12,212,10,"separator"],[172,21,212,19],[172,24,212,22],[172,29,212,27,"_url"],[172,33,212,22],[172,34,212,32,"indexOf"],[172,41,212,22],[172,42,212,40],[172,45,212,22],[172,49,212,47],[172,50,212,48],[172,51,212,22],[172,54,212,52],[172,57,212,22],[172,60,212,58],[172,63,212,4],[173,0,213,4],[173,15,213,11],[173,20,213,16,"_url"],[173,24,213,11],[173,27,213,23,"separator"],[173,36,213,11],[173,39,213,35],[173,44,213,40,"_searchParamsInstance"],[173,65,213,35],[173,66,213,62,"toString"],[173,74,213,35],[173,76,213,4],[174,0,214,3],[177,26,157,13],[178,0,158,4],[178,14,158,10],[178,18,158,14,"Error"],[178,23,158,10],[178,24,158,20],[178,41,158,10],[178,42,158,4],[179,0,159,3],[182,26,161,13],[183,0,162,4],[183,14,162,10],[183,18,162,14,"Error"],[183,23,162,10],[183,24,162,20],[183,41,162,10],[183,42,162,4],[184,0,163,3],[187,26,165,17],[188,0,166,4],[188,14,166,10],[188,18,166,14,"Error"],[188,23,166,10],[188,24,166,20],[188,41,166,10],[188,42,166,4],[189,0,167,3],[192,26,169,21],[193,0,170,4],[193,15,170,11],[193,20,170,16,"toString"],[193,28,170,11],[193,30,170,4],[194,0,171,3],[197,26,173,15],[198,0,174,4],[198,14,174,10],[198,18,174,14,"Error"],[198,23,174,10],[198,24,174,20],[198,41,174,10],[198,42,174,4],[199,0,175,3],[202,26,177,17],[203,0,178,4],[203,14,178,10],[203,18,178,14,"Error"],[203,23,178,10],[203,24,178,20],[203,41,178,10],[203,42,178,4],[204,0,179,3],[207,26,181,17],[208,0,182,4],[208,14,182,10],[208,18,182,14,"Error"],[208,23,182,10],[208,24,182,20],[208,41,182,10],[208,42,182,4],[209,0,183,3],[212,26,185,13],[213,0,186,4],[213,14,186,10],[213,18,186,14,"Error"],[213,23,186,10],[213,24,186,20],[213,41,186,10],[213,42,186,4],[214,0,187,3],[217,26,189,17],[218,0,190,4],[218,14,190,10],[218,18,190,14,"Error"],[218,23,190,10],[218,24,190,20],[218,41,190,10],[218,42,190,4],[219,0,191,3],[222,26,193,15],[223,0,194,4],[223,14,194,10],[223,18,194,14,"Error"],[223,23,194,10],[223,24,194,20],[223,41,194,10],[223,42,194,4],[224,0,195,3],[227,26,197,38],[228,0,198,4],[228,12,198,8],[228,17,198,13,"_searchParamsInstance"],[228,38,198,8],[228,42,198,38],[228,46,198,4],[228,48,198,44],[229,0,199,6],[229,15,199,11,"_searchParamsInstance"],[229,36,199,6],[229,39,199,35],[229,43,199,39,"URLSearchParams"],[229,58,199,35],[229,60,199,6],[230,0,200,5],[232,0,201,4],[232,15,201,11],[232,20,201,16,"_searchParamsInstance"],[232,41,201,4],[233,0,202,3],[236,26,216,17],[237,0,217,4],[237,14,217,10],[237,18,217,14,"Error"],[237,23,217,10],[237,24,217,20],[237,41,217,10],[237,42,217,4],[238,0,218,3]],"functionMap":{"names":["<global>","URLSearchParams","URLSearchParams#constructor","Object.keys.forEach$argument_0","URLSearchParams#append","URLSearchParams#_delete","URLSearchParams#get","URLSearchParams#getAll","URLSearchParams#has","URLSearchParams#set","URLSearchParams#sort","URLSearchParams#@@iterator","URLSearchParams#toString","_searchParams.reduce$argument_0","validateBaseUrl","URL","createObjectURL","revokeObjectURL","constructor","get__hash","get__host","get__hostname","get__href","get__origin","get__password","get__pathname","get__port","get__protocol","get__search","get__searchParams","toJSON","toString","get__username"],"mappings":"AAA;OCuD;ECG;kCCE,oCD;GDE;EGE;GHE;EIE;GJE;EKE;GLE;EME;GNE;EOE;GPE;EQE;GRE;ESE;GTE;EUE;GVE;EWE;qCCK;KDE;GXC;CDC;AcE;CdK;OeE;ECG;GDO;EEE;GFE;EGE;GHwB;EIE;GJE;EKE;GLE;EME;GNE;EOE;GPE;EQE;GRE;ESE;GTE;EUE;GVE;EWE;GXE;EYE;GZE;EaE;GbE;EcE;GdK;EeE;GfE;EgBE;GhBM;EiBE;GjBE;CfC"}},"type":"js/module"}]}