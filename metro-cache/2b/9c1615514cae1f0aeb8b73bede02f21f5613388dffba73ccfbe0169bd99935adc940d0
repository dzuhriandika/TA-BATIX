{"dependencies":[{"name":"@babel/runtime/helpers/extends","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"isAsync":false}},{"name":"./BatchedBridge","data":{"isAsync":false}},{"name":"invariant","data":{"isAsync":false}},{"name":"../Utilities/defineLazyObjectProperty","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var _extends = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/extends\");\n\n  var _slicedToArray = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/slicedToArray\");\n\n  var BatchedBridge = _$$_REQUIRE(_dependencyMap[2], \"./BatchedBridge\");\n\n  var invariant = _$$_REQUIRE(_dependencyMap[3], \"invariant\");\n\n  function genModule(config, moduleID) {\n    if (!config) {\n      return null;\n    }\n\n    var _config = _slicedToArray(config, 5),\n        moduleName = _config[0],\n        constants = _config[1],\n        methods = _config[2],\n        promiseMethods = _config[3],\n        syncMethods = _config[4];\n\n    invariant(!moduleName.startsWith('RCT') && !moduleName.startsWith('RK'), \"Module name prefixes should've been stripped by the native side \" + \"but wasn't for \" + moduleName);\n\n    if (!constants && !methods) {\n      return {\n        name: moduleName\n      };\n    }\n\n    var module = {};\n    methods && methods.forEach(function (methodName, methodID) {\n      var isPromise = promiseMethods && arrayContains(promiseMethods, methodID);\n      var isSync = syncMethods && arrayContains(syncMethods, methodID);\n      invariant(!isPromise || !isSync, 'Cannot have a method that is both async and a sync hook');\n      var methodType = isPromise ? 'promise' : isSync ? 'sync' : 'async';\n      module[methodName] = genMethod(moduleID, methodID, methodType);\n    });\n\n    _extends(module, constants);\n\n    if (module.getConstants == null) {\n      module.getConstants = function () {\n        return constants || Object.freeze({});\n      };\n    } else {\n      console.warn(\"Unable to define method 'getConstants()' on NativeModule '\" + moduleName + \"'. NativeModule '\" + moduleName + \"' already has a constant or method called 'getConstants'. Please remove it.\");\n    }\n\n    if (__DEV__) {\n      BatchedBridge.createDebugLookup(moduleID, moduleName, methods);\n    }\n\n    return {\n      name: moduleName,\n      module: module\n    };\n  }\n\n  global.__fbGenNativeModule = genModule;\n\n  function loadModule(name, moduleID) {\n    invariant(global.nativeRequireModuleConfig, \"Can't lazily create module without nativeRequireModuleConfig\");\n    var config = global.nativeRequireModuleConfig(name);\n    var info = genModule(config, moduleID);\n    return info && info.module;\n  }\n\n  function genMethod(moduleID, methodID, type) {\n    var fn = null;\n\n    if (type === 'promise') {\n      fn = function fn() {\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        var enqueueingFrameError = new Error();\n        enqueueingFrameError.framesToPop = 1;\n        return new Promise(function (resolve, reject) {\n          BatchedBridge.enqueueNativeCall(moduleID, methodID, args, function (data) {\n            return resolve(data);\n          }, function (errorData) {\n            return reject(updateErrorWithErrorData(errorData, enqueueingFrameError));\n          });\n        });\n      };\n    } else {\n      fn = function fn() {\n        for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n          args[_key2] = arguments[_key2];\n        }\n\n        var lastArg = args.length > 0 ? args[args.length - 1] : null;\n        var secondLastArg = args.length > 1 ? args[args.length - 2] : null;\n        var hasSuccessCallback = typeof lastArg === 'function';\n        var hasErrorCallback = typeof secondLastArg === 'function';\n        hasErrorCallback && invariant(hasSuccessCallback, 'Cannot have a non-function arg after a function arg.');\n        var onSuccess = hasSuccessCallback ? lastArg : null;\n        var onFail = hasErrorCallback ? secondLastArg : null;\n        var callbackCount = hasSuccessCallback + hasErrorCallback;\n        args = args.slice(0, args.length - callbackCount);\n\n        if (type === 'sync') {\n          return BatchedBridge.callNativeSyncHook(moduleID, methodID, args, onFail, onSuccess);\n        } else {\n          BatchedBridge.enqueueNativeCall(moduleID, methodID, args, onFail, onSuccess);\n        }\n      };\n    }\n\n    fn.type = type;\n    return fn;\n  }\n\n  function arrayContains(array, value) {\n    return array.indexOf(value) !== -1;\n  }\n\n  function updateErrorWithErrorData(errorData, error) {\n    return _extends(error, errorData || {});\n  }\n\n  var NativeModules = {};\n\n  if (global.nativeModuleProxy) {\n    NativeModules = global.nativeModuleProxy;\n  } else if (!global.nativeExtensions) {\n    var bridgeConfig = global.__fbBatchedBridgeConfig;\n    invariant(bridgeConfig, '__fbBatchedBridgeConfig is not set, cannot invoke native modules');\n\n    var defineLazyObjectProperty = _$$_REQUIRE(_dependencyMap[4], \"../Utilities/defineLazyObjectProperty\");\n\n    (bridgeConfig.remoteModuleConfig || []).forEach(function (config, moduleID) {\n      var info = genModule(config, moduleID);\n\n      if (!info) {\n        return;\n      }\n\n      if (info.module) {\n        NativeModules[info.name] = info.module;\n      } else {\n          defineLazyObjectProperty(NativeModules, info.name, {\n            get: function get() {\n              return loadModule(info.name, moduleID);\n            }\n          });\n        }\n    });\n  }\n\n  module.exports = NativeModules;\n});","lineCount":155,"map":[[2,0,11,0],[8,0,13,0],[8,6,13,6,"BatchedBridge"],[8,19,13,19],[8,22,13,22,"require"],[8,33,13,29],[8,71,13,0],[10,0,15,0],[10,6,15,6,"invariant"],[10,15,15,15],[10,18,15,18,"require"],[10,29,15,25],[10,61,15,0],[12,0,29,0],[12,11,29,9,"genModule"],[12,20,29,0],[12,21,30,2,"config"],[12,27,29,0],[12,29,31,2,"moduleID"],[12,37,29,0],[12,39,32,36],[13,0,33,2],[13,8,33,6],[13,9,33,7,"config"],[13,15,33,2],[13,17,33,15],[14,0,34,4],[14,13,34,11],[14,17,34,4],[15,0,35,3],[17,0,32,36],[17,33,37,72,"config"],[17,39,32,36],[18,0,32,36],[18,8,37,9,"moduleName"],[18,18,32,36],[19,0,32,36],[19,8,37,21,"constants"],[19,17,32,36],[20,0,32,36],[20,8,37,32,"methods"],[20,15,32,36],[21,0,32,36],[21,8,37,41,"promiseMethods"],[21,22,32,36],[22,0,32,36],[22,8,37,57,"syncMethods"],[22,19,32,36],[24,0,38,2,"invariant"],[24,4,38,2,"invariant"],[24,13,38,11],[24,14,39,4],[24,15,39,5,"moduleName"],[24,25,39,15],[24,26,39,16,"startsWith"],[24,36,39,5],[24,37,39,27],[24,42,39,5],[24,43,39,4],[24,47,39,37],[24,48,39,38,"moduleName"],[24,58,39,48],[24,59,39,49,"startsWith"],[24,69,39,38],[24,70,39,60],[24,74,39,38],[24,75,38,11],[24,77,40,4],[24,146,41,6],[24,163,40,4],[24,166,42,6,"moduleName"],[24,176,38,11],[24,177,38,2],[26,0,45,2],[26,8,45,6],[26,9,45,7,"constants"],[26,18,45,6],[26,22,45,20],[26,23,45,21,"methods"],[26,30,45,2],[26,32,45,30],[27,0,47,4],[27,13,47,11],[28,0,47,12,"name"],[28,8,47,12,"name"],[28,12,47,16],[28,14,47,18,"moduleName"],[29,0,47,11],[29,7,47,4],[30,0,48,3],[32,0,50,2],[32,8,50,8,"module"],[32,14,50,14],[32,17,50,17],[32,19,50,2],[33,0,51,2,"methods"],[33,4,51,2,"methods"],[33,11,51,9],[33,15,52,4,"methods"],[33,22,52,11],[33,23,52,12,"forEach"],[33,30,52,4],[33,31,52,20],[33,41,52,21,"methodName"],[33,51,52,20],[33,53,52,33,"methodID"],[33,61,52,20],[33,63,52,46],[34,0,53,6],[34,10,53,12,"isPromise"],[34,19,53,21],[34,22,54,8,"promiseMethods"],[34,36,54,22],[34,40,54,26,"arrayContains"],[34,53,54,39],[34,54,54,40,"promiseMethods"],[34,68,54,39],[34,70,54,56,"methodID"],[34,78,54,39],[34,79,53,6],[35,0,55,6],[35,10,55,12,"isSync"],[35,16,55,18],[35,19,55,21,"syncMethods"],[35,30,55,32],[35,34,55,36,"arrayContains"],[35,47,55,49],[35,48,55,50,"syncMethods"],[35,59,55,49],[35,61,55,63,"methodID"],[35,69,55,49],[35,70,55,6],[36,0,56,6,"invariant"],[36,6,56,6,"invariant"],[36,15,56,15],[36,16,57,8],[36,17,57,9,"isPromise"],[36,26,57,8],[36,30,57,22],[36,31,57,23,"isSync"],[36,37,56,15],[36,39,58,8],[36,96,56,15],[36,97,56,6],[37,0,60,6],[37,10,60,12,"methodType"],[37,20,60,22],[37,23,60,25,"isPromise"],[37,32,60,34],[37,35,60,37],[37,44,60,34],[37,47,60,49,"isSync"],[37,53,60,55],[37,56,60,58],[37,62,60,55],[37,65,60,67],[37,72,60,6],[38,0,61,6,"module"],[38,6,61,6,"module"],[38,12,61,12],[38,13,61,13,"methodName"],[38,23,61,12],[38,24,61,6],[38,27,61,27,"genMethod"],[38,36,61,36],[38,37,61,37,"moduleID"],[38,45,61,36],[38,47,61,47,"methodID"],[38,55,61,36],[38,57,61,57,"methodType"],[38,67,61,36],[38,68,61,6],[39,0,62,5],[39,5,52,4],[39,6,51,2],[41,0,64,2],[41,13,64,16,"module"],[41,19,64,2],[41,21,64,24,"constants"],[41,30,64,2],[43,0,66,2],[43,8,66,6,"module"],[43,14,66,12],[43,15,66,13,"getConstants"],[43,27,66,6],[43,31,66,29],[43,35,66,2],[43,37,66,35],[44,0,67,4,"module"],[44,6,67,4,"module"],[44,12,67,10],[44,13,67,11,"getConstants"],[44,25,67,4],[44,28,67,26],[45,0,67,26],[45,15,67,32,"constants"],[45,24,67,41],[45,28,67,45,"Object"],[45,34,67,51],[45,35,67,52,"freeze"],[45,41,67,45],[45,42,67,59],[45,44,67,45],[45,45,67,26],[46,0,67,26],[46,7,67,4],[47,0,68,3],[47,5,66,2],[47,11,68,9],[48,0,69,4,"console"],[48,6,69,4,"console"],[48,13,69,11],[48,14,69,12,"warn"],[48,18,69,4],[48,82,70,67,"moduleName"],[48,92,69,4],[48,117,70,97,"moduleName"],[48,127,69,4],[49,0,72,3],[51,0,74,2],[51,8,74,6,"__DEV__"],[51,15,74,2],[51,17,74,15],[52,0,75,4,"BatchedBridge"],[52,6,75,4,"BatchedBridge"],[52,19,75,17],[52,20,75,18,"createDebugLookup"],[52,37,75,4],[52,38,75,36,"moduleID"],[52,46,75,4],[52,48,75,46,"moduleName"],[52,58,75,4],[52,60,75,58,"methods"],[52,67,75,4],[53,0,76,3],[55,0,78,2],[55,11,78,9],[56,0,78,10,"name"],[56,6,78,10,"name"],[56,10,78,14],[56,12,78,16,"moduleName"],[56,22,78,9],[57,0,78,28,"module"],[57,6,78,28,"module"],[57,12,78,34],[57,14,78,28,"module"],[58,0,78,9],[58,5,78,2],[59,0,79,1],[61,0,82,0,"global"],[61,2,82,0,"global"],[61,8,82,6],[61,9,82,7,"__fbGenNativeModule"],[61,28,82,0],[61,31,82,29,"genModule"],[61,40,82,0],[63,0,84,0],[63,11,84,9,"loadModule"],[63,21,84,0],[63,22,84,20,"name"],[63,26,84,0],[63,28,84,34,"moduleID"],[63,36,84,0],[63,38,84,61],[64,0,85,2,"invariant"],[64,4,85,2,"invariant"],[64,13,85,11],[64,14,86,4,"global"],[64,20,86,10],[64,21,86,11,"nativeRequireModuleConfig"],[64,46,85,11],[64,48,87,4],[64,110,85,11],[64,111,85,2],[65,0,89,2],[65,8,89,8,"config"],[65,14,89,14],[65,17,89,17,"global"],[65,23,89,23],[65,24,89,24,"nativeRequireModuleConfig"],[65,49,89,17],[65,50,89,50,"name"],[65,54,89,17],[65,55,89,2],[66,0,90,2],[66,8,90,8,"info"],[66,12,90,12],[66,15,90,15,"genModule"],[66,24,90,24],[66,25,90,25,"config"],[66,31,90,24],[66,33,90,33,"moduleID"],[66,41,90,24],[66,42,90,2],[67,0,91,2],[67,11,91,9,"info"],[67,15,91,13],[67,19,91,17,"info"],[67,23,91,21],[67,24,91,22,"module"],[67,30,91,2],[68,0,92,1],[70,0,94,0],[70,11,94,9,"genMethod"],[70,20,94,0],[70,21,94,19,"moduleID"],[70,29,94,0],[70,31,94,37,"methodID"],[70,39,94,0],[70,41,94,55,"type"],[70,45,94,0],[70,47,94,73],[71,0,95,2],[71,8,95,6,"fn"],[71,10,95,8],[71,13,95,11],[71,17,95,2],[73,0,96,2],[73,8,96,6,"type"],[73,12,96,10],[73,17,96,15],[73,26,96,2],[73,28,96,26],[74,0,97,4,"fn"],[74,6,97,4,"fn"],[74,8,97,6],[74,11,97,9],[74,25,97,39],[75,0,97,39],[75,42,97,21,"args"],[75,46,97,39],[76,0,97,21,"args"],[76,10,97,21,"args"],[76,14,97,39],[77,0,97,39],[79,0,99,6],[79,12,99,12,"enqueueingFrameError"],[79,32,99,47],[79,35,99,50],[79,39,99,54,"Error"],[79,44,99,50],[79,46,99,6],[80,0,100,6,"enqueueingFrameError"],[80,8,100,6,"enqueueingFrameError"],[80,28,100,26],[80,29,100,27,"framesToPop"],[80,40,100,6],[80,43,100,41],[80,44,100,6],[81,0,101,6],[81,15,101,13],[81,19,101,17,"Promise"],[81,26,101,13],[81,27,101,25],[81,37,101,26,"resolve"],[81,44,101,25],[81,46,101,35,"reject"],[81,52,101,25],[81,54,101,46],[82,0,102,8,"BatchedBridge"],[82,10,102,8,"BatchedBridge"],[82,23,102,21],[82,24,102,22,"enqueueNativeCall"],[82,41,102,8],[82,42,103,10,"moduleID"],[82,50,102,8],[82,52,104,10,"methodID"],[82,60,102,8],[82,62,105,10,"args"],[82,66,102,8],[82,68,106,10],[82,78,106,10,"data"],[82,82,106,14],[83,0,106,14],[83,19,106,18,"resolve"],[83,26,106,25],[83,27,106,26,"data"],[83,31,106,25],[83,32,106,14],[84,0,106,14],[84,11,102,8],[84,13,107,10],[84,23,107,10,"errorData"],[84,32,107,19],[85,0,107,19],[85,19,108,12,"reject"],[85,25,108,18],[85,26,108,19,"updateErrorWithErrorData"],[85,50,108,43],[85,51,108,44,"errorData"],[85,60,108,43],[85,62,108,55,"enqueueingFrameError"],[85,82,108,43],[85,83,108,18],[85,84,107,19],[86,0,107,19],[86,11,102,8],[87,0,110,7],[87,9,101,13],[87,10,101,6],[88,0,111,5],[88,7,97,4],[89,0,112,3],[89,5,96,2],[89,11,112,9],[90,0,113,4,"fn"],[90,6,113,4,"fn"],[90,8,113,6],[90,11,113,9],[90,25,113,39],[91,0,113,39],[91,43,113,21,"args"],[91,47,113,39],[92,0,113,21,"args"],[92,10,113,21,"args"],[92,14,113,39],[93,0,113,39],[95,0,114,6],[95,12,114,12,"lastArg"],[95,19,114,19],[95,22,114,22,"args"],[95,26,114,26],[95,27,114,27,"length"],[95,33,114,22],[95,36,114,36],[95,37,114,22],[95,40,114,40,"args"],[95,44,114,44],[95,45,114,45,"args"],[95,49,114,49],[95,50,114,50,"length"],[95,56,114,45],[95,59,114,59],[95,60,114,44],[95,61,114,22],[95,64,114,64],[95,68,114,6],[96,0,115,6],[96,12,115,12,"secondLastArg"],[96,25,115,25],[96,28,115,28,"args"],[96,32,115,32],[96,33,115,33,"length"],[96,39,115,28],[96,42,115,42],[96,43,115,28],[96,46,115,46,"args"],[96,50,115,50],[96,51,115,51,"args"],[96,55,115,55],[96,56,115,56,"length"],[96,62,115,51],[96,65,115,65],[96,66,115,50],[96,67,115,28],[96,70,115,70],[96,74,115,6],[97,0,116,6],[97,12,116,12,"hasSuccessCallback"],[97,30,116,30],[97,33,116,33],[97,40,116,40,"lastArg"],[97,47,116,33],[97,52,116,52],[97,62,116,6],[98,0,117,6],[98,12,117,12,"hasErrorCallback"],[98,28,117,28],[98,31,117,31],[98,38,117,38,"secondLastArg"],[98,51,117,31],[98,56,117,56],[98,66,117,6],[99,0,118,6,"hasErrorCallback"],[99,8,118,6,"hasErrorCallback"],[99,24,118,22],[99,28,119,8,"invariant"],[99,37,119,17],[99,38,120,10,"hasSuccessCallback"],[99,56,119,17],[99,58,121,10],[99,112,119,17],[99,113,118,6],[100,0,123,6],[100,12,123,12,"onSuccess"],[100,21,123,21],[100,24,123,24,"hasSuccessCallback"],[100,42,123,42],[100,45,123,45,"lastArg"],[100,52,123,42],[100,55,123,55],[100,59,123,6],[101,0,124,6],[101,12,124,12,"onFail"],[101,18,124,18],[101,21,124,21,"hasErrorCallback"],[101,37,124,37],[101,40,124,40,"secondLastArg"],[101,53,124,37],[101,56,124,56],[101,60,124,6],[102,0,125,6],[102,12,125,12,"callbackCount"],[102,25,125,25],[102,28,125,28,"hasSuccessCallback"],[102,46,125,46],[102,49,125,49,"hasErrorCallback"],[102,65,125,6],[103,0,126,6,"args"],[103,8,126,6,"args"],[103,12,126,10],[103,15,126,13,"args"],[103,19,126,17],[103,20,126,18,"slice"],[103,25,126,13],[103,26,126,24],[103,27,126,13],[103,29,126,27,"args"],[103,33,126,31],[103,34,126,32,"length"],[103,40,126,27],[103,43,126,41,"callbackCount"],[103,56,126,13],[103,57,126,6],[105,0,127,6],[105,12,127,10,"type"],[105,16,127,14],[105,21,127,19],[105,27,127,6],[105,29,127,27],[106,0,128,8],[106,17,128,15,"BatchedBridge"],[106,30,128,28],[106,31,128,29,"callNativeSyncHook"],[106,49,128,15],[106,50,129,10,"moduleID"],[106,58,128,15],[106,60,130,10,"methodID"],[106,68,128,15],[106,70,131,10,"args"],[106,74,128,15],[106,76,132,10,"onFail"],[106,82,128,15],[106,84,133,10,"onSuccess"],[106,93,128,15],[106,94,128,8],[107,0,135,7],[107,9,127,6],[107,15,135,13],[108,0,136,8,"BatchedBridge"],[108,10,136,8,"BatchedBridge"],[108,23,136,21],[108,24,136,22,"enqueueNativeCall"],[108,41,136,8],[108,42,137,10,"moduleID"],[108,50,136,8],[108,52,138,10,"methodID"],[108,60,136,8],[108,62,139,10,"args"],[108,66,136,8],[108,68,140,10,"onFail"],[108,74,136,8],[108,76,141,10,"onSuccess"],[108,85,136,8],[109,0,143,7],[110,0,144,5],[110,7,113,4],[111,0,145,3],[113,0,146,2,"fn"],[113,4,146,2,"fn"],[113,6,146,4],[113,7,146,5,"type"],[113,11,146,2],[113,14,146,12,"type"],[113,18,146,2],[114,0,147,2],[114,11,147,9,"fn"],[114,13,147,2],[115,0,148,1],[117,0,150,0],[117,11,150,9,"arrayContains"],[117,24,150,0],[117,25,150,26,"array"],[117,30,150,0],[117,32,150,52,"value"],[117,37,150,0],[117,39,150,71],[118,0,151,2],[118,11,151,9,"array"],[118,16,151,14],[118,17,151,15,"indexOf"],[118,24,151,9],[118,25,151,23,"value"],[118,30,151,9],[118,36,151,34],[118,37,151,35],[118,38,151,2],[119,0,152,1],[121,0,154,0],[121,11,154,9,"updateErrorWithErrorData"],[121,35,154,0],[121,36,155,2,"errorData"],[121,45,154,0],[121,47,156,2,"error"],[121,52,154,0],[121,54,157,17],[122,0,158,2],[122,11,158,9],[122,20,158,23,"error"],[122,25,158,9],[122,27,158,30,"errorData"],[122,36,158,39],[122,40,158,43],[122,42,158,9],[122,43,158,2],[123,0,159,1],[125,0,161,0],[125,6,161,4,"NativeModules"],[125,19,161,49],[125,22,161,52],[125,24,161,0],[127,0,162,0],[127,6,162,4,"global"],[127,12,162,10],[127,13,162,11,"nativeModuleProxy"],[127,30,162,0],[127,32,162,30],[128,0,163,2,"NativeModules"],[128,4,163,2,"NativeModules"],[128,17,163,15],[128,20,163,18,"global"],[128,26,163,24],[128,27,163,25,"nativeModuleProxy"],[128,44,163,2],[129,0,164,1],[129,3,162,0],[129,9,164,7],[129,13,164,11],[129,14,164,12,"global"],[129,20,164,18],[129,21,164,19,"nativeExtensions"],[129,37,164,7],[129,39,164,37],[130,0,165,2],[130,8,165,8,"bridgeConfig"],[130,20,165,20],[130,23,165,23,"global"],[130,29,165,29],[130,30,165,30,"__fbBatchedBridgeConfig"],[130,53,165,2],[131,0,166,2,"invariant"],[131,4,166,2,"invariant"],[131,13,166,11],[131,14,167,4,"bridgeConfig"],[131,26,166,11],[131,28,168,4],[131,94,166,11],[131,95,166,2],[133,0,171,2],[133,8,171,8,"defineLazyObjectProperty"],[133,32,171,32],[133,35,171,35,"require"],[133,46,171,42],[133,106,171,2],[135,0,172,2],[135,5,172,3,"bridgeConfig"],[135,17,172,15],[135,18,172,16,"remoteModuleConfig"],[135,36,172,3],[135,40,172,38],[135,42,172,2],[135,44,172,42,"forEach"],[135,51,172,2],[135,52,173,4],[135,62,173,5,"config"],[135,68,173,4],[135,70,173,27,"moduleID"],[135,78,173,4],[135,80,173,48],[136,0,176,6],[136,10,176,12,"info"],[136,14,176,16],[136,17,176,19,"genModule"],[136,26,176,28],[136,27,176,29,"config"],[136,33,176,28],[136,35,176,37,"moduleID"],[136,43,176,28],[136,44,176,6],[138,0,177,6],[138,10,177,10],[138,11,177,11,"info"],[138,15,177,6],[138,17,177,17],[139,0,178,8],[140,0,179,7],[142,0,181,6],[142,10,181,10,"info"],[142,14,181,14],[142,15,181,15,"module"],[142,21,181,6],[142,23,181,23],[143,0,182,8,"NativeModules"],[143,8,182,8,"NativeModules"],[143,21,182,21],[143,22,182,22,"info"],[143,26,182,26],[143,27,182,27,"name"],[143,31,182,21],[143,32,182,8],[143,35,182,35,"info"],[143,39,182,39],[143,40,182,40,"module"],[143,46,182,8],[144,0,183,7],[144,7,181,6],[144,13,185,11],[145,0,186,8,"defineLazyObjectProperty"],[145,10,186,8,"defineLazyObjectProperty"],[145,34,186,32],[145,35,186,33,"NativeModules"],[145,48,186,32],[145,50,186,48,"info"],[145,54,186,52],[145,55,186,53,"name"],[145,59,186,32],[145,61,186,59],[146,0,187,10,"get"],[146,12,187,10,"get"],[146,15,187,13],[146,17,187,15],[147,0,187,15],[147,21,187,21,"loadModule"],[147,31,187,31],[147,32,187,32,"info"],[147,36,187,36],[147,37,187,37,"name"],[147,41,187,31],[147,43,187,43,"moduleID"],[147,51,187,31],[147,52,187,15],[148,0,187,15],[149,0,186,59],[149,11,186,32],[149,12,186,8],[150,0,189,7],[151,0,190,5],[151,5,172,2],[152,0,192,1],[154,0,194,0,"module"],[154,2,194,0,"module"],[154,8,194,6],[154,9,194,7,"exports"],[154,16,194,0],[154,19,194,17,"NativeModules"],[154,32,194,0]],"functionMap":{"names":["<global>","genModule","methods.forEach$argument_0","module.getConstants","loadModule","genMethod","fn","Promise$argument_0","BatchedBridge.enqueueNativeCall$argument_3","BatchedBridge.enqueueNativeCall$argument_4","arrayContains","updateErrorWithErrorData","forEach$argument_0","defineLazyObjectProperty$argument_2.get"],"mappings":"AAA;AC4B;oBCuB;KDU;0BEK,oCF;CDY;AIK;CJQ;AKE;SCG;yBCI;UCK,qBD;UEC;6EFC;ODE;KDC;SCE;KD+B;CLI;AUE;CVE;AWE;CXK;IYc;eCc,qCD;KZG"}},"type":"js/module"}]}