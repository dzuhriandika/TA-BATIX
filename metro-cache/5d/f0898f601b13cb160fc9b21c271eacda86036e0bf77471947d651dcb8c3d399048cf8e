{"dependencies":[{"name":"./../utils","data":{"isAsync":false}},{"name":"../helpers/buildURL","data":{"isAsync":false}},{"name":"./InterceptorManager","data":{"isAsync":false}},{"name":"./dispatchRequest","data":{"isAsync":false}},{"name":"./mergeConfig","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var utils = _$$_REQUIRE(_dependencyMap[0], \"./../utils\");\n\n  var buildURL = _$$_REQUIRE(_dependencyMap[1], \"../helpers/buildURL\");\n\n  var InterceptorManager = _$$_REQUIRE(_dependencyMap[2], \"./InterceptorManager\");\n\n  var dispatchRequest = _$$_REQUIRE(_dependencyMap[3], \"./dispatchRequest\");\n\n  var mergeConfig = _$$_REQUIRE(_dependencyMap[4], \"./mergeConfig\");\n\n  function Axios(instanceConfig) {\n    this.defaults = instanceConfig;\n    this.interceptors = {\n      request: new InterceptorManager(),\n      response: new InterceptorManager()\n    };\n  }\n\n  Axios.prototype.request = function request(config) {\n    if (typeof config === 'string') {\n      config = arguments[1] || {};\n      config.url = arguments[0];\n    } else {\n      config = config || {};\n    }\n\n    config = mergeConfig(this.defaults, config);\n    config.method = config.method ? config.method.toLowerCase() : 'get';\n    var chain = [dispatchRequest, undefined];\n    var promise = Promise.resolve(config);\n    this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n      chain.unshift(interceptor.fulfilled, interceptor.rejected);\n    });\n    this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n      chain.push(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    while (chain.length) {\n      promise = promise.then(chain.shift(), chain.shift());\n    }\n\n    return promise;\n  };\n\n  Axios.prototype.getUri = function getUri(config) {\n    config = mergeConfig(this.defaults, config);\n    return buildURL(config.url, config.params, config.paramsSerializer).replace(/^\\?/, '');\n  };\n\n  utils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n    Axios.prototype[method] = function (url, config) {\n      return this.request(utils.merge(config || {}, {\n        method: method,\n        url: url\n      }));\n    };\n  });\n  utils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n    Axios.prototype[method] = function (url, data, config) {\n      return this.request(utils.merge(config || {}, {\n        method: method,\n        url: url,\n        data: data\n      }));\n    };\n  });\n  module.exports = Axios;\n});","lineCount":71,"map":[[2,0,1,0],[4,0,3,0],[4,6,3,4,"utils"],[4,11,3,9],[4,14,3,12,"require"],[4,25,3,19],[4,58,3,0],[6,0,4,0],[6,6,4,4,"buildURL"],[6,14,4,12],[6,17,4,15,"require"],[6,28,4,22],[6,70,4,0],[8,0,5,0],[8,6,5,4,"InterceptorManager"],[8,24,5,22],[8,27,5,25,"require"],[8,38,5,32],[8,81,5,0],[10,0,6,0],[10,6,6,4,"dispatchRequest"],[10,21,6,19],[10,24,6,22,"require"],[10,35,6,29],[10,75,6,0],[12,0,7,0],[12,6,7,4,"mergeConfig"],[12,17,7,15],[12,20,7,18,"require"],[12,31,7,25],[12,67,7,0],[14,0,14,0],[14,11,14,9,"Axios"],[14,16,14,0],[14,17,14,15,"instanceConfig"],[14,31,14,0],[14,33,14,31],[15,0,15,2],[15,9,15,7,"defaults"],[15,17,15,2],[15,20,15,18,"instanceConfig"],[15,34,15,2],[16,0,16,2],[16,9,16,7,"interceptors"],[16,21,16,2],[16,24,16,22],[17,0,17,4,"request"],[17,6,17,4,"request"],[17,13,17,11],[17,15,17,13],[17,19,17,17,"InterceptorManager"],[17,37,17,13],[17,39,16,22],[18,0,18,4,"response"],[18,6,18,4,"response"],[18,14,18,12],[18,16,18,14],[18,20,18,18,"InterceptorManager"],[18,38,18,14],[19,0,16,22],[19,5,16,2],[20,0,20,1],[22,0,27,0,"Axios"],[22,2,27,0,"Axios"],[22,7,27,5],[22,8,27,6,"prototype"],[22,17,27,0],[22,18,27,16,"request"],[22,25,27,0],[22,28,27,26],[22,37,27,35,"request"],[22,44,27,26],[22,45,27,43,"config"],[22,51,27,26],[22,53,27,51],[23,0,30,2],[23,8,30,6],[23,15,30,13,"config"],[23,21,30,6],[23,26,30,24],[23,34,30,2],[23,36,30,34],[24,0,31,4,"config"],[24,6,31,4,"config"],[24,12,31,10],[24,15,31,13,"arguments"],[24,24,31,22],[24,25,31,23],[24,26,31,22],[24,27,31,13],[24,31,31,29],[24,33,31,4],[25,0,32,4,"config"],[25,6,32,4,"config"],[25,12,32,10],[25,13,32,11,"url"],[25,16,32,4],[25,19,32,17,"arguments"],[25,28,32,26],[25,29,32,27],[25,30,32,26],[25,31,32,4],[26,0,33,3],[26,5,30,2],[26,11,33,9],[27,0,34,4,"config"],[27,6,34,4,"config"],[27,12,34,10],[27,15,34,13,"config"],[27,21,34,19],[27,25,34,23],[27,27,34,4],[28,0,35,3],[30,0,37,2,"config"],[30,4,37,2,"config"],[30,10,37,8],[30,13,37,11,"mergeConfig"],[30,24,37,22],[30,25,37,23],[30,30,37,28,"defaults"],[30,38,37,22],[30,40,37,38,"config"],[30,46,37,22],[30,47,37,2],[31,0,38,2,"config"],[31,4,38,2,"config"],[31,10,38,8],[31,11,38,9,"method"],[31,17,38,2],[31,20,38,18,"config"],[31,26,38,24],[31,27,38,25,"method"],[31,33,38,18],[31,36,38,34,"config"],[31,42,38,40],[31,43,38,41,"method"],[31,49,38,34],[31,50,38,48,"toLowerCase"],[31,61,38,34],[31,63,38,18],[31,66,38,64],[31,71,38,2],[32,0,41,2],[32,8,41,6,"chain"],[32,13,41,11],[32,16,41,14],[32,17,41,15,"dispatchRequest"],[32,32,41,14],[32,34,41,32,"undefined"],[32,43,41,14],[32,44,41,2],[33,0,42,2],[33,8,42,6,"promise"],[33,15,42,13],[33,18,42,16,"Promise"],[33,25,42,23],[33,26,42,24,"resolve"],[33,33,42,16],[33,34,42,32,"config"],[33,40,42,16],[33,41,42,2],[34,0,44,2],[34,9,44,7,"interceptors"],[34,21,44,2],[34,22,44,20,"request"],[34,29,44,2],[34,30,44,28,"forEach"],[34,37,44,2],[34,38,44,36],[34,47,44,45,"unshiftRequestInterceptors"],[34,73,44,36],[34,74,44,72,"interceptor"],[34,85,44,36],[34,87,44,85],[35,0,45,4,"chain"],[35,6,45,4,"chain"],[35,11,45,9],[35,12,45,10,"unshift"],[35,19,45,4],[35,20,45,18,"interceptor"],[35,31,45,29],[35,32,45,30,"fulfilled"],[35,41,45,4],[35,43,45,41,"interceptor"],[35,54,45,52],[35,55,45,53,"rejected"],[35,63,45,4],[36,0,46,3],[36,5,44,2],[37,0,48,2],[37,9,48,7,"interceptors"],[37,21,48,2],[37,22,48,20,"response"],[37,30,48,2],[37,31,48,29,"forEach"],[37,38,48,2],[37,39,48,37],[37,48,48,46,"pushResponseInterceptors"],[37,72,48,37],[37,73,48,71,"interceptor"],[37,84,48,37],[37,86,48,84],[38,0,49,4,"chain"],[38,6,49,4,"chain"],[38,11,49,9],[38,12,49,10,"push"],[38,16,49,4],[38,17,49,15,"interceptor"],[38,28,49,26],[38,29,49,27,"fulfilled"],[38,38,49,4],[38,40,49,38,"interceptor"],[38,51,49,49],[38,52,49,50,"rejected"],[38,60,49,4],[39,0,50,3],[39,5,48,2],[41,0,52,2],[41,11,52,9,"chain"],[41,16,52,14],[41,17,52,15,"length"],[41,23,52,2],[41,25,52,23],[42,0,53,4,"promise"],[42,6,53,4,"promise"],[42,13,53,11],[42,16,53,14,"promise"],[42,23,53,21],[42,24,53,22,"then"],[42,28,53,14],[42,29,53,27,"chain"],[42,34,53,32],[42,35,53,33,"shift"],[42,40,53,27],[42,42,53,14],[42,44,53,42,"chain"],[42,49,53,47],[42,50,53,48,"shift"],[42,55,53,42],[42,57,53,14],[42,58,53,4],[43,0,54,3],[45,0,56,2],[45,11,56,9,"promise"],[45,18,56,2],[46,0,57,1],[46,3,27,0],[48,0,59,0,"Axios"],[48,2,59,0,"Axios"],[48,7,59,5],[48,8,59,6,"prototype"],[48,17,59,0],[48,18,59,16,"getUri"],[48,24,59,0],[48,27,59,25],[48,36,59,34,"getUri"],[48,42,59,25],[48,43,59,41,"config"],[48,49,59,25],[48,51,59,49],[49,0,60,2,"config"],[49,4,60,2,"config"],[49,10,60,8],[49,13,60,11,"mergeConfig"],[49,24,60,22],[49,25,60,23],[49,30,60,28,"defaults"],[49,38,60,22],[49,40,60,38,"config"],[49,46,60,22],[49,47,60,2],[50,0,61,2],[50,11,61,9,"buildURL"],[50,19,61,17],[50,20,61,18,"config"],[50,26,61,24],[50,27,61,25,"url"],[50,30,61,17],[50,32,61,30,"config"],[50,38,61,36],[50,39,61,37,"params"],[50,45,61,17],[50,47,61,45,"config"],[50,53,61,51],[50,54,61,52,"paramsSerializer"],[50,70,61,17],[50,71,61,9],[50,72,61,70,"replace"],[50,79,61,9],[50,80,61,78],[50,85,61,9],[50,87,61,85],[50,89,61,9],[50,90,61,2],[51,0,62,1],[51,3,59,0],[53,0,65,0,"utils"],[53,2,65,0,"utils"],[53,7,65,5],[53,8,65,6,"forEach"],[53,15,65,0],[53,16,65,14],[53,17,65,15],[53,25,65,14],[53,27,65,25],[53,32,65,14],[53,34,65,32],[53,40,65,14],[53,42,65,40],[53,51,65,14],[53,52,65,0],[53,54,65,52],[53,63,65,61,"forEachMethodNoData"],[53,82,65,52],[53,83,65,81,"method"],[53,89,65,52],[53,91,65,89],[54,0,67,2,"Axios"],[54,4,67,2,"Axios"],[54,9,67,7],[54,10,67,8,"prototype"],[54,19,67,2],[54,20,67,18,"method"],[54,26,67,2],[54,30,67,28],[54,40,67,37,"url"],[54,43,67,28],[54,45,67,42,"config"],[54,51,67,28],[54,53,67,50],[55,0,68,4],[55,13,68,11],[55,18,68,16,"request"],[55,25,68,11],[55,26,68,24,"utils"],[55,31,68,29],[55,32,68,30,"merge"],[55,37,68,24],[55,38,68,36,"config"],[55,44,68,42],[55,48,68,46],[55,50,68,24],[55,52,68,50],[56,0,69,6,"method"],[56,8,69,6,"method"],[56,14,69,12],[56,16,69,14,"method"],[56,22,68,50],[57,0,70,6,"url"],[57,8,70,6,"url"],[57,11,70,9],[57,13,70,11,"url"],[58,0,68,50],[58,7,68,24],[58,8,68,11],[58,9,68,4],[59,0,72,3],[59,5,67,2],[60,0,73,1],[60,3,65,0],[61,0,75,0,"utils"],[61,2,75,0,"utils"],[61,7,75,5],[61,8,75,6,"forEach"],[61,15,75,0],[61,16,75,14],[61,17,75,15],[61,23,75,14],[61,25,75,23],[61,30,75,14],[61,32,75,30],[61,39,75,14],[61,40,75,0],[61,42,75,40],[61,51,75,49,"forEachMethodWithData"],[61,72,75,40],[61,73,75,71,"method"],[61,79,75,40],[61,81,75,79],[62,0,77,2,"Axios"],[62,4,77,2,"Axios"],[62,9,77,7],[62,10,77,8,"prototype"],[62,19,77,2],[62,20,77,18,"method"],[62,26,77,2],[62,30,77,28],[62,40,77,37,"url"],[62,43,77,28],[62,45,77,42,"data"],[62,49,77,28],[62,51,77,48,"config"],[62,57,77,28],[62,59,77,56],[63,0,78,4],[63,13,78,11],[63,18,78,16,"request"],[63,25,78,11],[63,26,78,24,"utils"],[63,31,78,29],[63,32,78,30,"merge"],[63,37,78,24],[63,38,78,36,"config"],[63,44,78,42],[63,48,78,46],[63,50,78,24],[63,52,78,50],[64,0,79,6,"method"],[64,8,79,6,"method"],[64,14,79,12],[64,16,79,14,"method"],[64,22,78,50],[65,0,80,6,"url"],[65,8,80,6,"url"],[65,11,80,9],[65,13,80,11,"url"],[65,16,78,50],[66,0,81,6,"data"],[66,8,81,6,"data"],[66,12,81,10],[66,14,81,12,"data"],[67,0,78,50],[67,7,78,24],[67,8,78,11],[67,9,78,4],[68,0,83,3],[68,5,77,2],[69,0,84,1],[69,3,75,0],[70,0,86,0,"module"],[70,2,86,0,"module"],[70,8,86,6],[70,9,86,7,"exports"],[70,16,86,0],[70,19,86,17,"Axios"],[70,24,86,0]],"functionMap":{"names":["<global>","Axios","request","unshiftRequestInterceptors","pushResponseInterceptors","getUri","forEachMethodNoData","prototype.method","forEachMethodWithData"],"mappings":"AAA;ACa;CDM;0BEO;oCCiB;GDE;qCEE;GFE;CFO;yBKE;CLG;oDMG;4BCE;GDK;CNC;wCQE;4BDE;GCM;CRC"}},"type":"js/module"}]}