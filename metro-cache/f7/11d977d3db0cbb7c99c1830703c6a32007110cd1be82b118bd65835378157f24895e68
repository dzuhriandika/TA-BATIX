{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"isAsync":false}},{"name":"./NativeAsyncStorage","data":{"isAsync":false}},{"name":"invariant","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/slicedToArray\"));\n\n  var _NativeAsyncStorage = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"./NativeAsyncStorage\"));\n\n  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"invariant\"));\n\n  var RCTAsyncStorage = _NativeAsyncStorage.default;\n  var AsyncStorage = {\n    _getRequests: [],\n    _getKeys: [],\n    _immediate: null,\n    getItem: function getItem(key, callback) {\n      (0, _invariant.default)(RCTAsyncStorage, 'RCTAsyncStorage not available');\n      return new Promise(function (resolve, reject) {\n        RCTAsyncStorage.multiGet([key], function (errors, result) {\n          var value = result && result[0] && result[0][1] ? result[0][1] : null;\n          var errs = convertErrors(errors);\n          callback && callback(errs && errs[0], value);\n\n          if (errs) {\n            reject(errs[0]);\n          } else {\n            resolve(value);\n          }\n        });\n      });\n    },\n    setItem: function setItem(key, value, callback) {\n      (0, _invariant.default)(RCTAsyncStorage, 'RCTAsyncStorage not available');\n      return new Promise(function (resolve, reject) {\n        RCTAsyncStorage.multiSet([[key, value]], function (errors) {\n          var errs = convertErrors(errors);\n          callback && callback(errs && errs[0]);\n\n          if (errs) {\n            reject(errs[0]);\n          } else {\n            resolve(null);\n          }\n        });\n      });\n    },\n    removeItem: function removeItem(key, callback) {\n      (0, _invariant.default)(RCTAsyncStorage, 'RCTAsyncStorage not available');\n      return new Promise(function (resolve, reject) {\n        RCTAsyncStorage.multiRemove([key], function (errors) {\n          var errs = convertErrors(errors);\n          callback && callback(errs && errs[0]);\n\n          if (errs) {\n            reject(errs[0]);\n          } else {\n            resolve(null);\n          }\n        });\n      });\n    },\n    mergeItem: function mergeItem(key, value, callback) {\n      (0, _invariant.default)(RCTAsyncStorage, 'RCTAsyncStorage not available');\n      return new Promise(function (resolve, reject) {\n        RCTAsyncStorage.multiMerge([[key, value]], function (errors) {\n          var errs = convertErrors(errors);\n          callback && callback(errs && errs[0]);\n\n          if (errs) {\n            reject(errs[0]);\n          } else {\n            resolve(null);\n          }\n        });\n      });\n    },\n    clear: function clear(callback) {\n      (0, _invariant.default)(RCTAsyncStorage, 'RCTAsyncStorage not available');\n      return new Promise(function (resolve, reject) {\n        RCTAsyncStorage.clear(function (error) {\n          callback && callback(convertError(error));\n\n          if (error && convertError(error)) {\n            reject(convertError(error));\n          } else {\n            resolve(null);\n          }\n        });\n      });\n    },\n    getAllKeys: function getAllKeys(callback) {\n      (0, _invariant.default)(RCTAsyncStorage, 'RCTAsyncStorage not available');\n      return new Promise(function (resolve, reject) {\n        RCTAsyncStorage.getAllKeys(function (error, keys) {\n          callback && callback(convertError(error), keys);\n\n          if (error) {\n            reject(convertError(error));\n          } else {\n            resolve(keys);\n          }\n        });\n      });\n    },\n    flushGetRequests: function flushGetRequests() {\n      var getRequests = this._getRequests;\n      var getKeys = this._getKeys;\n      this._getRequests = [];\n      this._getKeys = [];\n      (0, _invariant.default)(RCTAsyncStorage, 'RCTAsyncStorage not available');\n      RCTAsyncStorage.multiGet(getKeys, function (errors, result) {\n        var map = {};\n        result && result.forEach(function (_ref) {\n          var _ref2 = (0, _slicedToArray2.default)(_ref, 2),\n              key = _ref2[0],\n              value = _ref2[1];\n\n          map[key] = value;\n          return value;\n        });\n        var reqLength = getRequests.length;\n\n        for (var i = 0; i < reqLength; i++) {\n          var request = getRequests[i];\n          var requestKeys = request.keys;\n          var requestResult = requestKeys.map(function (key) {\n            return [key, map[key]];\n          });\n          request.callback && request.callback(null, requestResult);\n          request.resolve && request.resolve(requestResult);\n        }\n      });\n    },\n    multiGet: function multiGet(keys, callback) {\n      var _this = this;\n\n      if (!this._immediate) {\n        this._immediate = setImmediate(function () {\n          _this._immediate = null;\n\n          _this.flushGetRequests();\n        });\n      }\n\n      var getRequest = {\n        keys: keys,\n        callback: callback,\n        keyIndex: this._getKeys.length,\n        resolve: null,\n        reject: null\n      };\n      var promiseResult = new Promise(function (resolve, reject) {\n        getRequest.resolve = resolve;\n        getRequest.reject = reject;\n      });\n\n      this._getRequests.push(getRequest);\n\n      keys.forEach(function (key) {\n        if (_this._getKeys.indexOf(key) === -1) {\n          _this._getKeys.push(key);\n        }\n      });\n      return promiseResult;\n    },\n    multiSet: function multiSet(keyValuePairs, callback) {\n      (0, _invariant.default)(RCTAsyncStorage, 'RCTAsyncStorage not available');\n      return new Promise(function (resolve, reject) {\n        RCTAsyncStorage.multiSet(keyValuePairs, function (errors) {\n          var error = convertErrors(errors);\n          callback && callback(error);\n\n          if (error) {\n            reject(error);\n          } else {\n            resolve(null);\n          }\n        });\n      });\n    },\n    multiRemove: function multiRemove(keys, callback) {\n      (0, _invariant.default)(RCTAsyncStorage, 'RCTAsyncStorage not available');\n      return new Promise(function (resolve, reject) {\n        RCTAsyncStorage.multiRemove(keys, function (errors) {\n          var error = convertErrors(errors);\n          callback && callback(error);\n\n          if (error) {\n            reject(error);\n          } else {\n            resolve(null);\n          }\n        });\n      });\n    },\n    multiMerge: function multiMerge(keyValuePairs, callback) {\n      (0, _invariant.default)(RCTAsyncStorage, 'RCTAsyncStorage not available');\n      return new Promise(function (resolve, reject) {\n        RCTAsyncStorage.multiMerge(keyValuePairs, function (errors) {\n          var error = convertErrors(errors);\n          callback && callback(error);\n\n          if (error) {\n            reject(error);\n          } else {\n            resolve(null);\n          }\n        });\n      });\n    }\n  };\n\n  if (!RCTAsyncStorage.multiMerge) {\n    delete AsyncStorage.mergeItem;\n    delete AsyncStorage.multiMerge;\n  }\n\n  function convertErrors(errs) {\n    if (!errs) {\n      return null;\n    }\n\n    return (Array.isArray(errs) ? errs : [errs]).map(function (e) {\n      return convertError(e);\n    });\n  }\n\n  function convertError(error) {\n    if (!error) {\n      return null;\n    }\n\n    var out = new Error(error.message);\n    out.key = error.key;\n    return out;\n  }\n\n  module.exports = AsyncStorage;\n});","lineCount":240,"map":[[2,0,13,0],[8,0,15,0],[10,0,16,0],[12,0,19,0],[12,6,19,6,"RCTAsyncStorage"],[12,21,19,21],[12,24,19,24,"NativeAsyncStorage"],[12,51,19,0],[13,0,28,0],[13,6,28,6,"AsyncStorage"],[13,18,28,18],[13,21,28,21],[14,0,29,2,"_getRequests"],[14,4,29,2,"_getRequests"],[14,16,29,14],[14,18,29,17],[14,20,28,21],[15,0,30,2,"_getKeys"],[15,4,30,2,"_getKeys"],[15,12,30,10],[15,14,30,13],[15,16,28,21],[16,0,31,2,"_immediate"],[16,4,31,2,"_immediate"],[16,14,31,12],[16,16,31,15],[16,20,28,21],[17,0,38,2,"getItem"],[17,4,38,2,"getItem"],[17,11,38,9],[17,13,38,11],[17,30,39,4,"key"],[17,33,38,11],[17,35,40,4,"callback"],[17,43,38,11],[17,45,41,13],[18,0,42,4],[18,30,42,14,"RCTAsyncStorage"],[18,45,42,4],[18,47,42,31],[18,78,42,4],[19,0,43,4],[19,13,43,11],[19,17,43,15,"Promise"],[19,24,43,11],[19,25,43,23],[19,35,43,24,"resolve"],[19,42,43,23],[19,44,43,33,"reject"],[19,50,43,23],[19,52,43,44],[20,0,44,6,"RCTAsyncStorage"],[20,8,44,6,"RCTAsyncStorage"],[20,23,44,21],[20,24,44,22,"multiGet"],[20,32,44,6],[20,33,44,31],[20,34,44,32,"key"],[20,37,44,31],[20,38,44,6],[20,40,44,38],[20,50,44,47,"errors"],[20,56,44,38],[20,58,44,55,"result"],[20,64,44,38],[20,66,44,63],[21,0,46,8],[21,14,46,14,"value"],[21,19,46,19],[21,22,46,22,"result"],[21,28,46,28],[21,32,46,32,"result"],[21,38,46,38],[21,39,46,39],[21,40,46,38],[21,41,46,22],[21,45,46,45,"result"],[21,51,46,51],[21,52,46,52],[21,53,46,51],[21,54,46,45],[21,55,46,55],[21,56,46,45],[21,57,46,22],[21,60,46,60,"result"],[21,66,46,66],[21,67,46,67],[21,68,46,66],[21,69,46,60],[21,70,46,70],[21,71,46,60],[21,72,46,22],[21,75,46,75],[21,79,46,8],[22,0,47,8],[22,14,47,14,"errs"],[22,18,47,18],[22,21,47,21,"convertErrors"],[22,34,47,34],[22,35,47,35,"errors"],[22,41,47,34],[22,42,47,8],[23,0,48,8,"callback"],[23,10,48,8,"callback"],[23,18,48,16],[23,22,48,20,"callback"],[23,30,48,28],[23,31,48,29,"errs"],[23,35,48,33],[23,39,48,37,"errs"],[23,43,48,41],[23,44,48,42],[23,45,48,41],[23,46,48,28],[23,48,48,46,"value"],[23,53,48,28],[23,54,48,8],[25,0,49,8],[25,14,49,12,"errs"],[25,18,49,8],[25,20,49,18],[26,0,50,10,"reject"],[26,12,50,10,"reject"],[26,18,50,16],[26,19,50,17,"errs"],[26,23,50,21],[26,24,50,22],[26,25,50,21],[26,26,50,16],[26,27,50,10],[27,0,51,9],[27,11,49,8],[27,17,51,15],[28,0,52,10,"resolve"],[28,12,52,10,"resolve"],[28,19,52,17],[28,20,52,18,"value"],[28,25,52,17],[28,26,52,10],[29,0,53,9],[30,0,54,7],[30,9,44,6],[31,0,55,5],[31,7,43,11],[31,8,43,4],[32,0,56,3],[32,5,28,21],[33,0,63,2,"setItem"],[33,4,63,2,"setItem"],[33,11,63,9],[33,13,63,11],[33,30,64,4,"key"],[33,33,63,11],[33,35,65,4,"value"],[33,40,63,11],[33,42,66,4,"callback"],[33,50,63,11],[33,52,67,13],[34,0,68,4],[34,30,68,14,"RCTAsyncStorage"],[34,45,68,4],[34,47,68,31],[34,78,68,4],[35,0,69,4],[35,13,69,11],[35,17,69,15,"Promise"],[35,24,69,11],[35,25,69,23],[35,35,69,24,"resolve"],[35,42,69,23],[35,44,69,33,"reject"],[35,50,69,23],[35,52,69,44],[36,0,70,6,"RCTAsyncStorage"],[36,8,70,6,"RCTAsyncStorage"],[36,23,70,21],[36,24,70,22,"multiSet"],[36,32,70,6],[36,33,70,31],[36,34,70,32],[36,35,70,33,"key"],[36,38,70,32],[36,40,70,38,"value"],[36,45,70,32],[36,46,70,31],[36,47,70,6],[36,49,70,47],[36,59,70,56,"errors"],[36,65,70,47],[36,67,70,64],[37,0,71,8],[37,14,71,14,"errs"],[37,18,71,18],[37,21,71,21,"convertErrors"],[37,34,71,34],[37,35,71,35,"errors"],[37,41,71,34],[37,42,71,8],[38,0,72,8,"callback"],[38,10,72,8,"callback"],[38,18,72,16],[38,22,72,20,"callback"],[38,30,72,28],[38,31,72,29,"errs"],[38,35,72,33],[38,39,72,37,"errs"],[38,43,72,41],[38,44,72,42],[38,45,72,41],[38,46,72,28],[38,47,72,8],[40,0,73,8],[40,14,73,12,"errs"],[40,18,73,8],[40,20,73,18],[41,0,74,10,"reject"],[41,12,74,10,"reject"],[41,18,74,16],[41,19,74,17,"errs"],[41,23,74,21],[41,24,74,22],[41,25,74,21],[41,26,74,16],[41,27,74,10],[42,0,75,9],[42,11,73,8],[42,17,75,15],[43,0,76,10,"resolve"],[43,12,76,10,"resolve"],[43,19,76,17],[43,20,76,18],[43,24,76,17],[43,25,76,10],[44,0,77,9],[45,0,78,7],[45,9,70,6],[46,0,79,5],[46,7,69,11],[46,8,69,4],[47,0,80,3],[47,5,28,21],[48,0,87,2,"removeItem"],[48,4,87,2,"removeItem"],[48,14,87,12],[48,16,87,14],[48,36,88,4,"key"],[48,39,87,14],[48,41,89,4,"callback"],[48,49,87,14],[48,51,90,13],[49,0,91,4],[49,30,91,14,"RCTAsyncStorage"],[49,45,91,4],[49,47,91,31],[49,78,91,4],[50,0,92,4],[50,13,92,11],[50,17,92,15,"Promise"],[50,24,92,11],[50,25,92,23],[50,35,92,24,"resolve"],[50,42,92,23],[50,44,92,33,"reject"],[50,50,92,23],[50,52,92,44],[51,0,93,6,"RCTAsyncStorage"],[51,8,93,6,"RCTAsyncStorage"],[51,23,93,21],[51,24,93,22,"multiRemove"],[51,35,93,6],[51,36,93,34],[51,37,93,35,"key"],[51,40,93,34],[51,41,93,6],[51,43,93,41],[51,53,93,50,"errors"],[51,59,93,41],[51,61,93,58],[52,0,94,8],[52,14,94,14,"errs"],[52,18,94,18],[52,21,94,21,"convertErrors"],[52,34,94,34],[52,35,94,35,"errors"],[52,41,94,34],[52,42,94,8],[53,0,95,8,"callback"],[53,10,95,8,"callback"],[53,18,95,16],[53,22,95,20,"callback"],[53,30,95,28],[53,31,95,29,"errs"],[53,35,95,33],[53,39,95,37,"errs"],[53,43,95,41],[53,44,95,42],[53,45,95,41],[53,46,95,28],[53,47,95,8],[55,0,96,8],[55,14,96,12,"errs"],[55,18,96,8],[55,20,96,18],[56,0,97,10,"reject"],[56,12,97,10,"reject"],[56,18,97,16],[56,19,97,17,"errs"],[56,23,97,21],[56,24,97,22],[56,25,97,21],[56,26,97,16],[56,27,97,10],[57,0,98,9],[57,11,96,8],[57,17,98,15],[58,0,99,10,"resolve"],[58,12,99,10,"resolve"],[58,19,99,17],[58,20,99,18],[58,24,99,17],[58,25,99,10],[59,0,100,9],[60,0,101,7],[60,9,93,6],[61,0,102,5],[61,7,92,11],[61,8,92,4],[62,0,103,3],[62,5,28,21],[63,0,113,2,"mergeItem"],[63,4,113,2,"mergeItem"],[63,13,113,11],[63,15,113,13],[63,34,114,4,"key"],[63,37,113,13],[63,39,115,4,"value"],[63,44,113,13],[63,46,116,4,"callback"],[63,54,113,13],[63,56,117,13],[64,0,118,4],[64,30,118,14,"RCTAsyncStorage"],[64,45,118,4],[64,47,118,31],[64,78,118,4],[65,0,119,4],[65,13,119,11],[65,17,119,15,"Promise"],[65,24,119,11],[65,25,119,23],[65,35,119,24,"resolve"],[65,42,119,23],[65,44,119,33,"reject"],[65,50,119,23],[65,52,119,44],[66,0,120,6,"RCTAsyncStorage"],[66,8,120,6,"RCTAsyncStorage"],[66,23,120,21],[66,24,120,22,"multiMerge"],[66,34,120,6],[66,35,120,33],[66,36,120,34],[66,37,120,35,"key"],[66,40,120,34],[66,42,120,40,"value"],[66,47,120,34],[66,48,120,33],[66,49,120,6],[66,51,120,49],[66,61,120,58,"errors"],[66,67,120,49],[66,69,120,66],[67,0,121,8],[67,14,121,14,"errs"],[67,18,121,18],[67,21,121,21,"convertErrors"],[67,34,121,34],[67,35,121,35,"errors"],[67,41,121,34],[67,42,121,8],[68,0,122,8,"callback"],[68,10,122,8,"callback"],[68,18,122,16],[68,22,122,20,"callback"],[68,30,122,28],[68,31,122,29,"errs"],[68,35,122,33],[68,39,122,37,"errs"],[68,43,122,41],[68,44,122,42],[68,45,122,41],[68,46,122,28],[68,47,122,8],[70,0,123,8],[70,14,123,12,"errs"],[70,18,123,8],[70,20,123,18],[71,0,124,10,"reject"],[71,12,124,10,"reject"],[71,18,124,16],[71,19,124,17,"errs"],[71,23,124,21],[71,24,124,22],[71,25,124,21],[71,26,124,16],[71,27,124,10],[72,0,125,9],[72,11,123,8],[72,17,125,15],[73,0,126,10,"resolve"],[73,12,126,10,"resolve"],[73,19,126,17],[73,20,126,18],[73,24,126,17],[73,25,126,10],[74,0,127,9],[75,0,128,7],[75,9,120,6],[76,0,129,5],[76,7,119,11],[76,8,119,4],[77,0,130,3],[77,5,28,21],[78,0,139,2,"clear"],[78,4,139,2,"clear"],[78,9,139,7],[78,11,139,9],[78,26,139,18,"callback"],[78,34,139,9],[78,36,139,64],[79,0,140,4],[79,30,140,14,"RCTAsyncStorage"],[79,45,140,4],[79,47,140,31],[79,78,140,4],[80,0,141,4],[80,13,141,11],[80,17,141,15,"Promise"],[80,24,141,11],[80,25,141,23],[80,35,141,24,"resolve"],[80,42,141,23],[80,44,141,33,"reject"],[80,50,141,23],[80,52,141,44],[81,0,142,6,"RCTAsyncStorage"],[81,8,142,6,"RCTAsyncStorage"],[81,23,142,21],[81,24,142,22,"clear"],[81,29,142,6],[81,30,142,28],[81,40,142,37,"error"],[81,45,142,28],[81,47,142,44],[82,0,143,8,"callback"],[82,10,143,8,"callback"],[82,18,143,16],[82,22,143,20,"callback"],[82,30,143,28],[82,31,143,29,"convertError"],[82,43,143,41],[82,44,143,42,"error"],[82,49,143,41],[82,50,143,28],[82,51,143,8],[84,0,144,8],[84,14,144,12,"error"],[84,19,144,17],[84,23,144,21,"convertError"],[84,35,144,33],[84,36,144,34,"error"],[84,41,144,33],[84,42,144,8],[84,44,144,42],[85,0,145,10,"reject"],[85,12,145,10,"reject"],[85,18,145,16],[85,19,145,17,"convertError"],[85,31,145,29],[85,32,145,30,"error"],[85,37,145,29],[85,38,145,16],[85,39,145,10],[86,0,146,9],[86,11,144,8],[86,17,146,15],[87,0,147,10,"resolve"],[87,12,147,10,"resolve"],[87,19,147,17],[87,20,147,18],[87,24,147,17],[87,25,147,10],[88,0,148,9],[89,0,149,7],[89,9,142,6],[90,0,150,5],[90,7,141,11],[90,8,141,4],[91,0,151,3],[91,5,28,21],[92,0,158,2,"getAllKeys"],[92,4,158,2,"getAllKeys"],[92,14,158,12],[92,16,158,14],[92,36,159,4,"callback"],[92,44,158,14],[92,46,160,13],[93,0,161,4],[93,30,161,14,"RCTAsyncStorage"],[93,45,161,4],[93,47,161,31],[93,78,161,4],[94,0,162,4],[94,13,162,11],[94,17,162,15,"Promise"],[94,24,162,11],[94,25,162,23],[94,35,162,24,"resolve"],[94,42,162,23],[94,44,162,33,"reject"],[94,50,162,23],[94,52,162,44],[95,0,163,6,"RCTAsyncStorage"],[95,8,163,6,"RCTAsyncStorage"],[95,23,163,21],[95,24,163,22,"getAllKeys"],[95,34,163,6],[95,35,163,33],[95,45,163,42,"error"],[95,50,163,33],[95,52,163,49,"keys"],[95,56,163,33],[95,58,163,55],[96,0,164,8,"callback"],[96,10,164,8,"callback"],[96,18,164,16],[96,22,164,20,"callback"],[96,30,164,28],[96,31,164,29,"convertError"],[96,43,164,41],[96,44,164,42,"error"],[96,49,164,41],[96,50,164,28],[96,52,164,50,"keys"],[96,56,164,28],[96,57,164,8],[98,0,165,8],[98,14,165,12,"error"],[98,19,165,8],[98,21,165,19],[99,0,166,10,"reject"],[99,12,166,10,"reject"],[99,18,166,16],[99,19,166,17,"convertError"],[99,31,166,29],[99,32,166,30,"error"],[99,37,166,29],[99,38,166,16],[99,39,166,10],[100,0,167,9],[100,11,165,8],[100,17,167,15],[101,0,168,10,"resolve"],[101,12,168,10,"resolve"],[101,19,168,17],[101,20,168,18,"keys"],[101,24,168,17],[101,25,168,10],[102,0,169,9],[103,0,170,7],[103,9,163,6],[104,0,171,5],[104,7,162,11],[104,8,162,4],[105,0,172,3],[105,5,28,21],[106,0,189,2,"flushGetRequests"],[106,4,189,2,"flushGetRequests"],[106,20,189,18],[106,22,189,20],[106,50,189,37],[107,0,190,4],[107,10,190,10,"getRequests"],[107,21,190,21],[107,24,190,24],[107,29,190,29,"_getRequests"],[107,41,190,4],[108,0,191,4],[108,10,191,10,"getKeys"],[108,17,191,17],[108,20,191,20],[108,25,191,25,"_getKeys"],[108,33,191,4],[109,0,193,4],[109,11,193,9,"_getRequests"],[109,23,193,4],[109,26,193,24],[109,28,193,4],[110,0,194,4],[110,11,194,9,"_getKeys"],[110,19,194,4],[110,22,194,20],[110,24,194,4],[111,0,196,4],[111,30,196,14,"RCTAsyncStorage"],[111,45,196,4],[111,47,196,31],[111,78,196,4],[112,0,197,4,"RCTAsyncStorage"],[112,6,197,4,"RCTAsyncStorage"],[112,21,197,19],[112,22,197,20,"multiGet"],[112,30,197,4],[112,31,197,29,"getKeys"],[112,38,197,4],[112,40,197,38],[112,50,197,47,"errors"],[112,56,197,38],[112,58,197,55,"result"],[112,64,197,38],[112,66,197,63],[113,0,204,6],[113,12,204,12,"map"],[113,15,204,15],[113,18,204,18],[113,20,204,6],[114,0,205,6,"result"],[114,8,205,6,"result"],[114,14,205,12],[114,18,206,8,"result"],[114,24,206,14],[114,25,206,15,"forEach"],[114,32,206,8],[114,33,206,23],[114,49,206,41],[115,0,206,41],[116,0,206,41],[116,14,206,25,"key"],[116,17,206,41],[117,0,206,41],[117,14,206,30,"value"],[117,19,206,41],[119,0,207,10,"map"],[119,10,207,10,"map"],[119,13,207,13],[119,14,207,14,"key"],[119,17,207,13],[119,18,207,10],[119,21,207,21,"value"],[119,26,207,10],[120,0,208,10],[120,17,208,17,"value"],[120,22,208,10],[121,0,209,9],[121,9,206,8],[121,10,205,6],[122,0,210,6],[122,12,210,12,"reqLength"],[122,21,210,21],[122,24,210,24,"getRequests"],[122,35,210,35],[122,36,210,36,"length"],[122,42,210,6],[124,0,211,6],[124,13,211,11],[124,17,211,15,"i"],[124,18,211,16],[124,21,211,19],[124,22,211,6],[124,24,211,22,"i"],[124,25,211,23],[124,28,211,26,"reqLength"],[124,37,211,6],[124,39,211,37,"i"],[124,40,211,38],[124,42,211,6],[124,44,211,42],[125,0,212,8],[125,14,212,14,"request"],[125,21,212,21],[125,24,212,24,"getRequests"],[125,35,212,35],[125,36,212,36,"i"],[125,37,212,35],[125,38,212,8],[126,0,213,8],[126,14,213,14,"requestKeys"],[126,25,213,25],[126,28,213,28,"request"],[126,35,213,35],[126,36,213,36,"keys"],[126,40,213,8],[127,0,214,8],[127,14,214,14,"requestResult"],[127,27,214,27],[127,30,214,30,"requestKeys"],[127,41,214,41],[127,42,214,42,"map"],[127,45,214,30],[127,46,214,46],[127,56,214,46,"key"],[127,59,214,49],[128,0,214,49],[128,19,214,53],[128,20,214,54,"key"],[128,23,214,53],[128,25,214,59,"map"],[128,28,214,62],[128,29,214,63,"key"],[128,32,214,62],[128,33,214,53],[128,34,214,49],[129,0,214,49],[129,11,214,30],[129,12,214,8],[130,0,215,8,"request"],[130,10,215,8,"request"],[130,17,215,15],[130,18,215,16,"callback"],[130,26,215,8],[130,30,215,28,"request"],[130,37,215,35],[130,38,215,36,"callback"],[130,46,215,28],[130,47,215,45],[130,51,215,28],[130,53,215,51,"requestResult"],[130,66,215,28],[130,67,215,8],[131,0,216,8,"request"],[131,10,216,8,"request"],[131,17,216,15],[131,18,216,16,"resolve"],[131,25,216,8],[131,29,216,27,"request"],[131,36,216,34],[131,37,216,35,"resolve"],[131,44,216,27],[131,45,216,43,"requestResult"],[131,58,216,27],[131,59,216,8],[132,0,217,7],[133,0,218,5],[133,7,197,4],[134,0,219,3],[134,5,28,21],[135,0,228,2,"multiGet"],[135,4,228,2,"multiGet"],[135,12,228,10],[135,14,228,12],[135,32,229,4,"keys"],[135,36,228,12],[135,38,230,4,"callback"],[135,46,228,12],[135,48,231,13],[136,0,231,13],[138,0,232,4],[138,10,232,8],[138,11,232,9],[138,16,232,14,"_immediate"],[138,26,232,4],[138,28,232,26],[139,0,233,6],[139,13,233,11,"_immediate"],[139,23,233,6],[139,26,233,24,"setImmediate"],[139,38,233,36],[139,39,233,37],[139,51,233,43],[140,0,234,8],[140,10,234,8],[140,15,234,12],[140,16,234,13,"_immediate"],[140,26,234,8],[140,29,234,26],[140,33,234,8],[142,0,235,8],[142,10,235,8],[142,15,235,12],[142,16,235,13,"flushGetRequests"],[142,32,235,8],[143,0,236,7],[143,9,233,36],[143,10,233,6],[144,0,237,5],[146,0,239,4],[146,10,239,10,"getRequest"],[146,20,239,20],[146,23,239,23],[147,0,240,6,"keys"],[147,8,240,6,"keys"],[147,12,240,10],[147,14,240,12,"keys"],[147,18,239,23],[148,0,241,6,"callback"],[148,8,241,6,"callback"],[148,16,241,14],[148,18,241,16,"callback"],[148,26,239,23],[149,0,243,6,"keyIndex"],[149,8,243,6,"keyIndex"],[149,16,243,14],[149,18,243,16],[149,23,243,21,"_getKeys"],[149,31,243,16],[149,32,243,30,"length"],[149,38,239,23],[150,0,244,6,"resolve"],[150,8,244,6,"resolve"],[150,15,244,13],[150,17,244,15],[150,21,239,23],[151,0,245,6,"reject"],[151,8,245,6,"reject"],[151,14,245,12],[151,16,245,14],[152,0,239,23],[152,7,239,4],[153,0,248,4],[153,10,248,10,"promiseResult"],[153,23,248,23],[153,26,248,26],[153,30,248,30,"Promise"],[153,37,248,26],[153,38,248,38],[153,48,248,39,"resolve"],[153,55,248,38],[153,57,248,48,"reject"],[153,63,248,38],[153,65,248,59],[154,0,249,6,"getRequest"],[154,8,249,6,"getRequest"],[154,18,249,16],[154,19,249,17,"resolve"],[154,26,249,6],[154,29,249,27,"resolve"],[154,36,249,6],[155,0,250,6,"getRequest"],[155,8,250,6,"getRequest"],[155,18,250,16],[155,19,250,17,"reject"],[155,25,250,6],[155,28,250,26,"reject"],[155,34,250,6],[156,0,251,5],[156,7,248,26],[156,8,248,4],[158,0,253,4],[158,11,253,9,"_getRequests"],[158,23,253,4],[158,24,253,22,"push"],[158,28,253,4],[158,29,253,27,"getRequest"],[158,39,253,4],[160,0,255,4,"keys"],[160,6,255,4,"keys"],[160,10,255,8],[160,11,255,9,"forEach"],[160,18,255,4],[160,19,255,17],[160,29,255,17,"key"],[160,32,255,20],[160,34,255,24],[161,0,256,6],[161,12,256,10],[161,17,256,14],[161,18,256,15,"_getKeys"],[161,26,256,10],[161,27,256,24,"indexOf"],[161,34,256,10],[161,35,256,32,"key"],[161,38,256,10],[161,44,256,41],[161,45,256,42],[161,46,256,6],[161,48,256,45],[162,0,257,8],[162,10,257,8],[162,15,257,12],[162,16,257,13,"_getKeys"],[162,24,257,8],[162,25,257,22,"push"],[162,29,257,8],[162,30,257,27,"key"],[162,33,257,8],[163,0,258,7],[164,0,259,5],[164,7,255,4],[165,0,261,4],[165,13,261,11,"promiseResult"],[165,26,261,4],[166,0,262,3],[166,5,28,21],[167,0,270,2,"multiSet"],[167,4,270,2,"multiSet"],[167,12,270,10],[167,14,270,12],[167,32,271,4,"keyValuePairs"],[167,45,270,12],[167,47,272,4,"callback"],[167,55,270,12],[167,57,273,13],[168,0,274,4],[168,30,274,14,"RCTAsyncStorage"],[168,45,274,4],[168,47,274,31],[168,78,274,4],[169,0,275,4],[169,13,275,11],[169,17,275,15,"Promise"],[169,24,275,11],[169,25,275,23],[169,35,275,24,"resolve"],[169,42,275,23],[169,44,275,33,"reject"],[169,50,275,23],[169,52,275,44],[170,0,276,6,"RCTAsyncStorage"],[170,8,276,6,"RCTAsyncStorage"],[170,23,276,21],[170,24,276,22,"multiSet"],[170,32,276,6],[170,33,276,31,"keyValuePairs"],[170,46,276,6],[170,48,276,46],[170,58,276,55,"errors"],[170,64,276,46],[170,66,276,63],[171,0,277,8],[171,14,277,14,"error"],[171,19,277,19],[171,22,277,22,"convertErrors"],[171,35,277,35],[171,36,277,36,"errors"],[171,42,277,35],[171,43,277,8],[172,0,278,8,"callback"],[172,10,278,8,"callback"],[172,18,278,16],[172,22,278,20,"callback"],[172,30,278,28],[172,31,278,29,"error"],[172,36,278,28],[172,37,278,8],[174,0,279,8],[174,14,279,12,"error"],[174,19,279,8],[174,21,279,19],[175,0,280,10,"reject"],[175,12,280,10,"reject"],[175,18,280,16],[175,19,280,17,"error"],[175,24,280,16],[175,25,280,10],[176,0,281,9],[176,11,279,8],[176,17,281,15],[177,0,282,10,"resolve"],[177,12,282,10,"resolve"],[177,19,282,17],[177,20,282,18],[177,24,282,17],[177,25,282,10],[178,0,283,9],[179,0,284,7],[179,9,276,6],[180,0,285,5],[180,7,275,11],[180,8,275,4],[181,0,286,3],[181,5,28,21],[182,0,293,2,"multiRemove"],[182,4,293,2,"multiRemove"],[182,15,293,13],[182,17,293,15],[182,38,294,4,"keys"],[182,42,293,15],[182,44,295,4,"callback"],[182,52,293,15],[182,54,296,13],[183,0,297,4],[183,30,297,14,"RCTAsyncStorage"],[183,45,297,4],[183,47,297,31],[183,78,297,4],[184,0,298,4],[184,13,298,11],[184,17,298,15,"Promise"],[184,24,298,11],[184,25,298,23],[184,35,298,24,"resolve"],[184,42,298,23],[184,44,298,33,"reject"],[184,50,298,23],[184,52,298,44],[185,0,299,6,"RCTAsyncStorage"],[185,8,299,6,"RCTAsyncStorage"],[185,23,299,21],[185,24,299,22,"multiRemove"],[185,35,299,6],[185,36,299,34,"keys"],[185,40,299,6],[185,42,299,40],[185,52,299,49,"errors"],[185,58,299,40],[185,60,299,57],[186,0,300,8],[186,14,300,14,"error"],[186,19,300,19],[186,22,300,22,"convertErrors"],[186,35,300,35],[186,36,300,36,"errors"],[186,42,300,35],[186,43,300,8],[187,0,301,8,"callback"],[187,10,301,8,"callback"],[187,18,301,16],[187,22,301,20,"callback"],[187,30,301,28],[187,31,301,29,"error"],[187,36,301,28],[187,37,301,8],[189,0,302,8],[189,14,302,12,"error"],[189,19,302,8],[189,21,302,19],[190,0,303,10,"reject"],[190,12,303,10,"reject"],[190,18,303,16],[190,19,303,17,"error"],[190,24,303,16],[190,25,303,10],[191,0,304,9],[191,11,302,8],[191,17,304,15],[192,0,305,10,"resolve"],[192,12,305,10,"resolve"],[192,19,305,17],[192,20,305,18],[192,24,305,17],[192,25,305,10],[193,0,306,9],[194,0,307,7],[194,9,299,6],[195,0,308,5],[195,7,298,11],[195,8,298,4],[196,0,309,3],[196,5,28,21],[197,0,319,2,"multiMerge"],[197,4,319,2,"multiMerge"],[197,14,319,12],[197,16,319,14],[197,36,320,4,"keyValuePairs"],[197,49,319,14],[197,51,321,4,"callback"],[197,59,319,14],[197,61,322,13],[198,0,323,4],[198,30,323,14,"RCTAsyncStorage"],[198,45,323,4],[198,47,323,31],[198,78,323,4],[199,0,324,4],[199,13,324,11],[199,17,324,15,"Promise"],[199,24,324,11],[199,25,324,23],[199,35,324,24,"resolve"],[199,42,324,23],[199,44,324,33,"reject"],[199,50,324,23],[199,52,324,44],[200,0,325,6,"RCTAsyncStorage"],[200,8,325,6,"RCTAsyncStorage"],[200,23,325,21],[200,24,325,22,"multiMerge"],[200,34,325,6],[200,35,325,33,"keyValuePairs"],[200,48,325,6],[200,50,325,48],[200,60,325,57,"errors"],[200,66,325,48],[200,68,325,65],[201,0,326,8],[201,14,326,14,"error"],[201,19,326,19],[201,22,326,22,"convertErrors"],[201,35,326,35],[201,36,326,36,"errors"],[201,42,326,35],[201,43,326,8],[202,0,327,8,"callback"],[202,10,327,8,"callback"],[202,18,327,16],[202,22,327,20,"callback"],[202,30,327,28],[202,31,327,29,"error"],[202,36,327,28],[202,37,327,8],[204,0,328,8],[204,14,328,12,"error"],[204,19,328,8],[204,21,328,19],[205,0,329,10,"reject"],[205,12,329,10,"reject"],[205,18,329,16],[205,19,329,17,"error"],[205,24,329,16],[205,25,329,10],[206,0,330,9],[206,11,328,8],[206,17,330,15],[207,0,331,10,"resolve"],[207,12,331,10,"resolve"],[207,19,331,17],[207,20,331,18],[207,24,331,17],[207,25,331,10],[208,0,332,9],[209,0,333,7],[209,9,325,6],[210,0,334,5],[210,7,324,11],[210,8,324,4],[211,0,335,3],[212,0,28,21],[212,3,28,0],[214,0,339,0],[214,6,339,4],[214,7,339,5,"RCTAsyncStorage"],[214,22,339,20],[214,23,339,21,"multiMerge"],[214,33,339,0],[214,35,339,33],[215,0,340,2],[215,11,340,9,"AsyncStorage"],[215,23,340,21],[215,24,340,22,"mergeItem"],[215,33,340,2],[216,0,341,2],[216,11,341,9,"AsyncStorage"],[216,23,341,21],[216,24,341,22,"multiMerge"],[216,34,341,2],[217,0,342,1],[219,0,344,0],[219,11,344,9,"convertErrors"],[219,24,344,0],[219,25,344,23,"errs"],[219,29,344,0],[219,31,344,29],[220,0,345,2],[220,8,345,6],[220,9,345,7,"errs"],[220,13,345,2],[220,15,345,13],[221,0,346,4],[221,13,346,11],[221,17,346,4],[222,0,347,3],[224,0,348,2],[224,11,348,9],[224,12,348,10,"Array"],[224,17,348,15],[224,18,348,16,"isArray"],[224,25,348,10],[224,26,348,24,"errs"],[224,30,348,10],[224,34,348,32,"errs"],[224,38,348,10],[224,41,348,39],[224,42,348,40,"errs"],[224,46,348,39],[224,47,348,9],[224,49,348,47,"map"],[224,52,348,9],[224,53,348,51],[224,63,348,51,"e"],[224,64,348,52],[225,0,348,52],[225,13,348,56,"convertError"],[225,25,348,68],[225,26,348,69,"e"],[225,27,348,68],[225,28,348,52],[226,0,348,52],[226,5,348,9],[226,6,348,2],[227,0,349,1],[229,0,351,0],[229,11,351,9,"convertError"],[229,23,351,0],[229,24,351,22,"error"],[229,29,351,0],[229,31,351,29],[230,0,352,2],[230,8,352,6],[230,9,352,7,"error"],[230,14,352,2],[230,16,352,14],[231,0,353,4],[231,13,353,11],[231,17,353,4],[232,0,354,3],[234,0,355,2],[234,8,355,8,"out"],[234,11,355,11],[234,14,355,14],[234,18,355,18,"Error"],[234,23,355,14],[234,24,355,24,"error"],[234,29,355,29],[234,30,355,30,"message"],[234,37,355,14],[234,38,355,2],[235,0,356,2,"out"],[235,4,356,2,"out"],[235,7,356,5],[235,8,356,6,"key"],[235,11,356,2],[235,14,356,12,"error"],[235,19,356,17],[235,20,356,18,"key"],[235,23,356,2],[236,0,357,2],[236,11,357,9,"out"],[236,14,357,2],[237,0,358,1],[239,0,360,0,"module"],[239,2,360,0,"module"],[239,8,360,6],[239,9,360,7,"exports"],[239,16,360,0],[239,19,360,17,"AsyncStorage"],[239,31,360,0]],"functionMap":{"names":["<global>","getItem","Promise$argument_0","RCTAsyncStorage.multiGet$argument_1","setItem","RCTAsyncStorage.multiSet$argument_1","removeItem","RCTAsyncStorage.multiRemove$argument_1","mergeItem","RCTAsyncStorage.multiMerge$argument_1","clear","RCTAsyncStorage.clear$argument_0","getAllKeys","RCTAsyncStorage.getAllKeys$argument_0","flushGetRequests","result.forEach$argument_0","requestKeys.map$argument_0","multiGet","setImmediate$argument_0","keys.forEach$argument_0","multiSet","multiRemove","multiMerge","convertErrors","map$argument_0","convertError"],"mappings":"AAA;WCqC;uBCK;sCCC;ODU;KDC;GDC;WIO;uBFM;+CGC;OHQ;KEC;GJC;cMO;uBJK;yCKC;OLQ;KIC;GNC;aQU;uBNM;iDOC;OPQ;KMC;GRC;SUS;uBRE;4BSC;OTO;KQC;GVC;cYO;uBVI;iCWC;OXO;KUC;GZC;oBciB;sCXQ;uBYS;SZG;8CaK,sBb;KWI;GdC;YiBS;qCCK;ODG;sCfY;KeG;iBEI;KFI;GjBG;YoBQ;uBlBK;8CGC;OHQ;KkBC;GpBC;eqBO;uBnBK;wCKC;OLQ;KmBC;GrBC;csBU;uBpBK;gDOC;OPQ;KoBC;GtBC;AuBS;mDCI,oBD;CvBC;AyBE;CzBO"}},"type":"js/module"}]}