{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/interopRequireWildcard","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/extends","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/defineProperty","data":{"isAsync":false}},{"name":"@babel/runtime/regenerator","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/inherits","data":{"isAsync":false}},{"name":"lodash/isEqual","data":{"isAsync":false}},{"name":"lodash/pick","data":{"isAsync":false}},{"name":"react","data":{"isAsync":false}},{"name":"prop-types","data":{"isAsync":false}},{"name":"./react-native","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/interopRequireWildcard\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = createToolbarAndroidComponent;\n\n  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/extends\"));\n\n  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/defineProperty\"));\n\n  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/regenerator\"));\n\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"@babel/runtime/helpers/createClass\"));\n\n  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n\n  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8], \"@babel/runtime/helpers/getPrototypeOf\"));\n\n  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9], \"@babel/runtime/helpers/inherits\"));\n\n  var _isEqual = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10], \"lodash/isEqual\"));\n\n  var _pick = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11], \"lodash/pick\"));\n\n  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[12], \"react\"));\n\n  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13], \"prop-types\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[14], \"./react-native\");\n\n  var _jsxFileName = \"/home/anzalladd/Documents/crudReactNative/node_modules/react-native-vector-icons/lib/toolbar-android.js\";\n\n  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n  var ICON_PROP_NAMES = ['iconSize', 'iconColor', 'titleColor'];\n  var LOGO_ICON_PROP_NAMES = [].concat(ICON_PROP_NAMES, ['logoName']);\n  var NAV_ICON_PROP_NAMES = [].concat(ICON_PROP_NAMES, ['navIconName']);\n  var OVERFLOW_ICON_PROP_NAMES = [].concat(ICON_PROP_NAMES, ['overflowIconName']);\n  var ACTIONS_PROP_NAMES = [].concat(ICON_PROP_NAMES, ['actions']);\n\n  var arePropsEqual = function arePropsEqual(keys) {\n    return function (prevProps, nextProps) {\n      return (0, _isEqual.default)((0, _pick.default)(prevProps, keys), (0, _pick.default)(nextProps, keys));\n    };\n  };\n\n  var areLogoIconPropsEqual = arePropsEqual(LOGO_ICON_PROP_NAMES);\n  var areNavIconPropsEqual = arePropsEqual(NAV_ICON_PROP_NAMES);\n  var areOverflowIconPropsEqual = arePropsEqual(OVERFLOW_ICON_PROP_NAMES);\n  var areActionPropsEqual = arePropsEqual(ACTIONS_PROP_NAMES);\n\n  function createToolbarAndroidComponent(IconNamePropType, getImageSource) {\n    var _class, _temp;\n\n    return _temp = _class = function (_PureComponent) {\n      (0, _inherits2.default)(IconToolbarAndroid, _PureComponent);\n\n      function IconToolbarAndroid() {\n        var _getPrototypeOf2;\n\n        var _this;\n\n        (0, _classCallCheck2.default)(this, IconToolbarAndroid);\n\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(IconToolbarAndroid)).call.apply(_getPrototypeOf2, [this].concat(args)));\n        _this.state = {\n          logo: undefined,\n          navIcon: undefined,\n          overflowIcon: undefined,\n          actions: undefined\n        };\n        return _this;\n      }\n\n      (0, _createClass2.default)(IconToolbarAndroid, [{\n        key: \"componentDidMount\",\n        value: function componentDidMount() {\n          this.updateLogoIconSource();\n          this.updateNavIconSource();\n          this.updateOverflowIconSource();\n          this.updateActionIconSources();\n        }\n      }, {\n        key: \"componentDidUpdate\",\n        value: function componentDidUpdate(prevProps) {\n          if (!areLogoIconPropsEqual(prevProps, this.props)) {\n            this.updateLogoIconSource();\n          }\n\n          if (!areNavIconPropsEqual(prevProps, this.props)) {\n            this.updateNavIconSource();\n          }\n\n          if (!areOverflowIconPropsEqual(prevProps, this.props)) {\n            this.updateOverflowIconSource();\n          }\n\n          if (!areActionPropsEqual(prevProps, this.props)) {\n            this.updateActionIconSources();\n          }\n        }\n      }, {\n        key: \"updateLogoIconSource\",\n        value: function updateLogoIconSource() {\n          var _this$props, logoName, iconSize, iconColor, titleColor, logo;\n\n          return _regenerator.default.async(function updateLogoIconSource$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  _this$props = this.props, logoName = _this$props.logoName, iconSize = _this$props.iconSize, iconColor = _this$props.iconColor, titleColor = _this$props.titleColor;\n\n                  if (!logoName) {\n                    _context.next = 8;\n                    break;\n                  }\n\n                  _context.next = 4;\n                  return _regenerator.default.awrap(getImageSource(logoName, iconSize, iconColor || titleColor));\n\n                case 4:\n                  logo = _context.sent;\n                  this.setState({\n                    logo: logo\n                  });\n                  _context.next = 9;\n                  break;\n\n                case 8:\n                  if (this.state.logo) {\n                    this.setState({\n                      logo: undefined\n                    });\n                  }\n\n                case 9:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, null, this);\n        }\n      }, {\n        key: \"updateNavIconSource\",\n        value: function updateNavIconSource() {\n          var _this$props2, navIconName, iconSize, iconColor, titleColor, navIcon;\n\n          return _regenerator.default.async(function updateNavIconSource$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  _this$props2 = this.props, navIconName = _this$props2.navIconName, iconSize = _this$props2.iconSize, iconColor = _this$props2.iconColor, titleColor = _this$props2.titleColor;\n\n                  if (!navIconName) {\n                    _context2.next = 8;\n                    break;\n                  }\n\n                  _context2.next = 4;\n                  return _regenerator.default.awrap(getImageSource(navIconName, iconSize, iconColor || titleColor));\n\n                case 4:\n                  navIcon = _context2.sent;\n                  this.setState({\n                    navIcon: navIcon\n                  });\n                  _context2.next = 9;\n                  break;\n\n                case 8:\n                  if (this.state.navIcon) {\n                    this.setState({\n                      navIcon: undefined\n                    });\n                  }\n\n                case 9:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, null, this);\n        }\n      }, {\n        key: \"updateOverflowIconSource\",\n        value: function updateOverflowIconSource() {\n          var _this$props3, overflowIconName, iconSize, iconColor, titleColor, overflowIcon;\n\n          return _regenerator.default.async(function updateOverflowIconSource$(_context3) {\n            while (1) {\n              switch (_context3.prev = _context3.next) {\n                case 0:\n                  _this$props3 = this.props, overflowIconName = _this$props3.overflowIconName, iconSize = _this$props3.iconSize, iconColor = _this$props3.iconColor, titleColor = _this$props3.titleColor;\n\n                  if (!overflowIconName) {\n                    _context3.next = 8;\n                    break;\n                  }\n\n                  _context3.next = 4;\n                  return _regenerator.default.awrap(getImageSource(overflowIconName, iconSize, iconColor || titleColor));\n\n                case 4:\n                  overflowIcon = _context3.sent;\n                  this.setState({\n                    overflowIcon: overflowIcon\n                  });\n                  _context3.next = 9;\n                  break;\n\n                case 8:\n                  if (this.state.overflowIcon) {\n                    this.setState({\n                      overflowIcon: undefined\n                    });\n                  }\n\n                case 9:\n                case \"end\":\n                  return _context3.stop();\n              }\n            }\n          }, null, this);\n        }\n      }, {\n        key: \"updateActionIconSources\",\n        value: function updateActionIconSources() {\n          var _this$props4, actions, iconSize, iconColor, titleColor, updatedActions;\n\n          return _regenerator.default.async(function updateActionIconSources$(_context4) {\n            while (1) {\n              switch (_context4.prev = _context4.next) {\n                case 0:\n                  _this$props4 = this.props, actions = _this$props4.actions, iconSize = _this$props4.iconSize, iconColor = _this$props4.iconColor, titleColor = _this$props4.titleColor;\n                  _context4.next = 3;\n                  return _regenerator.default.awrap(Promise.all((actions || []).map(function (action) {\n                    if (action.iconName) {\n                      return getImageSource(action.iconName, action.iconSize || iconSize, action.iconColor || iconColor || titleColor).then(function (icon) {\n                        return _objectSpread({}, action, {\n                          icon: icon\n                        });\n                      });\n                    }\n\n                    return Promise.resolve(action);\n                  })));\n\n                case 3:\n                  updatedActions = _context4.sent;\n                  this.setState({\n                    actions: updatedActions\n                  });\n\n                case 5:\n                case \"end\":\n                  return _context4.stop();\n              }\n            }\n          }, null, this);\n        }\n      }, {\n        key: \"render\",\n        value: function render() {\n          return _react.default.createElement(_reactNative.ToolbarAndroid, (0, _extends2.default)({}, this.props, this.state, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 142\n            }\n          }));\n        }\n      }]);\n      return IconToolbarAndroid;\n    }(_react.PureComponent), _class.propTypes = {\n      logoName: IconNamePropType,\n      navIconName: IconNamePropType,\n      overflowIconName: IconNamePropType,\n      actions: _propTypes.default.arrayOf(_propTypes.default.shape({\n        title: _propTypes.default.string.isRequired,\n        iconName: IconNamePropType,\n        iconSize: _propTypes.default.number,\n        iconColor: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),\n        show: _propTypes.default.oneOf(['always', 'ifRoom', 'never']),\n        showWithText: _propTypes.default.bool\n      })),\n      iconSize: _propTypes.default.number,\n      iconColor: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),\n      titleColor: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number])\n    }, _class.defaultProps = {\n      iconSize: 24\n    }, _temp;\n  }\n});","lineCount":304,"map":[[27,0,2,0],[29,0,3,0],[31,0,4,0],[33,0,5,0],[35,0,6,0],[43,0,8,0],[43,6,8,6,"ICON_PROP_NAMES"],[43,21,8,21],[43,24,8,24],[43,25,8,25],[43,35,8,24],[43,37,8,37],[43,48,8,24],[43,50,8,50],[43,62,8,24],[43,63,8,0],[44,0,9,0],[44,6,9,6,"LOGO_ICON_PROP_NAMES"],[44,26,9,26],[44,39,9,33,"ICON_PROP_NAMES"],[44,54,9,26],[44,57,9,50],[44,67,9,26],[44,69,9,0],[45,0,10,0],[45,6,10,6,"NAV_ICON_PROP_NAMES"],[45,25,10,25],[45,38,10,32,"ICON_PROP_NAMES"],[45,53,10,25],[45,56,10,49],[45,69,10,25],[45,71,10,0],[46,0,11,0],[46,6,11,6,"OVERFLOW_ICON_PROP_NAMES"],[46,30,11,30],[46,43,11,37,"ICON_PROP_NAMES"],[46,58,11,30],[46,61,11,54],[46,79,11,30],[46,81,11,0],[47,0,12,0],[47,6,12,6,"ACTIONS_PROP_NAMES"],[47,24,12,24],[47,37,12,31,"ICON_PROP_NAMES"],[47,52,12,24],[47,55,12,48],[47,64,12,24],[47,66,12,0],[49,0,14,0],[49,6,14,6,"arePropsEqual"],[49,19,14,19],[49,22,14,22],[49,31,14,6,"arePropsEqual"],[49,44,14,22],[49,45,14,22,"keys"],[49,49,14,26],[50,0,14,26],[50,11,14,30],[50,21,14,31,"prevProps"],[50,30,14,30],[50,32,14,42,"nextProps"],[50,41,14,30],[51,0,14,30],[51,13,15,2],[51,35,15,10],[51,54,15,15,"prevProps"],[51,63,15,10],[51,65,15,26,"keys"],[51,69,15,10],[51,70,15,2],[51,72,15,33],[51,91,15,38,"nextProps"],[51,100,15,33],[51,102,15,49,"keys"],[51,106,15,33],[51,107,15,2],[51,108,14,30],[52,0,14,30],[52,5,14,26],[53,0,14,26],[53,3,14,0],[55,0,17,0],[55,6,17,6,"areLogoIconPropsEqual"],[55,27,17,27],[55,30,17,30,"arePropsEqual"],[55,43,17,43],[55,44,17,44,"LOGO_ICON_PROP_NAMES"],[55,64,17,43],[55,65,17,0],[56,0,18,0],[56,6,18,6,"areNavIconPropsEqual"],[56,26,18,26],[56,29,18,29,"arePropsEqual"],[56,42,18,42],[56,43,18,43,"NAV_ICON_PROP_NAMES"],[56,62,18,42],[56,63,18,0],[57,0,19,0],[57,6,19,6,"areOverflowIconPropsEqual"],[57,31,19,31],[57,34,19,34,"arePropsEqual"],[57,47,19,47],[57,48,19,48,"OVERFLOW_ICON_PROP_NAMES"],[57,72,19,47],[57,73,19,0],[58,0,20,0],[58,6,20,6,"areActionPropsEqual"],[58,25,20,25],[58,28,20,28,"arePropsEqual"],[58,41,20,41],[58,42,20,42,"ACTIONS_PROP_NAMES"],[58,60,20,41],[58,61,20,0],[60,0,22,15],[60,11,22,24,"createToolbarAndroidComponent"],[60,40,22,15],[60,41,23,2,"IconNamePropType"],[60,57,22,15],[60,59,24,2,"getImageSource"],[60,73,22,15],[60,75,25,2],[61,0,25,2],[63,0,26,2],[64,0,26,2],[66,0,26,2],[67,0,26,2],[69,0,26,2],[71,0,26,2],[73,0,26,2],[74,0,26,2],[75,0,26,2],[77,0,26,2],[78,0,26,2],[78,14,50,4,"state"],[78,19,26,2],[78,22,50,12],[79,0,51,6,"logo"],[79,10,51,6,"logo"],[79,14,51,10],[79,16,51,12,"undefined"],[79,25,50,12],[80,0,52,6,"navIcon"],[80,10,52,6,"navIcon"],[80,17,52,13],[80,19,52,15,"undefined"],[80,28,50,12],[81,0,53,6,"overflowIcon"],[81,10,53,6,"overflowIcon"],[81,22,53,18],[81,24,53,20,"undefined"],[81,33,50,12],[82,0,54,6,"actions"],[82,10,54,6,"actions"],[82,17,54,13],[82,19,54,15,"undefined"],[83,0,50,12],[83,9,26,2],[84,0,26,2],[85,0,26,2],[87,0,26,2],[88,0,26,2],[89,0,26,2],[89,44,57,24],[90,0,58,6],[90,15,58,11,"updateLogoIconSource"],[90,35,58,6],[91,0,59,6],[91,15,59,11,"updateNavIconSource"],[91,34,59,6],[92,0,60,6],[92,15,60,11,"updateOverflowIconSource"],[92,39,60,6],[93,0,61,6],[93,15,61,11,"updateActionIconSources"],[93,38,61,6],[94,0,62,5],[95,0,26,2],[96,0,26,2],[97,0,26,2],[97,43,64,23,"prevProps"],[97,52,26,2],[97,54,64,34],[98,0,65,6],[98,14,65,10],[98,15,65,11,"areLogoIconPropsEqual"],[98,36,65,32],[98,37,65,33,"prevProps"],[98,46,65,32],[98,48,65,44],[98,53,65,49,"props"],[98,58,65,32],[98,59,65,6],[98,61,65,57],[99,0,66,8],[99,17,66,13,"updateLogoIconSource"],[99,37,66,8],[100,0,67,7],[102,0,68,6],[102,14,68,10],[102,15,68,11,"areNavIconPropsEqual"],[102,35,68,31],[102,36,68,32,"prevProps"],[102,45,68,31],[102,47,68,43],[102,52,68,48,"props"],[102,57,68,31],[102,58,68,6],[102,60,68,56],[103,0,69,8],[103,17,69,13,"updateNavIconSource"],[103,36,69,8],[104,0,70,7],[106,0,71,6],[106,14,71,10],[106,15,71,11,"areOverflowIconPropsEqual"],[106,40,71,36],[106,41,71,37,"prevProps"],[106,50,71,36],[106,52,71,48],[106,57,71,53,"props"],[106,62,71,36],[106,63,71,6],[106,65,71,61],[107,0,72,8],[107,17,72,13,"updateOverflowIconSource"],[107,41,72,8],[108,0,73,7],[110,0,74,6],[110,14,74,10],[110,15,74,11,"areActionPropsEqual"],[110,34,74,30],[110,35,74,31,"prevProps"],[110,44,74,30],[110,46,74,42],[110,51,74,47,"props"],[110,56,74,30],[110,57,74,6],[110,59,74,55],[111,0,75,8],[111,17,75,13,"updateActionIconSources"],[111,40,75,8],[112,0,76,7],[113,0,77,5],[114,0,26,2],[115,0,26,2],[116,0,26,2],[117,0,26,2],[119,0,26,2],[120,0,26,2],[121,0,26,2],[122,0,26,2],[123,0,26,2],[123,32,80,60],[123,37,80,65,"props"],[123,42,26,2],[123,44,80,14,"logoName"],[123,52,26,2],[123,67,80,14,"logoName"],[123,75,26,2],[123,77,80,24,"iconSize"],[123,85,26,2],[123,100,80,24,"iconSize"],[123,108,26,2],[123,110,80,34,"iconColor"],[123,119,26,2],[123,134,80,34,"iconColor"],[123,143,26,2],[123,145,80,45,"titleColor"],[123,155,26,2],[123,170,80,45,"titleColor"],[123,180,26,2],[125,0,26,2],[125,23,81,10,"logoName"],[125,31,26,2],[126,0,26,2],[127,0,26,2],[128,0,26,2],[130,0,26,2],[131,0,26,2],[131,52,82,27,"getImageSource"],[131,66,82,41],[131,67,83,10,"logoName"],[131,75,82,41],[131,77,84,10,"iconSize"],[131,85,82,41],[131,87,85,10,"iconColor"],[131,96,85,19],[131,100,85,23,"titleColor"],[131,110,82,41],[131,111,26,2],[133,0,26,2],[134,0,82,14,"logo"],[134,18,82,14,"logo"],[134,22,26,2],[135,0,87,8],[135,23,87,13,"setState"],[135,31,87,8],[135,32,87,22],[136,0,87,24,"logo"],[136,20,87,24,"logo"],[136,24,87,28],[136,26,87,24,"logo"],[137,0,87,22],[137,19,87,8],[138,0,26,2],[139,0,26,2],[141,0,26,2],[142,0,89,13],[142,22,89,17],[142,27,89,22,"state"],[142,32,89,17],[142,33,89,28,"logo"],[142,37,89,13],[142,39,89,34],[143,0,90,8],[143,25,90,13,"setState"],[143,33,90,8],[143,34,90,22],[144,0,90,24,"logo"],[144,22,90,24,"logo"],[144,26,90,28],[144,28,90,30,"undefined"],[145,0,90,22],[145,21,90,8],[146,0,91,7],[148,0,26,2],[149,0,26,2],[150,0,26,2],[151,0,26,2],[152,0,26,2],[153,0,26,2],[154,0,26,2],[155,0,26,2],[156,0,26,2],[157,0,26,2],[158,0,26,2],[160,0,26,2],[161,0,26,2],[162,0,26,2],[163,0,26,2],[164,0,26,2],[164,33,95,63],[164,38,95,68,"props"],[164,43,26,2],[164,45,95,14,"navIconName"],[164,56,26,2],[164,72,95,14,"navIconName"],[164,83,26,2],[164,85,95,27,"iconSize"],[164,93,26,2],[164,109,95,27,"iconSize"],[164,117,26,2],[164,119,95,37,"iconColor"],[164,128,26,2],[164,144,95,37,"iconColor"],[164,153,26,2],[164,155,95,48,"titleColor"],[164,165,26,2],[164,181,95,48,"titleColor"],[164,191,26,2],[166,0,26,2],[166,23,96,10,"navIconName"],[166,34,26,2],[167,0,26,2],[168,0,26,2],[169,0,26,2],[171,0,26,2],[172,0,26,2],[172,52,97,30,"getImageSource"],[172,66,97,44],[172,67,98,10,"navIconName"],[172,78,97,44],[172,80,99,10,"iconSize"],[172,88,97,44],[172,90,100,10,"iconColor"],[172,99,100,19],[172,103,100,23,"titleColor"],[172,113,97,44],[172,114,26,2],[174,0,26,2],[175,0,97,14,"navIcon"],[175,18,97,14,"navIcon"],[175,25,26,2],[176,0,102,8],[176,23,102,13,"setState"],[176,31,102,8],[176,32,102,22],[177,0,102,24,"navIcon"],[177,20,102,24,"navIcon"],[177,27,102,31],[177,29,102,24,"navIcon"],[178,0,102,22],[178,19,102,8],[179,0,26,2],[180,0,26,2],[182,0,26,2],[183,0,104,13],[183,22,104,17],[183,27,104,22,"state"],[183,32,104,17],[183,33,104,28,"navIcon"],[183,40,104,13],[183,42,104,37],[184,0,105,8],[184,25,105,13,"setState"],[184,33,105,8],[184,34,105,22],[185,0,105,24,"navIcon"],[185,22,105,24,"navIcon"],[185,29,105,31],[185,31,105,33,"undefined"],[186,0,105,22],[186,21,105,8],[187,0,106,7],[189,0,26,2],[190,0,26,2],[191,0,26,2],[192,0,26,2],[193,0,26,2],[194,0,26,2],[195,0,26,2],[196,0,26,2],[197,0,26,2],[198,0,26,2],[199,0,26,2],[201,0,26,2],[202,0,26,2],[203,0,26,2],[204,0,26,2],[205,0,26,2],[205,33,110,68],[205,38,110,73,"props"],[205,43,26,2],[205,45,110,14,"overflowIconName"],[205,61,26,2],[205,77,110,14,"overflowIconName"],[205,93,26,2],[205,95,110,32,"iconSize"],[205,103,26,2],[205,119,110,32,"iconSize"],[205,127,26,2],[205,129,110,42,"iconColor"],[205,138,26,2],[205,154,110,42,"iconColor"],[205,163,26,2],[205,165,110,53,"titleColor"],[205,175,26,2],[205,191,110,53,"titleColor"],[205,201,26,2],[207,0,26,2],[207,23,111,10,"overflowIconName"],[207,39,26,2],[208,0,26,2],[209,0,26,2],[210,0,26,2],[212,0,26,2],[213,0,26,2],[213,52,112,35,"getImageSource"],[213,66,112,49],[213,67,113,10,"overflowIconName"],[213,83,112,49],[213,85,114,10,"iconSize"],[213,93,112,49],[213,95,115,10,"iconColor"],[213,104,115,19],[213,108,115,23,"titleColor"],[213,118,112,49],[213,119,26,2],[215,0,26,2],[216,0,112,14,"overflowIcon"],[216,18,112,14,"overflowIcon"],[216,30,26,2],[217,0,117,8],[217,23,117,13,"setState"],[217,31,117,8],[217,32,117,22],[218,0,117,24,"overflowIcon"],[218,20,117,24,"overflowIcon"],[218,32,117,36],[218,34,117,24,"overflowIcon"],[219,0,117,22],[219,19,117,8],[220,0,26,2],[221,0,26,2],[223,0,26,2],[224,0,119,13],[224,22,119,17],[224,27,119,22,"state"],[224,32,119,17],[224,33,119,28,"overflowIcon"],[224,45,119,13],[224,47,119,42],[225,0,120,8],[225,25,120,13,"setState"],[225,33,120,8],[225,34,120,22],[226,0,120,24,"overflowIcon"],[226,22,120,24,"overflowIcon"],[226,34,120,36],[226,36,120,38,"undefined"],[227,0,120,22],[227,21,120,8],[228,0,121,7],[230,0,26,2],[231,0,26,2],[232,0,26,2],[233,0,26,2],[234,0,26,2],[235,0,26,2],[236,0,26,2],[237,0,26,2],[238,0,26,2],[239,0,26,2],[240,0,26,2],[242,0,26,2],[243,0,26,2],[244,0,26,2],[245,0,26,2],[246,0,26,2],[246,33,125,59],[246,38,125,64,"props"],[246,43,26,2],[246,45,125,14,"actions"],[246,52,26,2],[246,68,125,14,"actions"],[246,75,26,2],[246,77,125,23,"iconSize"],[246,85,26,2],[246,101,125,23,"iconSize"],[246,109,26,2],[246,111,125,33,"iconColor"],[246,120,26,2],[246,136,125,33,"iconColor"],[246,145,26,2],[246,147,125,44,"titleColor"],[246,157,26,2],[246,173,125,44,"titleColor"],[246,183,26,2],[247,0,26,2],[248,0,26,2],[248,52,126,35,"Promise"],[248,59,126,42],[248,60,126,43,"all"],[248,63,126,35],[248,64,127,8],[248,65,127,9,"actions"],[248,72,127,16],[248,76,127,20],[248,78,127,8],[248,80,127,24,"map"],[248,83,127,8],[248,84,127,28],[248,94,127,28,"action"],[248,100,127,34],[248,102,127,38],[249,0,128,10],[249,24,128,14,"action"],[249,30,128,20],[249,31,128,21,"iconName"],[249,39,128,10],[249,41,128,31],[250,0,129,12],[250,29,129,19,"getImageSource"],[250,43,129,33],[250,44,130,14,"action"],[250,50,130,20],[250,51,130,21,"iconName"],[250,59,129,33],[250,61,131,14,"action"],[250,67,131,20],[250,68,131,21,"iconSize"],[250,76,131,14],[250,80,131,33,"iconSize"],[250,88,129,33],[250,90,132,14,"action"],[250,96,132,20],[250,97,132,21,"iconColor"],[250,106,132,14],[250,110,132,34,"iconColor"],[250,119,132,14],[250,123,132,47,"titleColor"],[250,133,129,33],[250,134,129,19],[250,135,133,14,"then"],[250,139,129,19],[250,140,133,19],[250,150,133,19,"icon"],[250,154,133,23],[251,0,133,23],[251,49,133,33,"action"],[251,55,133,23],[252,0,133,41,"icon"],[252,26,133,41,"icon"],[252,30,133,45],[252,32,133,41,"icon"],[253,0,133,23],[254,0,133,23],[254,23,129,19],[254,24,129,12],[255,0,134,11],[257,0,135,10],[257,27,135,17,"Promise"],[257,34,135,24],[257,35,135,25,"resolve"],[257,42,135,17],[257,43,135,33,"action"],[257,49,135,17],[257,50,135,10],[258,0,136,9],[258,19,127,8],[258,20,126,35],[258,21,26,2],[260,0,26,2],[261,0,126,12,"updatedActions"],[261,18,126,12,"updatedActions"],[261,32,26,2],[262,0,138,6],[262,23,138,11,"setState"],[262,31,138,6],[262,32,138,20],[263,0,138,22,"actions"],[263,20,138,22,"actions"],[263,27,138,29],[263,29,138,31,"updatedActions"],[264,0,138,20],[264,19,138,6],[266,0,26,2],[267,0,26,2],[268,0,26,2],[269,0,26,2],[270,0,26,2],[271,0,26,2],[272,0,26,2],[273,0,26,2],[274,0,26,2],[275,0,26,2],[275,33,141,13],[276,0,142,6],[276,17,142,13],[276,46,142,14],[276,73,142,13],[276,102,142,33],[276,107,142,38,"props"],[276,112,142,13],[276,114,142,49],[276,119,142,54,"state"],[276,124,142,13],[277,0,142,13],[278,0,142,13],[279,0,142,13],[280,0,142,13],[281,0,142,13],[281,13,142,6],[282,0,143,5],[283,0,26,2],[284,0,26,2],[285,0,26,2],[285,6,26,42,"PureComponent"],[285,26,26,2],[285,36,27,11,"propTypes"],[285,45,26,2],[285,48,27,23],[286,0,28,6,"logoName"],[286,6,28,6,"logoName"],[286,14,28,14],[286,16,28,16,"IconNamePropType"],[286,32,27,23],[287,0,29,6,"navIconName"],[287,6,29,6,"navIconName"],[287,17,29,17],[287,19,29,19,"IconNamePropType"],[287,35,27,23],[288,0,30,6,"overflowIconName"],[288,6,30,6,"overflowIconName"],[288,22,30,22],[288,24,30,24,"IconNamePropType"],[288,40,27,23],[289,0,31,6,"actions"],[289,6,31,6,"actions"],[289,13,31,13],[289,15,31,15,"PropTypes"],[289,34,31,25,"arrayOf"],[289,41,31,15],[289,42,32,8,"PropTypes"],[289,61,32,18,"shape"],[289,66,32,8],[289,67,32,24],[290,0,33,10,"title"],[290,8,33,10,"title"],[290,13,33,15],[290,15,33,17,"PropTypes"],[290,34,33,27,"string"],[290,40,33,17],[290,41,33,34,"isRequired"],[290,51,32,24],[291,0,34,10,"iconName"],[291,8,34,10,"iconName"],[291,16,34,18],[291,18,34,20,"IconNamePropType"],[291,34,32,24],[292,0,35,10,"iconSize"],[292,8,35,10,"iconSize"],[292,16,35,18],[292,18,35,20,"PropTypes"],[292,37,35,30,"number"],[292,43,32,24],[293,0,36,10,"iconColor"],[293,8,36,10,"iconColor"],[293,17,36,19],[293,19,36,21,"PropTypes"],[293,38,36,31,"oneOfType"],[293,47,36,21],[293,48,36,41],[293,49,36,42,"PropTypes"],[293,68,36,52,"string"],[293,74,36,41],[293,76,36,60,"PropTypes"],[293,95,36,70,"number"],[293,101,36,41],[293,102,36,21],[293,103,32,24],[294,0,37,10,"show"],[294,8,37,10,"show"],[294,12,37,14],[294,14,37,16,"PropTypes"],[294,33,37,26,"oneOf"],[294,38,37,16],[294,39,37,32],[294,40,37,33],[294,48,37,32],[294,50,37,43],[294,58,37,32],[294,60,37,53],[294,67,37,32],[294,68,37,16],[294,69,32,24],[295,0,38,10,"showWithText"],[295,8,38,10,"showWithText"],[295,20,38,22],[295,22,38,24,"PropTypes"],[295,41,38,34,"bool"],[296,0,32,24],[296,7,32,8],[296,8,31,15],[296,9,27,23],[297,0,41,6,"iconSize"],[297,6,41,6,"iconSize"],[297,14,41,14],[297,16,41,16,"PropTypes"],[297,35,41,26,"number"],[297,41,27,23],[298,0,42,6,"iconColor"],[298,6,42,6,"iconColor"],[298,15,42,15],[298,17,42,17,"PropTypes"],[298,36,42,27,"oneOfType"],[298,45,42,17],[298,46,42,37],[298,47,42,38,"PropTypes"],[298,66,42,48,"string"],[298,72,42,37],[298,74,42,56,"PropTypes"],[298,93,42,66,"number"],[298,99,42,37],[298,100,42,17],[298,101,27,23],[299,0,43,6,"titleColor"],[299,6,43,6,"titleColor"],[299,16,43,16],[299,18,43,18,"PropTypes"],[299,37,43,28,"oneOfType"],[299,46,43,18],[299,47,43,38],[299,48,43,39,"PropTypes"],[299,67,43,49,"string"],[299,73,43,38],[299,75,43,57,"PropTypes"],[299,94,43,67,"number"],[299,100,43,38],[299,101,43,18],[300,0,27,23],[300,5,26,2],[300,14,46,11,"defaultProps"],[300,26,26,2],[300,29,46,26],[301,0,47,6,"iconSize"],[301,6,47,6,"iconSize"],[301,14,47,14],[301,16,47,16],[302,0,46,26],[302,5,26,2],[303,0,145,1]],"functionMap":{"names":["<global>","arePropsEqual","<anonymous>","createToolbarAndroidComponent","IconToolbarAndroid","IconToolbarAndroid#componentDidMount","IconToolbarAndroid#componentDidUpdate","IconToolbarAndroid#updateLogoIconSource","IconToolbarAndroid#updateNavIconSource","IconToolbarAndroid#updateOverflowIconSource","IconToolbarAndroid#updateActionIconSources","map$argument_0","getImageSource.then$argument_0","IconToolbarAndroid#render"],"mappings":"AAA;sBCa,QC;uDFC;eGO;SCI;IC+B;KDK;IEE;KFa;IGE;KHa;IIE;KJa;IKE;KLa;IME;4BCG;mBCM,6BD;SDG;KNG;ISE;KTE;GDC;CHC"}},"type":"js/module"}]}