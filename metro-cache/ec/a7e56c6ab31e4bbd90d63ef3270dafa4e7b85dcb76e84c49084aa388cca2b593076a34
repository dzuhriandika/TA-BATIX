{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/defineProperty","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/inherits","data":{"isAsync":false}},{"name":"./NativeNetworkingAndroid","data":{"isAsync":false}},{"name":"../EventEmitter/NativeEventEmitter","data":{"isAsync":false}},{"name":"./convertRequestBody","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/defineProperty\"));\n\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/createClass\"));\n\n  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n\n  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/getPrototypeOf\"));\n\n  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"@babel/runtime/helpers/inherits\"));\n\n  var _NativeNetworkingAndroid = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"./NativeNetworkingAndroid\"));\n\n  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n  var NativeEventEmitter = _$$_REQUIRE(_dependencyMap[8], \"../EventEmitter/NativeEventEmitter\");\n\n  var convertRequestBody = _$$_REQUIRE(_dependencyMap[9], \"./convertRequestBody\");\n\n  function convertHeadersMapToArray(headers) {\n    var headerArray = [];\n\n    for (var name in headers) {\n      headerArray.push([name, headers[name]]);\n    }\n\n    return headerArray;\n  }\n\n  var _requestId = 1;\n\n  function generateRequestId() {\n    return _requestId++;\n  }\n\n  var RCTNetworking = function (_NativeEventEmitter) {\n    (0, _inherits2.default)(RCTNetworking, _NativeEventEmitter);\n\n    function RCTNetworking() {\n      (0, _classCallCheck2.default)(this, RCTNetworking);\n      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(RCTNetworking).call(this, _NativeNetworkingAndroid.default));\n    }\n\n    (0, _createClass2.default)(RCTNetworking, [{\n      key: \"sendRequest\",\n      value: function sendRequest(method, trackingName, url, headers, data, responseType, incrementalUpdates, timeout, callback, withCredentials) {\n        var body = convertRequestBody(data);\n\n        if (body && body.formData) {\n          body.formData = body.formData.map(function (part) {\n            return _objectSpread({}, part, {\n              headers: convertHeadersMapToArray(part.headers)\n            });\n          });\n        }\n\n        var requestId = generateRequestId();\n\n        _NativeNetworkingAndroid.default.sendRequest(method, url, requestId, convertHeadersMapToArray(headers), _objectSpread({}, body, {\n          trackingName: trackingName\n        }), responseType, incrementalUpdates, timeout, withCredentials);\n\n        callback(requestId);\n      }\n    }, {\n      key: \"abortRequest\",\n      value: function abortRequest(requestId) {\n        _NativeNetworkingAndroid.default.abortRequest(requestId);\n      }\n    }, {\n      key: \"clearCookies\",\n      value: function clearCookies(callback) {\n        _NativeNetworkingAndroid.default.clearCookies(callback);\n      }\n    }]);\n    return RCTNetworking;\n  }(NativeEventEmitter);\n\n  module.exports = new RCTNetworking();\n});","lineCount":88,"map":[[2,0,11,0],[18,0,16,0],[24,0,15,0],[24,6,15,6,"NativeEventEmitter"],[24,24,15,24],[24,27,15,27,"require"],[24,38,15,34],[24,95,15,0],[26,0,17,0],[26,6,17,6,"convertRequestBody"],[26,24,17,24],[26,27,17,27,"require"],[26,38,17,34],[26,81,17,0],[28,0,25,0],[28,11,25,9,"convertHeadersMapToArray"],[28,35,25,0],[28,36,25,34,"headers"],[28,43,25,0],[28,45,25,66],[29,0,26,2],[29,8,26,8,"headerArray"],[29,19,26,19],[29,22,26,22],[29,24,26,2],[31,0,27,2],[31,9,27,7],[31,13,27,13,"name"],[31,17,27,2],[31,21,27,21,"headers"],[31,28,27,2],[31,30,27,30],[32,0,28,4,"headerArray"],[32,6,28,4,"headerArray"],[32,17,28,15],[32,18,28,16,"push"],[32,22,28,4],[32,23,28,21],[32,24,28,22,"name"],[32,28,28,21],[32,30,28,28,"headers"],[32,37,28,35],[32,38,28,36,"name"],[32,42,28,35],[32,43,28,21],[32,44,28,4],[33,0,29,3],[35,0,30,2],[35,11,30,9,"headerArray"],[35,22,30,2],[36,0,31,1],[38,0,33,0],[38,6,33,4,"_requestId"],[38,16,33,14],[38,19,33,17],[38,20,33,0],[40,0,34,0],[40,11,34,9,"generateRequestId"],[40,28,34,0],[40,31,34,37],[41,0,35,2],[41,11,35,9,"_requestId"],[41,21,35,19],[41,23,35,2],[42,0,36,1],[44,6,42,6,"RCTNetworking"],[44,19],[47,0,43,2],[47,29,43,16],[48,0,43,16],[49,0,43,16],[49,116,44,10,"NativeNetworkingAndroid"],[49,148,43,16],[50,0,45,3],[54,34,48,4,"method"],[54,40],[54,42,49,4,"trackingName"],[54,54],[54,56,50,4,"url"],[54,59],[54,61,51,4,"headers"],[54,68],[54,70,52,4,"data"],[54,74],[54,76,53,4,"responseType"],[54,88],[54,90,54,4,"incrementalUpdates"],[54,108],[54,110,55,4,"timeout"],[54,117],[54,119,56,4,"callback"],[54,127],[54,129,57,4,"withCredentials"],[54,144],[54,146,58,4],[55,0,59,4],[55,12,59,10,"body"],[55,16,59,14],[55,19,59,17,"convertRequestBody"],[55,37,59,35],[55,38,59,36,"data"],[55,42,59,35],[55,43,59,4],[57,0,60,4],[57,12,60,8,"body"],[57,16,60,12],[57,20,60,16,"body"],[57,24,60,20],[57,25,60,21,"formData"],[57,33,60,4],[57,35,60,31],[58,0,61,6,"body"],[58,10,61,6,"body"],[58,14,61,10],[58,15,61,11,"formData"],[58,23,61,6],[58,26,61,22,"body"],[58,30,61,26],[58,31,61,27,"formData"],[58,39,61,22],[58,40,61,36,"map"],[58,43,61,22],[58,44,61,40],[58,54,61,40,"part"],[58,58,61,44],[59,0,61,44],[59,37,62,11,"part"],[59,41,61,44],[60,0,63,8,"headers"],[60,14,63,8,"headers"],[60,21,63,15],[60,23,63,17,"convertHeadersMapToArray"],[60,47,63,41],[60,48,63,42,"part"],[60,52,63,46],[60,53,63,47,"headers"],[60,60,63,41],[61,0,61,44],[62,0,61,44],[62,11,61,22],[62,12,61,6],[63,0,65,5],[65,0,66,4],[65,12,66,10,"requestId"],[65,21,66,19],[65,24,66,22,"generateRequestId"],[65,41,66,39],[65,43,66,4],[67,0,67,4,"NativeNetworkingAndroid"],[67,41,67,28,"sendRequest"],[67,52,67,4],[67,53,68,6,"method"],[67,59,67,4],[67,61,69,6,"url"],[67,64,67,4],[67,66,70,6,"requestId"],[67,75,67,4],[67,77,71,6,"convertHeadersMapToArray"],[67,101,71,30],[67,102,71,31,"headers"],[67,109,71,30],[67,110,67,4],[67,130,72,10,"body"],[67,134,67,4],[68,0,72,16,"trackingName"],[68,10,72,16,"trackingName"],[68,22,72,28],[68,24,72,16,"trackingName"],[69,0,67,4],[69,12,73,6,"responseType"],[69,24,67,4],[69,26,74,6,"incrementalUpdates"],[69,44,67,4],[69,46,75,6,"timeout"],[69,53,67,4],[69,55,76,6,"withCredentials"],[69,70,67,4],[71,0,78,4,"callback"],[71,8,78,4,"callback"],[71,16,78,12],[71,17,78,13,"requestId"],[71,26,78,12],[71,27,78,4],[72,0,79,3],[75,35,81,15,"requestId"],[75,44],[75,46,81,34],[76,0,82,4,"NativeNetworkingAndroid"],[76,41,82,28,"abortRequest"],[76,53,82,4],[76,54,82,41,"requestId"],[76,63,82,4],[77,0,83,3],[80,35,85,15,"callback"],[80,43],[80,45,85,51],[81,0,86,4,"NativeNetworkingAndroid"],[81,41,86,28,"clearCookies"],[81,53,86,4],[81,54,86,41,"callback"],[81,62,86,4],[82,0,87,3],[85,4,42,28,"NativeEventEmitter"],[85,22],[87,0,90,0,"module"],[87,2,90,0,"module"],[87,8,90,6],[87,9,90,7,"exports"],[87,16,90,0],[87,19,90,17],[87,23,90,21,"RCTNetworking"],[87,36,90,17],[87,38,90,0]],"functionMap":{"names":["<global>","convertHeadersMapToArray","generateRequestId","RCTNetworking","constructor","sendRequest","body.formData.map$argument_0","abortRequest","clearCookies"],"mappings":"AAA;ACwB;CDM;AEG;CFE;AGM;ECC;GDE;EEE;wCCc;QDG;GFe;EIE;GJE;EKE;GLE;CHC"}},"type":"js/module"}]}