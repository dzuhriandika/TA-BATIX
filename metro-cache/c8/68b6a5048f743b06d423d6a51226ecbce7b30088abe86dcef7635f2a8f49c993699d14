{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireWildcard","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/toConsumableArray","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/objectSpread","data":{"isAsync":false}},{"name":"../utils/invariant","data":{"isAsync":false}},{"name":"./getScreenForRouteName","data":{"isAsync":false}},{"name":"./createConfigGetter","data":{"isAsync":false}},{"name":"../NavigationActions","data":{"isAsync":false}},{"name":"./SwitchActions","data":{"isAsync":false}},{"name":"./validateRouteConfigMap","data":{"isAsync":false}},{"name":"./pathUtils","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireWildcard\");\n\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/toConsumableArray\"));\n\n  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/objectSpread\"));\n\n  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"../utils/invariant\"));\n\n  var _getScreenForRouteName = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"./getScreenForRouteName\"));\n\n  var _createConfigGetter = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"./createConfigGetter\"));\n\n  var NavigationActions = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[7], \"../NavigationActions\"));\n\n  var SwitchActions = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8], \"./SwitchActions\"));\n\n  var _validateRouteConfigMap = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9], \"./validateRouteConfigMap\"));\n\n  var _pathUtils = _$$_REQUIRE(_dependencyMap[10], \"./pathUtils\");\n\n  var defaultActionCreators = function defaultActionCreators() {\n    return {};\n  };\n\n  var _default = function _default(routeConfigs) {\n    var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    (0, _validateRouteConfigMap.default)(routeConfigs);\n    var order = config.order || Object.keys(routeConfigs);\n    var getCustomActionCreators = config.getCustomActionCreators || defaultActionCreators;\n    var initialRouteParams = config.initialRouteParams;\n    var initialRouteName = config.initialRouteName || order[0];\n    var backBehavior = config.backBehavior || 'none';\n    var resetOnBlur = config.hasOwnProperty('resetOnBlur') ? config.resetOnBlur : true;\n    var initialRouteIndex = order.indexOf(initialRouteName);\n\n    if (initialRouteIndex === -1) {\n      throw new Error(\"Invalid initialRouteName '\" + initialRouteName + \"'.\" + (\"Should be one of \" + order.map(function (n) {\n        return \"\\\"\" + n + \"\\\"\";\n      }).join(', ')));\n    }\n\n    var childRouters = {};\n    order.forEach(function (routeName) {\n      childRouters[routeName] = null;\n      var screen = (0, _getScreenForRouteName.default)(routeConfigs, routeName);\n\n      if (screen.router) {\n        childRouters[routeName] = screen.router;\n      }\n    });\n\n    function getParamsForRoute(routeName, params) {\n      var routeConfig = routeConfigs[routeName];\n\n      if (routeConfig && routeConfig.params) {\n        return (0, _objectSpread2.default)({}, routeConfig.params, params);\n      } else {\n        return params;\n      }\n    }\n\n    var _createPathParser = (0, _pathUtils.createPathParser)(childRouters, routeConfigs, config),\n        getPathAndParamsForRoute = _createPathParser.getPathAndParamsForRoute,\n        _getActionForPathAndParams = _createPathParser.getActionForPathAndParams;\n\n    function resetChildRoute(routeName) {\n      var initialParams = routeName === initialRouteName ? initialRouteParams : undefined;\n      var params = getParamsForRoute(routeName, initialParams);\n      var childRouter = childRouters[routeName];\n\n      if (childRouter) {\n        var childAction = NavigationActions.init();\n        return (0, _objectSpread2.default)({}, childRouter.getStateForAction(childAction), {\n          key: routeName,\n          routeName: routeName,\n          params: params\n        });\n      }\n\n      return {\n        key: routeName,\n        routeName: routeName,\n        params: params\n      };\n    }\n\n    function getNextState(action, prevState, possibleNextState) {\n      function updateNextStateHistory(nextState) {\n        if (backBehavior !== 'history') {\n          return nextState;\n        }\n\n        var nextRouteKeyHistory = prevState ? prevState.routeKeyHistory : [];\n\n        if (action.type === NavigationActions.NAVIGATE) {\n          nextRouteKeyHistory = (0, _toConsumableArray2.default)(nextRouteKeyHistory);\n          var keyToAdd = nextState.routes[nextState.index].key;\n          nextRouteKeyHistory = nextRouteKeyHistory.filter(function (k) {\n            return k !== keyToAdd;\n          });\n          nextRouteKeyHistory.push(keyToAdd);\n        } else if (action.type === NavigationActions.BACK) {\n          nextRouteKeyHistory = (0, _toConsumableArray2.default)(nextRouteKeyHistory);\n          nextRouteKeyHistory.pop();\n        }\n\n        return (0, _objectSpread2.default)({}, nextState, {\n          routeKeyHistory: nextRouteKeyHistory\n        });\n      }\n\n      var nextState = possibleNextState;\n\n      if (prevState && prevState.index !== possibleNextState.index && resetOnBlur) {\n        var prevRouteName = prevState.routes[prevState.index].routeName;\n        var nextRoutes = (0, _toConsumableArray2.default)(possibleNextState.routes);\n        nextRoutes[prevState.index] = resetChildRoute(prevRouteName);\n        nextState = (0, _objectSpread2.default)({}, possibleNextState, {\n          routes: nextRoutes\n        });\n      }\n\n      return updateNextStateHistory(nextState);\n    }\n\n    function getInitialState() {\n      var routes = order.map(resetChildRoute);\n      var initialState = {\n        routes: routes,\n        index: initialRouteIndex,\n        isTransitioning: false\n      };\n\n      if (backBehavior === 'history') {\n        var initialKey = routes[initialRouteIndex].key;\n        initialState['routeKeyHistory'] = [initialKey];\n      }\n\n      return initialState;\n    }\n\n    return {\n      childRouters: childRouters,\n      getActionCreators: function getActionCreators(route, stateKey) {\n        return getCustomActionCreators(route, stateKey);\n      },\n      getStateForAction: function getStateForAction(action, inputState) {\n        var prevState = inputState ? (0, _objectSpread2.default)({}, inputState) : inputState;\n        var state = inputState || getInitialState();\n        var activeChildIndex = state.index;\n\n        if (action.type === NavigationActions.INIT) {\n          var params = action.params;\n\n          if (params) {\n            state.routes = state.routes.map(function (route) {\n              return (0, _objectSpread2.default)({}, route, {\n                params: (0, _objectSpread2.default)({}, route.params, params, route.routeName === initialRouteName ? initialRouteParams : null)\n              });\n            });\n          }\n        }\n\n        if (action.type === SwitchActions.JUMP_TO && (action.key == null || action.key === state.key)) {\n          var _params = action.params;\n\n          var _index = state.routes.findIndex(function (route) {\n            return route.routeName === action.routeName;\n          });\n\n          if (_index === -1) {\n            throw new Error(\"There is no route named '\" + action.routeName + \"' in the navigator with the key '\" + action.key + \"'.\\n\" + (\"Must be one of: \" + state.routes.map(function (route) {\n              return \"'\" + route.routeName + \"'\";\n            }).join(',')));\n          }\n\n          return getNextState(action, prevState, (0, _objectSpread2.default)({}, state, {\n            routes: _params ? state.routes.map(function (route, i) {\n              return i === _index ? (0, _objectSpread2.default)({}, route, {\n                params: (0, _objectSpread2.default)({}, route.params, _params)\n              }) : route;\n            }) : state.routes,\n            index: _index\n          }));\n        }\n\n        var activeChildLastState = state.routes[state.index];\n        var activeChildRouter = childRouters[order[state.index]];\n\n        if (activeChildRouter) {\n          var activeChildState = activeChildRouter.getStateForAction(action, activeChildLastState);\n\n          if (!activeChildState && inputState) {\n            return null;\n          }\n\n          if (activeChildState && activeChildState !== activeChildLastState) {\n            var _routes = (0, _toConsumableArray2.default)(state.routes);\n\n            _routes[state.index] = activeChildState;\n            return getNextState(action, prevState, (0, _objectSpread2.default)({}, state, {\n              routes: _routes\n            }));\n          }\n        }\n\n        var isBackEligible = action.key == null || action.key === activeChildLastState.key;\n\n        if (action.type === NavigationActions.BACK) {\n          if (isBackEligible && backBehavior === 'initialRoute') {\n            activeChildIndex = initialRouteIndex;\n          } else if (isBackEligible && backBehavior === 'order') {\n            activeChildIndex = Math.max(0, activeChildIndex - 1);\n          } else if (isBackEligible && backBehavior === 'history' && state.routeKeyHistory.length > 1) {\n            var routeKey = state.routeKeyHistory[state.routeKeyHistory.length - 2];\n            activeChildIndex = order.indexOf(routeKey);\n          } else {\n            return state;\n          }\n        }\n\n        var didNavigate = false;\n\n        if (action.type === NavigationActions.NAVIGATE) {\n          didNavigate = !!order.find(function (childId, i) {\n            if (childId === action.routeName) {\n              activeChildIndex = i;\n              return true;\n            }\n\n            return false;\n          });\n\n          if (didNavigate) {\n            var childState = state.routes[activeChildIndex];\n            var childRouter = childRouters[action.routeName];\n            var newChildState = childState;\n\n            if (action.action && childRouter) {\n              var childStateUpdate = childRouter.getStateForAction(action.action, childState);\n\n              if (childStateUpdate) {\n                newChildState = childStateUpdate;\n              }\n            }\n\n            if (action.params) {\n              newChildState = (0, _objectSpread2.default)({}, newChildState, {\n                params: (0, _objectSpread2.default)({}, newChildState.params || {}, action.params)\n              });\n            }\n\n            if (newChildState !== childState) {\n              var _routes2 = (0, _toConsumableArray2.default)(state.routes);\n\n              _routes2[activeChildIndex] = newChildState;\n              var nextState = (0, _objectSpread2.default)({}, state, {\n                routes: _routes2,\n                index: activeChildIndex\n              });\n              return getNextState(action, prevState, nextState);\n            } else if (newChildState === childState && state.index === activeChildIndex && prevState) {\n              return null;\n            }\n          }\n        }\n\n        if (action.type === NavigationActions.SET_PARAMS) {\n          var key = action.key;\n          var lastRoute = state.routes.find(function (route) {\n            return route.key === key;\n          });\n\n          if (lastRoute) {\n            var _params2 = (0, _objectSpread2.default)({}, lastRoute.params, action.params);\n\n            var _routes3 = (0, _toConsumableArray2.default)(state.routes);\n\n            _routes3[state.routes.indexOf(lastRoute)] = (0, _objectSpread2.default)({}, lastRoute, {\n              params: _params2\n            });\n            return getNextState(action, prevState, (0, _objectSpread2.default)({}, state, {\n              routes: _routes3\n            }));\n          }\n        }\n\n        if (activeChildIndex !== state.index) {\n          return getNextState(action, prevState, (0, _objectSpread2.default)({}, state, {\n            index: activeChildIndex\n          }));\n        } else if (didNavigate && !inputState) {\n          return state;\n        } else if (didNavigate) {\n          return (0, _objectSpread2.default)({}, state);\n        }\n\n        var index = state.index;\n        var routes = state.routes;\n        order.find(function (childId, i) {\n          var childRouter = childRouters[childId];\n\n          if (i === index) {\n            return false;\n          }\n\n          var childState = routes[i];\n\n          if (childRouter) {\n            childState = childRouter.getStateForAction(action, childState);\n          }\n\n          if (!childState) {\n            index = i;\n            return true;\n          }\n\n          if (childState !== routes[i]) {\n            routes = (0, _toConsumableArray2.default)(routes);\n            routes[i] = childState;\n            index = i;\n            return true;\n          }\n\n          return false;\n        });\n\n        if (action.preserveFocus) {\n          index = state.index;\n        }\n\n        if (index !== state.index || routes !== state.routes) {\n          return getNextState(action, prevState, (0, _objectSpread2.default)({}, state, {\n            index: index,\n            routes: routes\n          }));\n        }\n\n        return state;\n      },\n      getComponentForState: function getComponentForState(state) {\n        var routeName = state.routes[state.index].routeName;\n        (0, _invariant.default)(routeName, \"There is no route defined for index \" + state.index + \". Check that\\n        that you passed in a navigation state with a valid tab/screen index.\");\n        var childRouter = childRouters[routeName];\n\n        if (childRouter) {\n          return childRouter.getComponentForState(state.routes[state.index]);\n        }\n\n        return (0, _getScreenForRouteName.default)(routeConfigs, routeName);\n      },\n      getComponentForRouteName: function getComponentForRouteName(routeName) {\n        return (0, _getScreenForRouteName.default)(routeConfigs, routeName);\n      },\n      getPathAndParamsForState: function getPathAndParamsForState(state) {\n        var route = state.routes[state.index];\n        return getPathAndParamsForRoute(route);\n      },\n      getActionForPathAndParams: function getActionForPathAndParams(path, params) {\n        return _getActionForPathAndParams(path, params);\n      },\n      getScreenOptions: (0, _createConfigGetter.default)(routeConfigs, config.defaultNavigationOptions)\n    };\n  };\n\n  exports.default = _default;\n});","lineCount":375,"map":[[11,0,1,0],[13,0,1,73],[15,0,1,136],[17,0,1,178],[19,0,1,237],[21,0,1,290],[23,0,1,345],[25,0,1,391],[27,0,1,452],[29,0,1,494],[29,6,1,498,"defaultActionCreators"],[29,27,1,519],[29,30,1,520],[29,39,1,529,"defaultActionCreators"],[29,60,1,520],[29,63,1,552],[30,0,1,553],[30,11,1,559],[30,13,1,553],[31,0,1,563],[31,3,1,494],[33,17,1,579],[33,35,1,588,"routeConfigs"],[33,47,1,579],[33,49,1,601],[34,0,1,602],[34,8,1,606,"config"],[34,14,1,612],[34,17,1,613,"arguments"],[34,26,1,622],[34,27,1,623,"length"],[34,33,1,613],[34,36,1,630],[34,37,1,613],[34,41,1,633,"arguments"],[34,50,1,642],[34,51,1,643],[34,52,1,642],[34,53,1,633],[34,58,1,648,"undefined"],[34,67,1,613],[34,70,1,658,"arguments"],[34,79,1,667],[34,80,1,668],[34,81,1,667],[34,82,1,613],[34,85,1,671],[34,87,1,602],[35,0,1,674],[35,41,1,697,"routeConfigs"],[35,53,1,674],[36,0,1,711],[36,8,1,715,"order"],[36,13,1,720],[36,16,1,721,"config"],[36,22,1,727],[36,23,1,728,"order"],[36,28,1,721],[36,32,1,735,"Object"],[36,38,1,741],[36,39,1,742,"keys"],[36,43,1,735],[36,44,1,747,"routeConfigs"],[36,56,1,735],[36,57,1,711],[37,0,1,761],[37,8,1,765,"getCustomActionCreators"],[37,31,1,788],[37,34,1,789,"config"],[37,40,1,795],[37,41,1,796,"getCustomActionCreators"],[37,64,1,789],[37,68,1,821,"defaultActionCreators"],[37,89,1,761],[38,0,1,843],[38,8,1,847,"initialRouteParams"],[38,26,1,865],[38,29,1,866,"config"],[38,35,1,872],[38,36,1,873,"initialRouteParams"],[38,54,1,843],[39,0,1,892],[39,8,1,896,"initialRouteName"],[39,24,1,912],[39,27,1,913,"config"],[39,33,1,919],[39,34,1,920,"initialRouteName"],[39,50,1,913],[39,54,1,938,"order"],[39,59,1,943],[39,60,1,944],[39,61,1,943],[39,62,1,892],[40,0,1,947],[40,8,1,951,"backBehavior"],[40,20,1,963],[40,23,1,964,"config"],[40,29,1,970],[40,30,1,971,"backBehavior"],[40,42,1,964],[40,46,1,985],[40,52,1,947],[41,0,1,992],[41,8,1,996,"resetOnBlur"],[41,19,1,1007],[41,22,1,1008,"config"],[41,28,1,1014],[41,29,1,1015,"hasOwnProperty"],[41,43,1,1008],[41,44,1,1030],[41,57,1,1008],[41,61,1,1045,"config"],[41,67,1,1051],[41,68,1,1052,"resetOnBlur"],[41,79,1,1008],[41,82,1,1064],[41,86,1,992],[42,0,1,1069],[42,8,1,1073,"initialRouteIndex"],[42,25,1,1090],[42,28,1,1091,"order"],[42,33,1,1096],[42,34,1,1097,"indexOf"],[42,41,1,1091],[42,42,1,1105,"initialRouteName"],[42,58,1,1091],[42,59,1,1069],[44,0,1,1123],[44,8,1,1126,"initialRouteIndex"],[44,25,1,1143],[44,30,1,1146],[44,31,1,1147],[44,32,1,1123],[44,34,1,1149],[45,0,1,1150],[45,12,1,1156],[45,16,1,1160,"Error"],[45,21,1,1156],[45,22,1,1166],[45,53,1,1195,"initialRouteName"],[45,69,1,1166],[45,72,1,1212],[45,76,1,1166],[45,80,1,1218],[45,102,1,1238,"order"],[45,107,1,1243],[45,108,1,1244,"map"],[45,111,1,1238],[45,112,1,1248],[45,122,1,1257,"n"],[45,123,1,1248],[45,125,1,1259],[46,0,1,1260],[46,15,1,1266],[46,22,1,1271,"n"],[46,23,1,1266],[46,26,1,1273],[46,30,1,1260],[47,0,1,1279],[47,7,1,1238],[47,9,1,1281,"join"],[47,13,1,1238],[47,14,1,1286],[47,18,1,1238],[47,19,1,1166],[47,20,1,1156],[47,21,1,1150],[48,0,1,1295],[50,0,1,1295],[50,8,1,1299,"childRouters"],[50,20,1,1311],[50,23,1,1312],[50,25,1,1295],[51,0,1,1315,"order"],[51,4,1,1315,"order"],[51,9,1,1320],[51,10,1,1321,"forEach"],[51,17,1,1315],[51,18,1,1329],[51,28,1,1338,"routeName"],[51,37,1,1329],[51,39,1,1348],[52,0,1,1349,"childRouters"],[52,6,1,1349,"childRouters"],[52,18,1,1361],[52,19,1,1362,"routeName"],[52,28,1,1361],[52,29,1,1349],[52,32,1,1373],[52,36,1,1349],[53,0,1,1378],[53,10,1,1382,"screen"],[53,16,1,1388],[53,19,1,1389],[53,55,1,1411,"routeConfigs"],[53,67,1,1389],[53,69,1,1424,"routeName"],[53,78,1,1389],[53,79,1,1378],[55,0,1,1435],[55,10,1,1438,"screen"],[55,16,1,1444],[55,17,1,1445,"router"],[55,23,1,1435],[55,25,1,1452],[56,0,1,1453,"childRouters"],[56,8,1,1453,"childRouters"],[56,20,1,1465],[56,21,1,1466,"routeName"],[56,30,1,1465],[56,31,1,1453],[56,34,1,1477,"screen"],[56,40,1,1483],[56,41,1,1484,"router"],[56,47,1,1453],[57,0,1,1492],[58,0,1,1493],[58,5,1,1315],[60,0,1,1495],[60,13,1,1504,"getParamsForRoute"],[60,30,1,1495],[60,31,1,1522,"routeName"],[60,40,1,1495],[60,42,1,1532,"params"],[60,48,1,1495],[60,50,1,1539],[61,0,1,1540],[61,10,1,1544,"routeConfig"],[61,21,1,1555],[61,24,1,1556,"routeConfigs"],[61,36,1,1568],[61,37,1,1569,"routeName"],[61,46,1,1568],[61,47,1,1540],[63,0,1,1580],[63,10,1,1583,"routeConfig"],[63,21,1,1594],[63,25,1,1596,"routeConfig"],[63,36,1,1607],[63,37,1,1608,"params"],[63,43,1,1580],[63,45,1,1615],[64,0,1,1616],[64,15,1,1623],[64,43,1,1637],[64,45,1,1623],[64,47,1,1640,"routeConfig"],[64,58,1,1651],[64,59,1,1652,"params"],[64,65,1,1623],[64,67,1,1659,"params"],[64,73,1,1623],[64,74,1,1616],[65,0,1,1668],[65,7,1,1580],[65,13,1,1672],[66,0,1,1673],[66,15,1,1680,"params"],[66,21,1,1673],[67,0,1,1688],[68,0,1,1689],[70,0,1,1689],[70,8,1,1693,"_createPathParser"],[70,25,1,1710],[70,28,1,1711],[70,61,1,1728,"childRouters"],[70,73,1,1711],[70,75,1,1741,"routeConfigs"],[70,87,1,1711],[70,89,1,1754,"config"],[70,95,1,1711],[70,96,1,1689],[71,0,1,1689],[71,8,1,1762,"getPathAndParamsForRoute"],[71,32,1,1786],[71,35,1,1787,"_createPathParser"],[71,52,1,1804],[71,53,1,1805,"getPathAndParamsForRoute"],[71,77,1,1689],[72,0,1,1689],[72,8,1,1830,"_getActionForPathAndParams"],[72,34,1,1856],[72,37,1,1857,"_createPathParser"],[72,54,1,1874],[72,55,1,1875,"getActionForPathAndParams"],[72,80,1,1689],[74,0,1,1901],[74,13,1,1910,"resetChildRoute"],[74,28,1,1901],[74,29,1,1926,"routeName"],[74,38,1,1901],[74,40,1,1936],[75,0,1,1937],[75,10,1,1941,"initialParams"],[75,23,1,1954],[75,26,1,1955,"routeName"],[75,35,1,1964],[75,40,1,1967,"initialRouteName"],[75,56,1,1955],[75,59,1,1984,"initialRouteParams"],[75,77,1,1955],[75,80,1,2003,"undefined"],[75,89,1,1937],[76,0,1,2013],[76,10,1,2017,"params"],[76,16,1,2023],[76,19,1,2024,"getParamsForRoute"],[76,36,1,2041],[76,37,1,2042,"routeName"],[76,46,1,2041],[76,48,1,2052,"initialParams"],[76,61,1,2041],[76,62,1,2013],[77,0,1,2067],[77,10,1,2071,"childRouter"],[77,21,1,2082],[77,24,1,2083,"childRouters"],[77,36,1,2095],[77,37,1,2096,"routeName"],[77,46,1,2095],[77,47,1,2067],[79,0,1,2107],[79,10,1,2110,"childRouter"],[79,21,1,2107],[79,23,1,2122],[80,0,1,2123],[80,12,1,2127,"childAction"],[80,23,1,2138],[80,26,1,2139,"NavigationActions"],[80,43,1,2156],[80,44,1,2157,"init"],[80,48,1,2139],[80,50,1,2123],[81,0,1,2164],[81,15,1,2171],[81,43,1,2185],[81,45,1,2171],[81,47,1,2188,"childRouter"],[81,58,1,2199],[81,59,1,2200,"getStateForAction"],[81,76,1,2188],[81,77,1,2218,"childAction"],[81,88,1,2188],[81,89,1,2171],[81,91,1,2231],[82,0,1,2232,"key"],[82,10,1,2232,"key"],[82,13,1,2235],[82,15,1,2236,"routeName"],[82,24,1,2231],[83,0,1,2246,"routeName"],[83,10,1,2246,"routeName"],[83,19,1,2255],[83,21,1,2256,"routeName"],[83,30,1,2231],[84,0,1,2266,"params"],[84,10,1,2266,"params"],[84,16,1,2272],[84,18,1,2273,"params"],[85,0,1,2231],[85,9,1,2171],[85,10,1,2164],[86,0,1,2283],[88,0,1,2283],[88,13,1,2289],[89,0,1,2290,"key"],[89,8,1,2290,"key"],[89,11,1,2293],[89,13,1,2294,"routeName"],[89,22,1,2289],[90,0,1,2304,"routeName"],[90,8,1,2304,"routeName"],[90,17,1,2313],[90,19,1,2314,"routeName"],[90,28,1,2289],[91,0,1,2324,"params"],[91,8,1,2324,"params"],[91,14,1,2330],[91,16,1,2331,"params"],[92,0,1,2289],[92,7,1,2283],[93,0,1,2340],[95,0,1,2340],[95,13,1,2349,"getNextState"],[95,25,1,2340],[95,26,1,2362,"action"],[95,32,1,2340],[95,34,1,2369,"prevState"],[95,43,1,2340],[95,45,1,2379,"possibleNextState"],[95,62,1,2340],[95,64,1,2397],[96,0,1,2398],[96,15,1,2407,"updateNextStateHistory"],[96,37,1,2398],[96,38,1,2430,"nextState"],[96,47,1,2398],[96,49,1,2440],[97,0,1,2441],[97,12,1,2444,"backBehavior"],[97,24,1,2456],[97,29,1,2459],[97,38,1,2441],[97,40,1,2469],[98,0,1,2470],[98,17,1,2477,"nextState"],[98,26,1,2470],[99,0,1,2488],[101,0,1,2488],[101,12,1,2492,"nextRouteKeyHistory"],[101,31,1,2511],[101,34,1,2512,"prevState"],[101,43,1,2521],[101,46,1,2522,"prevState"],[101,55,1,2531],[101,56,1,2532,"routeKeyHistory"],[101,71,1,2521],[101,74,1,2548],[101,76,1,2488],[103,0,1,2551],[103,12,1,2554,"action"],[103,18,1,2560],[103,19,1,2561,"type"],[103,23,1,2554],[103,28,1,2568,"NavigationActions"],[103,45,1,2585],[103,46,1,2586,"NAVIGATE"],[103,54,1,2551],[103,56,1,2595],[104,0,1,2596,"nextRouteKeyHistory"],[104,10,1,2596,"nextRouteKeyHistory"],[104,29,1,2615],[104,32,1,2616],[104,65,1,2635,"nextRouteKeyHistory"],[104,84,1,2616],[104,85,1,2596],[105,0,1,2656],[105,14,1,2660,"keyToAdd"],[105,22,1,2668],[105,25,1,2669,"nextState"],[105,34,1,2678],[105,35,1,2679,"routes"],[105,41,1,2669],[105,42,1,2686,"nextState"],[105,51,1,2695],[105,52,1,2696,"index"],[105,57,1,2669],[105,59,1,2703,"key"],[105,62,1,2656],[106,0,1,2707,"nextRouteKeyHistory"],[106,10,1,2707,"nextRouteKeyHistory"],[106,29,1,2726],[106,32,1,2727,"nextRouteKeyHistory"],[106,51,1,2746],[106,52,1,2747,"filter"],[106,58,1,2727],[106,59,1,2754],[106,69,1,2763,"k"],[106,70,1,2754],[106,72,1,2765],[107,0,1,2766],[107,19,1,2773,"k"],[107,20,1,2774],[107,25,1,2777,"keyToAdd"],[107,33,1,2766],[108,0,1,2787],[108,11,1,2727],[108,12,1,2707],[109,0,1,2789,"nextRouteKeyHistory"],[109,10,1,2789,"nextRouteKeyHistory"],[109,29,1,2808],[109,30,1,2809,"push"],[109,34,1,2789],[109,35,1,2814,"keyToAdd"],[109,43,1,2789],[110,0,1,2825],[110,9,1,2551],[110,15,1,2830],[110,19,1,2833,"action"],[110,25,1,2839],[110,26,1,2840,"type"],[110,30,1,2833],[110,35,1,2847,"NavigationActions"],[110,52,1,2864],[110,53,1,2865,"BACK"],[110,57,1,2830],[110,59,1,2870],[111,0,1,2871,"nextRouteKeyHistory"],[111,10,1,2871,"nextRouteKeyHistory"],[111,29,1,2890],[111,32,1,2891],[111,65,1,2910,"nextRouteKeyHistory"],[111,84,1,2891],[111,85,1,2871],[112,0,1,2931,"nextRouteKeyHistory"],[112,10,1,2931,"nextRouteKeyHistory"],[112,29,1,2950],[112,30,1,2951,"pop"],[112,33,1,2931],[113,0,1,2958],[115,0,1,2958],[115,15,1,2965],[115,43,1,2979],[115,45,1,2965],[115,47,1,2982,"nextState"],[115,56,1,2965],[115,58,1,2992],[116,0,1,2993,"routeKeyHistory"],[116,10,1,2993,"routeKeyHistory"],[116,25,1,3008],[116,27,1,3009,"nextRouteKeyHistory"],[117,0,1,2992],[117,9,1,2965],[117,10,1,2958],[118,0,1,3032],[120,0,1,3032],[120,10,1,3036,"nextState"],[120,19,1,3045],[120,22,1,3046,"possibleNextState"],[120,39,1,3032],[122,0,1,3064],[122,10,1,3067,"prevState"],[122,19,1,3076],[122,23,1,3078,"prevState"],[122,32,1,3087],[122,33,1,3088,"index"],[122,38,1,3078],[122,43,1,3096,"possibleNextState"],[122,60,1,3113],[122,61,1,3114,"index"],[122,66,1,3067],[122,70,1,3121,"resetOnBlur"],[122,81,1,3064],[122,83,1,3133],[123,0,1,3134],[123,12,1,3138,"prevRouteName"],[123,25,1,3151],[123,28,1,3152,"prevState"],[123,37,1,3161],[123,38,1,3162,"routes"],[123,44,1,3152],[123,45,1,3169,"prevState"],[123,54,1,3178],[123,55,1,3179,"index"],[123,60,1,3152],[123,62,1,3186,"routeName"],[123,71,1,3134],[124,0,1,3196],[124,12,1,3200,"nextRoutes"],[124,22,1,3210],[124,25,1,3211],[124,58,1,3230,"possibleNextState"],[124,75,1,3247],[124,76,1,3248,"routes"],[124,82,1,3211],[124,83,1,3196],[125,0,1,3256,"nextRoutes"],[125,8,1,3256,"nextRoutes"],[125,18,1,3266],[125,19,1,3267,"prevState"],[125,28,1,3276],[125,29,1,3277,"index"],[125,34,1,3266],[125,35,1,3256],[125,38,1,3284,"resetChildRoute"],[125,53,1,3299],[125,54,1,3300,"prevRouteName"],[125,67,1,3299],[125,68,1,3256],[126,0,1,3315,"nextState"],[126,8,1,3315,"nextState"],[126,17,1,3324],[126,20,1,3325],[126,48,1,3339],[126,50,1,3325],[126,52,1,3342,"possibleNextState"],[126,69,1,3325],[126,71,1,3360],[127,0,1,3361,"routes"],[127,10,1,3361,"routes"],[127,16,1,3367],[127,18,1,3368,"nextRoutes"],[128,0,1,3360],[128,9,1,3325],[128,10,1,3315],[129,0,1,3382],[131,0,1,3382],[131,13,1,3389,"updateNextStateHistory"],[131,35,1,3411],[131,36,1,3412,"nextState"],[131,45,1,3411],[131,46,1,3382],[132,0,1,3424],[134,0,1,3424],[134,13,1,3433,"getInitialState"],[134,28,1,3424],[134,31,1,3450],[135,0,1,3451],[135,10,1,3455,"routes"],[135,16,1,3461],[135,19,1,3462,"order"],[135,24,1,3467],[135,25,1,3468,"map"],[135,28,1,3462],[135,29,1,3472,"resetChildRoute"],[135,44,1,3462],[135,45,1,3451],[136,0,1,3489],[136,10,1,3493,"initialState"],[136,22,1,3505],[136,25,1,3506],[137,0,1,3507,"routes"],[137,8,1,3507,"routes"],[137,14,1,3513],[137,16,1,3514,"routes"],[137,22,1,3506],[138,0,1,3521,"index"],[138,8,1,3521,"index"],[138,13,1,3526],[138,15,1,3527,"initialRouteIndex"],[138,32,1,3506],[139,0,1,3545,"isTransitioning"],[139,8,1,3545,"isTransitioning"],[139,23,1,3560],[139,25,1,3561],[140,0,1,3506],[140,7,1,3489],[142,0,1,3568],[142,10,1,3571,"backBehavior"],[142,22,1,3583],[142,27,1,3586],[142,36,1,3568],[142,38,1,3596],[143,0,1,3597],[143,12,1,3601,"initialKey"],[143,22,1,3611],[143,25,1,3612,"routes"],[143,31,1,3618],[143,32,1,3619,"initialRouteIndex"],[143,49,1,3618],[143,50,1,3612],[143,51,1,3638,"key"],[143,54,1,3597],[144,0,1,3642,"initialState"],[144,8,1,3642,"initialState"],[144,20,1,3654],[144,21,1,3655],[144,38,1,3654],[144,39,1,3642],[144,42,1,3674],[144,43,1,3675,"initialKey"],[144,53,1,3674],[144,54,1,3642],[145,0,1,3688],[147,0,1,3688],[147,13,1,3695,"initialState"],[147,25,1,3688],[148,0,1,3709],[150,0,1,3709],[150,11,1,3715],[151,0,1,3716,"childRouters"],[151,6,1,3716,"childRouters"],[151,18,1,3728],[151,20,1,3729,"childRouters"],[151,32,1,3715],[152,0,1,3742,"getActionCreators"],[152,6,1,3742,"getActionCreators"],[152,23,1,3759],[152,25,1,3760],[152,34,1,3769,"getActionCreators"],[152,51,1,3760],[152,52,1,3787,"route"],[152,57,1,3760],[152,59,1,3793,"stateKey"],[152,67,1,3760],[152,69,1,3802],[153,0,1,3803],[153,15,1,3810,"getCustomActionCreators"],[153,38,1,3833],[153,39,1,3834,"route"],[153,44,1,3833],[153,46,1,3840,"stateKey"],[153,54,1,3833],[153,55,1,3803],[154,0,1,3851],[154,7,1,3715],[155,0,1,3852,"getStateForAction"],[155,6,1,3852,"getStateForAction"],[155,23,1,3869],[155,25,1,3870],[155,34,1,3879,"getStateForAction"],[155,51,1,3870],[155,52,1,3897,"action"],[155,58,1,3870],[155,60,1,3904,"inputState"],[155,70,1,3870],[155,72,1,3915],[156,0,1,3916],[156,12,1,3920,"prevState"],[156,21,1,3929],[156,24,1,3930,"inputState"],[156,34,1,3940],[156,37,1,3941],[156,65,1,3955],[156,67,1,3941],[156,69,1,3958,"inputState"],[156,79,1,3941],[156,80,1,3940],[156,83,1,3970,"inputState"],[156,93,1,3916],[157,0,1,3981],[157,12,1,3985,"state"],[157,17,1,3990],[157,20,1,3991,"inputState"],[157,30,1,4001],[157,34,1,4003,"getInitialState"],[157,49,1,4018],[157,51,1,3981],[158,0,1,4021],[158,12,1,4025,"activeChildIndex"],[158,28,1,4041],[158,31,1,4042,"state"],[158,36,1,4047],[158,37,1,4048,"index"],[158,42,1,4021],[160,0,1,4054],[160,12,1,4057,"action"],[160,18,1,4063],[160,19,1,4064,"type"],[160,23,1,4057],[160,28,1,4071,"NavigationActions"],[160,45,1,4088],[160,46,1,4089,"INIT"],[160,50,1,4054],[160,52,1,4094],[161,0,1,4095],[161,14,1,4099,"params"],[161,20,1,4105],[161,23,1,4106,"action"],[161,29,1,4112],[161,30,1,4113,"params"],[161,36,1,4095],[163,0,1,4120],[163,14,1,4123,"params"],[163,20,1,4120],[163,22,1,4130],[164,0,1,4131,"state"],[164,12,1,4131,"state"],[164,17,1,4136],[164,18,1,4137,"routes"],[164,24,1,4131],[164,27,1,4144,"state"],[164,32,1,4149],[164,33,1,4150,"routes"],[164,39,1,4144],[164,40,1,4157,"map"],[164,43,1,4144],[164,44,1,4161],[164,54,1,4170,"route"],[164,59,1,4161],[164,61,1,4176],[165,0,1,4177],[165,21,1,4184],[165,49,1,4198],[165,51,1,4184],[165,53,1,4201,"route"],[165,58,1,4184],[165,60,1,4207],[166,0,1,4208,"params"],[166,16,1,4208,"params"],[166,22,1,4214],[166,24,1,4215],[166,52,1,4229],[166,54,1,4215],[166,56,1,4232,"route"],[166,61,1,4237],[166,62,1,4238,"params"],[166,68,1,4215],[166,70,1,4245,"params"],[166,76,1,4215],[166,78,1,4252,"route"],[166,83,1,4257],[166,84,1,4258,"routeName"],[166,93,1,4252],[166,98,1,4270,"initialRouteName"],[166,114,1,4252],[166,117,1,4287,"initialRouteParams"],[166,135,1,4252],[166,138,1,4306],[166,142,1,4215],[167,0,1,4207],[167,15,1,4184],[167,16,1,4177],[168,0,1,4315],[168,13,1,4144],[168,14,1,4131],[169,0,1,4318],[170,0,1,4319],[172,0,1,4319],[172,12,1,4322,"action"],[172,18,1,4328],[172,19,1,4329,"type"],[172,23,1,4322],[172,28,1,4336,"SwitchActions"],[172,41,1,4349],[172,42,1,4350,"JUMP_TO"],[172,49,1,4322],[172,54,1,4360,"action"],[172,60,1,4366],[172,61,1,4367,"key"],[172,64,1,4360],[172,68,1,4372],[172,72,1,4360],[172,76,1,4378,"action"],[172,82,1,4384],[172,83,1,4385,"key"],[172,86,1,4378],[172,91,1,4391,"state"],[172,96,1,4396],[172,97,1,4397,"key"],[172,100,1,4322],[172,101,1,4319],[172,103,1,4402],[173,0,1,4403],[173,14,1,4407,"_params"],[173,21,1,4414],[173,24,1,4415,"action"],[173,30,1,4421],[173,31,1,4422,"params"],[173,37,1,4403],[175,0,1,4429],[175,14,1,4433,"_index"],[175,20,1,4439],[175,23,1,4440,"state"],[175,28,1,4445],[175,29,1,4446,"routes"],[175,35,1,4440],[175,36,1,4453,"findIndex"],[175,45,1,4440],[175,46,1,4463],[175,56,1,4472,"route"],[175,61,1,4463],[175,63,1,4478],[176,0,1,4479],[176,19,1,4486,"route"],[176,24,1,4491],[176,25,1,4492,"routeName"],[176,34,1,4486],[176,39,1,4504,"action"],[176,45,1,4510],[176,46,1,4511,"routeName"],[176,55,1,4479],[177,0,1,4522],[177,11,1,4440],[177,12,1,4429],[179,0,1,4524],[179,14,1,4527,"_index"],[179,20,1,4533],[179,25,1,4536],[179,26,1,4537],[179,27,1,4524],[179,29,1,4539],[180,0,1,4540],[180,18,1,4546],[180,22,1,4550,"Error"],[180,27,1,4546],[180,28,1,4556],[180,58,1,4584,"action"],[180,64,1,4590],[180,65,1,4591,"routeName"],[180,74,1,4556],[180,77,1,4601],[180,112,1,4556],[180,115,1,4637,"action"],[180,121,1,4643],[180,122,1,4644,"key"],[180,125,1,4556],[180,128,1,4648],[180,134,1,4556],[180,138,1,4656],[180,159,1,4675,"state"],[180,164,1,4680],[180,165,1,4681,"routes"],[180,171,1,4675],[180,172,1,4688,"map"],[180,175,1,4675],[180,176,1,4692],[180,186,1,4701,"route"],[180,191,1,4692],[180,193,1,4707],[181,0,1,4708],[181,21,1,4714],[181,27,1,4718,"route"],[181,32,1,4723],[181,33,1,4724,"routeName"],[181,42,1,4714],[181,45,1,4734],[181,48,1,4708],[182,0,1,4739],[182,13,1,4675],[182,15,1,4741,"join"],[182,19,1,4675],[182,20,1,4746],[182,23,1,4675],[182,24,1,4556],[182,25,1,4546],[182,26,1,4540],[183,0,1,4754],[185,0,1,4754],[185,17,1,4761,"getNextState"],[185,29,1,4773],[185,30,1,4774,"action"],[185,36,1,4773],[185,38,1,4781,"prevState"],[185,47,1,4773],[185,49,1,4791],[185,77,1,4805],[185,79,1,4791],[185,81,1,4808,"state"],[185,86,1,4791],[185,88,1,4814],[186,0,1,4815,"routes"],[186,12,1,4815,"routes"],[186,18,1,4821],[186,20,1,4822,"_params"],[186,27,1,4829],[186,30,1,4830,"state"],[186,35,1,4835],[186,36,1,4836,"routes"],[186,42,1,4830],[186,43,1,4843,"map"],[186,46,1,4830],[186,47,1,4847],[186,57,1,4856,"route"],[186,62,1,4847],[186,64,1,4862,"i"],[186,65,1,4847],[186,67,1,4864],[187,0,1,4865],[187,21,1,4872,"i"],[187,22,1,4873],[187,27,1,4876,"_index"],[187,33,1,4872],[187,36,1,4883],[187,64,1,4897],[187,66,1,4883],[187,68,1,4900,"route"],[187,73,1,4883],[187,75,1,4906],[188,0,1,4907,"params"],[188,16,1,4907,"params"],[188,22,1,4913],[188,24,1,4914],[188,52,1,4928],[188,54,1,4914],[188,56,1,4931,"route"],[188,61,1,4936],[188,62,1,4937,"params"],[188,68,1,4914],[188,70,1,4944,"_params"],[188,77,1,4914],[189,0,1,4906],[189,15,1,4883],[189,16,1,4872],[189,19,1,4955,"route"],[189,24,1,4865],[190,0,1,4962],[190,13,1,4830],[190,14,1,4829],[190,17,1,4964,"state"],[190,22,1,4969],[190,23,1,4970,"routes"],[190,29,1,4814],[191,0,1,4977,"index"],[191,12,1,4977,"index"],[191,17,1,4982],[191,19,1,4983,"_index"],[192,0,1,4814],[192,11,1,4791],[192,12,1,4773],[192,13,1,4754],[193,0,1,4994],[195,0,1,4994],[195,12,1,4998,"activeChildLastState"],[195,32,1,5018],[195,35,1,5019,"state"],[195,40,1,5024],[195,41,1,5025,"routes"],[195,47,1,5019],[195,48,1,5032,"state"],[195,53,1,5037],[195,54,1,5038,"index"],[195,59,1,5019],[195,60,1,4994],[196,0,1,5045],[196,12,1,5049,"activeChildRouter"],[196,29,1,5066],[196,32,1,5067,"childRouters"],[196,44,1,5079],[196,45,1,5080,"order"],[196,50,1,5085],[196,51,1,5086,"state"],[196,56,1,5091],[196,57,1,5092,"index"],[196,62,1,5085],[196,63,1,5079],[196,64,1,5045],[198,0,1,5100],[198,12,1,5103,"activeChildRouter"],[198,29,1,5100],[198,31,1,5121],[199,0,1,5122],[199,14,1,5126,"activeChildState"],[199,30,1,5142],[199,33,1,5143,"activeChildRouter"],[199,50,1,5160],[199,51,1,5161,"getStateForAction"],[199,68,1,5143],[199,69,1,5179,"action"],[199,75,1,5143],[199,77,1,5186,"activeChildLastState"],[199,97,1,5143],[199,98,1,5122],[201,0,1,5208],[201,14,1,5211],[201,15,1,5212,"activeChildState"],[201,31,1,5211],[201,35,1,5230,"inputState"],[201,45,1,5208],[201,47,1,5241],[202,0,1,5242],[202,19,1,5249],[202,23,1,5242],[203,0,1,5255],[205,0,1,5255],[205,14,1,5258,"activeChildState"],[205,30,1,5274],[205,34,1,5276,"activeChildState"],[205,50,1,5292],[205,55,1,5295,"activeChildLastState"],[205,75,1,5255],[205,77,1,5316],[206,0,1,5317],[206,16,1,5321,"_routes"],[206,23,1,5328],[206,26,1,5329],[206,59,1,5348,"state"],[206,64,1,5353],[206,65,1,5354,"routes"],[206,71,1,5329],[206,72,1,5317],[208,0,1,5362,"_routes"],[208,12,1,5362,"_routes"],[208,19,1,5369],[208,20,1,5370,"state"],[208,25,1,5375],[208,26,1,5376,"index"],[208,31,1,5369],[208,32,1,5362],[208,35,1,5383,"activeChildState"],[208,51,1,5362],[209,0,1,5400],[209,19,1,5407,"getNextState"],[209,31,1,5419],[209,32,1,5420,"action"],[209,38,1,5419],[209,40,1,5427,"prevState"],[209,49,1,5419],[209,51,1,5437],[209,79,1,5451],[209,81,1,5437],[209,83,1,5454,"state"],[209,88,1,5437],[209,90,1,5460],[210,0,1,5461,"routes"],[210,14,1,5461,"routes"],[210,20,1,5467],[210,22,1,5468,"_routes"],[211,0,1,5460],[211,13,1,5437],[211,14,1,5419],[211,15,1,5400],[212,0,1,5480],[213,0,1,5481],[215,0,1,5481],[215,12,1,5485,"isBackEligible"],[215,26,1,5499],[215,29,1,5500,"action"],[215,35,1,5506],[215,36,1,5507,"key"],[215,39,1,5500],[215,43,1,5512],[215,47,1,5500],[215,51,1,5518,"action"],[215,57,1,5524],[215,58,1,5525,"key"],[215,61,1,5518],[215,66,1,5531,"activeChildLastState"],[215,86,1,5551],[215,87,1,5552,"key"],[215,90,1,5481],[217,0,1,5556],[217,12,1,5559,"action"],[217,18,1,5565],[217,19,1,5566,"type"],[217,23,1,5559],[217,28,1,5573,"NavigationActions"],[217,45,1,5590],[217,46,1,5591,"BACK"],[217,50,1,5556],[217,52,1,5596],[218,0,1,5597],[218,14,1,5600,"isBackEligible"],[218,28,1,5614],[218,32,1,5616,"backBehavior"],[218,44,1,5628],[218,49,1,5631],[218,63,1,5597],[218,65,1,5646],[219,0,1,5647,"activeChildIndex"],[219,12,1,5647,"activeChildIndex"],[219,28,1,5663],[219,31,1,5664,"initialRouteIndex"],[219,48,1,5647],[220,0,1,5683],[220,11,1,5597],[220,17,1,5688],[220,21,1,5691,"isBackEligible"],[220,35,1,5705],[220,39,1,5707,"backBehavior"],[220,51,1,5719],[220,56,1,5722],[220,63,1,5688],[220,65,1,5730],[221,0,1,5731,"activeChildIndex"],[221,12,1,5731,"activeChildIndex"],[221,28,1,5747],[221,31,1,5748,"Math"],[221,35,1,5752],[221,36,1,5753,"max"],[221,39,1,5748],[221,40,1,5757],[221,41,1,5748],[221,43,1,5759,"activeChildIndex"],[221,59,1,5775],[221,62,1,5776],[221,63,1,5748],[221,64,1,5731],[222,0,1,5780],[222,11,1,5688],[222,17,1,5785],[222,21,1,5788,"isBackEligible"],[222,35,1,5802],[222,39,1,5804,"backBehavior"],[222,51,1,5816],[222,56,1,5819],[222,65,1,5788],[222,69,1,5830,"state"],[222,74,1,5835],[222,75,1,5836,"routeKeyHistory"],[222,90,1,5830],[222,91,1,5852,"length"],[222,97,1,5830],[222,100,1,5859],[222,101,1,5785],[222,103,1,5861],[223,0,1,5862],[223,16,1,5866,"routeKey"],[223,24,1,5874],[223,27,1,5875,"state"],[223,32,1,5880],[223,33,1,5881,"routeKeyHistory"],[223,48,1,5875],[223,49,1,5897,"state"],[223,54,1,5902],[223,55,1,5903,"routeKeyHistory"],[223,70,1,5897],[223,71,1,5919,"length"],[223,77,1,5897],[223,80,1,5926],[223,81,1,5875],[223,82,1,5862],[224,0,1,5929,"activeChildIndex"],[224,12,1,5929,"activeChildIndex"],[224,28,1,5945],[224,31,1,5946,"order"],[224,36,1,5951],[224,37,1,5952,"indexOf"],[224,44,1,5946],[224,45,1,5960,"routeKey"],[224,53,1,5946],[224,54,1,5929],[225,0,1,5971],[225,11,1,5785],[225,17,1,5975],[226,0,1,5976],[226,19,1,5983,"state"],[226,24,1,5976],[227,0,1,5990],[228,0,1,5991],[230,0,1,5991],[230,12,1,5995,"didNavigate"],[230,23,1,6006],[230,26,1,6007],[230,31,1,5991],[232,0,1,6013],[232,12,1,6016,"action"],[232,18,1,6022],[232,19,1,6023,"type"],[232,23,1,6016],[232,28,1,6030,"NavigationActions"],[232,45,1,6047],[232,46,1,6048,"NAVIGATE"],[232,54,1,6013],[232,56,1,6057],[233,0,1,6058,"didNavigate"],[233,10,1,6058,"didNavigate"],[233,21,1,6069],[233,24,1,6070],[233,25,1,6071],[233,26,1,6072,"order"],[233,31,1,6077],[233,32,1,6078,"find"],[233,36,1,6072],[233,37,1,6083],[233,47,1,6092,"childId"],[233,54,1,6083],[233,56,1,6100,"i"],[233,57,1,6083],[233,59,1,6102],[234,0,1,6103],[234,16,1,6106,"childId"],[234,23,1,6113],[234,28,1,6116,"action"],[234,34,1,6122],[234,35,1,6123,"routeName"],[234,44,1,6103],[234,46,1,6133],[235,0,1,6134,"activeChildIndex"],[235,14,1,6134,"activeChildIndex"],[235,30,1,6150],[235,33,1,6151,"i"],[235,34,1,6134],[236,0,1,6153],[236,21,1,6160],[236,25,1,6153],[237,0,1,6166],[239,0,1,6166],[239,19,1,6173],[239,24,1,6166],[240,0,1,6180],[240,11,1,6072],[240,12,1,6058],[242,0,1,6182],[242,14,1,6185,"didNavigate"],[242,25,1,6182],[242,27,1,6197],[243,0,1,6198],[243,16,1,6202,"childState"],[243,26,1,6212],[243,29,1,6213,"state"],[243,34,1,6218],[243,35,1,6219,"routes"],[243,41,1,6213],[243,42,1,6226,"activeChildIndex"],[243,58,1,6213],[243,59,1,6198],[244,0,1,6244],[244,16,1,6248,"childRouter"],[244,27,1,6259],[244,30,1,6260,"childRouters"],[244,42,1,6272],[244,43,1,6273,"action"],[244,49,1,6279],[244,50,1,6280,"routeName"],[244,59,1,6272],[244,60,1,6244],[245,0,1,6291],[245,16,1,6295,"newChildState"],[245,29,1,6308],[245,32,1,6309,"childState"],[245,42,1,6291],[247,0,1,6320],[247,16,1,6323,"action"],[247,22,1,6329],[247,23,1,6330,"action"],[247,29,1,6323],[247,33,1,6338,"childRouter"],[247,44,1,6320],[247,46,1,6350],[248,0,1,6351],[248,18,1,6355,"childStateUpdate"],[248,34,1,6371],[248,37,1,6372,"childRouter"],[248,48,1,6383],[248,49,1,6384,"getStateForAction"],[248,66,1,6372],[248,67,1,6402,"action"],[248,73,1,6408],[248,74,1,6409,"action"],[248,80,1,6372],[248,82,1,6416,"childState"],[248,92,1,6372],[248,93,1,6351],[250,0,1,6428],[250,18,1,6431,"childStateUpdate"],[250,34,1,6428],[250,36,1,6448],[251,0,1,6449,"newChildState"],[251,16,1,6449,"newChildState"],[251,29,1,6462],[251,32,1,6463,"childStateUpdate"],[251,48,1,6449],[252,0,1,6481],[253,0,1,6482],[255,0,1,6482],[255,16,1,6485,"action"],[255,22,1,6491],[255,23,1,6492,"params"],[255,29,1,6482],[255,31,1,6499],[256,0,1,6500,"newChildState"],[256,14,1,6500,"newChildState"],[256,27,1,6513],[256,30,1,6514],[256,58,1,6528],[256,60,1,6514],[256,62,1,6531,"newChildState"],[256,75,1,6514],[256,77,1,6545],[257,0,1,6546,"params"],[257,16,1,6546,"params"],[257,22,1,6552],[257,24,1,6553],[257,52,1,6567],[257,54,1,6553],[257,56,1,6570,"newChildState"],[257,69,1,6583],[257,70,1,6584,"params"],[257,76,1,6570],[257,80,1,6592],[257,82,1,6553],[257,84,1,6595,"action"],[257,90,1,6601],[257,91,1,6602,"params"],[257,97,1,6553],[258,0,1,6545],[258,15,1,6514],[258,16,1,6500],[259,0,1,6613],[261,0,1,6613],[261,16,1,6616,"newChildState"],[261,29,1,6629],[261,34,1,6632,"childState"],[261,44,1,6613],[261,46,1,6643],[262,0,1,6644],[262,18,1,6648,"_routes2"],[262,26,1,6656],[262,29,1,6657],[262,62,1,6676,"state"],[262,67,1,6681],[262,68,1,6682,"routes"],[262,74,1,6657],[262,75,1,6644],[264,0,1,6690,"_routes2"],[264,14,1,6690,"_routes2"],[264,22,1,6698],[264,23,1,6699,"activeChildIndex"],[264,39,1,6698],[264,40,1,6690],[264,43,1,6717,"newChildState"],[264,56,1,6690],[265,0,1,6731],[265,18,1,6735,"nextState"],[265,27,1,6744],[265,30,1,6745],[265,58,1,6759],[265,60,1,6745],[265,62,1,6762,"state"],[265,67,1,6745],[265,69,1,6768],[266,0,1,6769,"routes"],[266,16,1,6769,"routes"],[266,22,1,6775],[266,24,1,6776,"_routes2"],[266,32,1,6768],[267,0,1,6785,"index"],[267,16,1,6785,"index"],[267,21,1,6790],[267,23,1,6791,"activeChildIndex"],[268,0,1,6768],[268,15,1,6745],[268,16,1,6731],[269,0,1,6810],[269,21,1,6817,"getNextState"],[269,33,1,6829],[269,34,1,6830,"action"],[269,40,1,6829],[269,42,1,6837,"prevState"],[269,51,1,6829],[269,53,1,6847,"nextState"],[269,62,1,6829],[269,63,1,6810],[270,0,1,6859],[270,13,1,6613],[270,19,1,6864],[270,23,1,6867,"newChildState"],[270,36,1,6880],[270,41,1,6883,"childState"],[270,51,1,6867],[270,55,1,6895,"state"],[270,60,1,6900],[270,61,1,6901,"index"],[270,66,1,6895],[270,71,1,6909,"activeChildIndex"],[270,87,1,6867],[270,91,1,6927,"prevState"],[270,100,1,6864],[270,102,1,6937],[271,0,1,6938],[271,21,1,6945],[271,25,1,6938],[272,0,1,6951],[273,0,1,6952],[274,0,1,6953],[276,0,1,6953],[276,12,1,6956,"action"],[276,18,1,6962],[276,19,1,6963,"type"],[276,23,1,6956],[276,28,1,6970,"NavigationActions"],[276,45,1,6987],[276,46,1,6988,"SET_PARAMS"],[276,56,1,6953],[276,58,1,6999],[277,0,1,7000],[277,14,1,7004,"key"],[277,17,1,7007],[277,20,1,7008,"action"],[277,26,1,7014],[277,27,1,7015,"key"],[277,30,1,7000],[278,0,1,7019],[278,14,1,7023,"lastRoute"],[278,23,1,7032],[278,26,1,7033,"state"],[278,31,1,7038],[278,32,1,7039,"routes"],[278,38,1,7033],[278,39,1,7046,"find"],[278,43,1,7033],[278,44,1,7051],[278,54,1,7060,"route"],[278,59,1,7051],[278,61,1,7066],[279,0,1,7067],[279,19,1,7074,"route"],[279,24,1,7079],[279,25,1,7080,"key"],[279,28,1,7074],[279,33,1,7086,"key"],[279,36,1,7067],[280,0,1,7091],[280,11,1,7033],[280,12,1,7019],[282,0,1,7093],[282,14,1,7096,"lastRoute"],[282,23,1,7093],[282,25,1,7106],[283,0,1,7107],[283,16,1,7111,"_params2"],[283,24,1,7119],[283,27,1,7120],[283,55,1,7134],[283,57,1,7120],[283,59,1,7137,"lastRoute"],[283,68,1,7146],[283,69,1,7147,"params"],[283,75,1,7120],[283,77,1,7154,"action"],[283,83,1,7160],[283,84,1,7161,"params"],[283,90,1,7120],[283,91,1,7107],[285,0,1,7169],[285,16,1,7173,"_routes3"],[285,24,1,7181],[285,27,1,7182],[285,60,1,7201,"state"],[285,65,1,7206],[285,66,1,7207,"routes"],[285,72,1,7182],[285,73,1,7169],[287,0,1,7215,"_routes3"],[287,12,1,7215,"_routes3"],[287,20,1,7223],[287,21,1,7224,"state"],[287,26,1,7229],[287,27,1,7230,"routes"],[287,33,1,7224],[287,34,1,7237,"indexOf"],[287,41,1,7224],[287,42,1,7245,"lastRoute"],[287,51,1,7224],[287,52,1,7223],[287,53,1,7215],[287,56,1,7257],[287,84,1,7271],[287,86,1,7257],[287,88,1,7274,"lastRoute"],[287,97,1,7257],[287,99,1,7284],[288,0,1,7285,"params"],[288,14,1,7285,"params"],[288,20,1,7291],[288,22,1,7292,"_params2"],[289,0,1,7284],[289,13,1,7257],[289,14,1,7215],[290,0,1,7303],[290,19,1,7310,"getNextState"],[290,31,1,7322],[290,32,1,7323,"action"],[290,38,1,7322],[290,40,1,7330,"prevState"],[290,49,1,7322],[290,51,1,7340],[290,79,1,7354],[290,81,1,7340],[290,83,1,7357,"state"],[290,88,1,7340],[290,90,1,7363],[291,0,1,7364,"routes"],[291,14,1,7364,"routes"],[291,20,1,7370],[291,22,1,7371,"_routes3"],[292,0,1,7363],[292,13,1,7340],[292,14,1,7322],[292,15,1,7303],[293,0,1,7384],[294,0,1,7385],[296,0,1,7385],[296,12,1,7388,"activeChildIndex"],[296,28,1,7404],[296,33,1,7407,"state"],[296,38,1,7412],[296,39,1,7413,"index"],[296,44,1,7385],[296,46,1,7419],[297,0,1,7420],[297,17,1,7427,"getNextState"],[297,29,1,7439],[297,30,1,7440,"action"],[297,36,1,7439],[297,38,1,7447,"prevState"],[297,47,1,7439],[297,49,1,7457],[297,77,1,7471],[297,79,1,7457],[297,81,1,7474,"state"],[297,86,1,7457],[297,88,1,7480],[298,0,1,7481,"index"],[298,12,1,7481,"index"],[298,17,1,7486],[298,19,1,7487,"activeChildIndex"],[299,0,1,7480],[299,11,1,7457],[299,12,1,7439],[299,13,1,7420],[300,0,1,7508],[300,9,1,7385],[300,15,1,7513],[300,19,1,7516,"didNavigate"],[300,30,1,7527],[300,34,1,7529],[300,35,1,7530,"inputState"],[300,45,1,7513],[300,47,1,7541],[301,0,1,7542],[301,17,1,7549,"state"],[301,22,1,7542],[302,0,1,7556],[302,9,1,7513],[302,15,1,7561],[302,19,1,7564,"didNavigate"],[302,30,1,7561],[302,32,1,7576],[303,0,1,7577],[303,17,1,7584],[303,45,1,7598],[303,47,1,7584],[303,49,1,7601,"state"],[303,54,1,7584],[303,55,1,7577],[304,0,1,7609],[306,0,1,7609],[306,12,1,7613,"index"],[306,17,1,7618],[306,20,1,7619,"state"],[306,25,1,7624],[306,26,1,7625,"index"],[306,31,1,7609],[307,0,1,7631],[307,12,1,7635,"routes"],[307,18,1,7641],[307,21,1,7642,"state"],[307,26,1,7647],[307,27,1,7648,"routes"],[307,33,1,7631],[308,0,1,7655,"order"],[308,8,1,7655,"order"],[308,13,1,7660],[308,14,1,7661,"find"],[308,18,1,7655],[308,19,1,7666],[308,29,1,7675,"childId"],[308,36,1,7666],[308,38,1,7683,"i"],[308,39,1,7666],[308,41,1,7685],[309,0,1,7686],[309,14,1,7690,"childRouter"],[309,25,1,7701],[309,28,1,7702,"childRouters"],[309,40,1,7714],[309,41,1,7715,"childId"],[309,48,1,7714],[309,49,1,7686],[311,0,1,7724],[311,14,1,7727,"i"],[311,15,1,7728],[311,20,1,7731,"index"],[311,25,1,7724],[311,27,1,7737],[312,0,1,7738],[312,19,1,7745],[312,24,1,7738],[313,0,1,7752],[315,0,1,7752],[315,14,1,7756,"childState"],[315,24,1,7766],[315,27,1,7767,"routes"],[315,33,1,7773],[315,34,1,7774,"i"],[315,35,1,7773],[315,36,1,7752],[317,0,1,7777],[317,14,1,7780,"childRouter"],[317,25,1,7777],[317,27,1,7792],[318,0,1,7793,"childState"],[318,12,1,7793,"childState"],[318,22,1,7803],[318,25,1,7804,"childRouter"],[318,36,1,7815],[318,37,1,7816,"getStateForAction"],[318,54,1,7804],[318,55,1,7834,"action"],[318,61,1,7804],[318,63,1,7841,"childState"],[318,73,1,7804],[318,74,1,7793],[319,0,1,7854],[321,0,1,7854],[321,14,1,7857],[321,15,1,7858,"childState"],[321,25,1,7854],[321,27,1,7869],[322,0,1,7870,"index"],[322,12,1,7870,"index"],[322,17,1,7875],[322,20,1,7876,"i"],[322,21,1,7870],[323,0,1,7878],[323,19,1,7885],[323,23,1,7878],[324,0,1,7891],[326,0,1,7891],[326,14,1,7894,"childState"],[326,24,1,7904],[326,29,1,7907,"routes"],[326,35,1,7913],[326,36,1,7914,"i"],[326,37,1,7913],[326,38,1,7891],[326,40,1,7917],[327,0,1,7918,"routes"],[327,12,1,7918,"routes"],[327,18,1,7924],[327,21,1,7925],[327,54,1,7944,"routes"],[327,60,1,7925],[327,61,1,7918],[328,0,1,7952,"routes"],[328,12,1,7952,"routes"],[328,18,1,7958],[328,19,1,7959,"i"],[328,20,1,7958],[328,21,1,7952],[328,24,1,7962,"childState"],[328,34,1,7952],[329,0,1,7973,"index"],[329,12,1,7973,"index"],[329,17,1,7978],[329,20,1,7979,"i"],[329,21,1,7973],[330,0,1,7981],[330,19,1,7988],[330,23,1,7981],[331,0,1,7994],[333,0,1,7994],[333,17,1,8001],[333,22,1,7994],[334,0,1,8008],[334,9,1,7655],[336,0,1,8010],[336,12,1,8013,"action"],[336,18,1,8019],[336,19,1,8020,"preserveFocus"],[336,32,1,8010],[336,34,1,8034],[337,0,1,8035,"index"],[337,10,1,8035,"index"],[337,15,1,8040],[337,18,1,8041,"state"],[337,23,1,8046],[337,24,1,8047,"index"],[337,29,1,8035],[338,0,1,8054],[340,0,1,8054],[340,12,1,8057,"index"],[340,17,1,8062],[340,22,1,8065,"state"],[340,27,1,8070],[340,28,1,8071,"index"],[340,33,1,8057],[340,37,1,8078,"routes"],[340,43,1,8084],[340,48,1,8087,"state"],[340,53,1,8092],[340,54,1,8093,"routes"],[340,60,1,8054],[340,62,1,8100],[341,0,1,8101],[341,17,1,8108,"getNextState"],[341,29,1,8120],[341,30,1,8121,"action"],[341,36,1,8120],[341,38,1,8128,"prevState"],[341,47,1,8120],[341,49,1,8138],[341,77,1,8152],[341,79,1,8138],[341,81,1,8155,"state"],[341,86,1,8138],[341,88,1,8161],[342,0,1,8162,"index"],[342,12,1,8162,"index"],[342,17,1,8167],[342,19,1,8168,"index"],[342,24,1,8161],[343,0,1,8174,"routes"],[343,12,1,8174,"routes"],[343,18,1,8180],[343,20,1,8181,"routes"],[344,0,1,8161],[344,11,1,8138],[344,12,1,8120],[344,13,1,8101],[345,0,1,8192],[347,0,1,8192],[347,15,1,8199,"state"],[347,20,1,8192],[348,0,1,8206],[348,7,1,3715],[349,0,1,8207,"getComponentForState"],[349,6,1,8207,"getComponentForState"],[349,26,1,8227],[349,28,1,8228],[349,37,1,8237,"getComponentForState"],[349,57,1,8228],[349,58,1,8258,"state"],[349,63,1,8228],[349,65,1,8264],[350,0,1,8265],[350,12,1,8269,"routeName"],[350,21,1,8278],[350,24,1,8279,"state"],[350,29,1,8284],[350,30,1,8285,"routes"],[350,36,1,8279],[350,37,1,8292,"state"],[350,42,1,8297],[350,43,1,8298,"index"],[350,48,1,8279],[350,50,1,8305,"routeName"],[350,59,1,8265],[351,0,1,8315],[351,32,1,8325,"routeName"],[351,41,1,8315],[351,43,1,8335],[351,84,1,8374,"state"],[351,89,1,8379],[351,90,1,8380,"index"],[351,95,1,8335],[351,98,1,8386],[351,190,1,8315],[352,0,1,8480],[352,12,1,8484,"childRouter"],[352,23,1,8495],[352,26,1,8496,"childRouters"],[352,38,1,8508],[352,39,1,8509,"routeName"],[352,48,1,8508],[352,49,1,8480],[354,0,1,8520],[354,12,1,8523,"childRouter"],[354,23,1,8520],[354,25,1,8535],[355,0,1,8536],[355,17,1,8543,"childRouter"],[355,28,1,8554],[355,29,1,8555,"getComponentForState"],[355,49,1,8543],[355,50,1,8576,"state"],[355,55,1,8581],[355,56,1,8582,"routes"],[355,62,1,8576],[355,63,1,8589,"state"],[355,68,1,8594],[355,69,1,8595,"index"],[355,74,1,8576],[355,75,1,8543],[355,76,1,8536],[356,0,1,8604],[358,0,1,8604],[358,15,1,8611],[358,51,1,8633,"routeConfigs"],[358,63,1,8611],[358,65,1,8646,"routeName"],[358,74,1,8611],[358,75,1,8604],[359,0,1,8658],[359,7,1,3715],[360,0,1,8659,"getComponentForRouteName"],[360,6,1,8659,"getComponentForRouteName"],[360,30,1,8683],[360,32,1,8684],[360,41,1,8693,"getComponentForRouteName"],[360,65,1,8684],[360,66,1,8718,"routeName"],[360,75,1,8684],[360,77,1,8728],[361,0,1,8729],[361,15,1,8736],[361,51,1,8758,"routeConfigs"],[361,63,1,8736],[361,65,1,8771,"routeName"],[361,74,1,8736],[361,75,1,8729],[362,0,1,8783],[362,7,1,3715],[363,0,1,8784,"getPathAndParamsForState"],[363,6,1,8784,"getPathAndParamsForState"],[363,30,1,8808],[363,32,1,8809],[363,41,1,8818,"getPathAndParamsForState"],[363,65,1,8809],[363,66,1,8843,"state"],[363,71,1,8809],[363,73,1,8849],[364,0,1,8850],[364,12,1,8854,"route"],[364,17,1,8859],[364,20,1,8860,"state"],[364,25,1,8865],[364,26,1,8866,"routes"],[364,32,1,8860],[364,33,1,8873,"state"],[364,38,1,8878],[364,39,1,8879,"index"],[364,44,1,8860],[364,45,1,8850],[365,0,1,8886],[365,15,1,8893,"getPathAndParamsForRoute"],[365,39,1,8917],[365,40,1,8918,"route"],[365,45,1,8917],[365,46,1,8886],[366,0,1,8926],[366,7,1,3715],[367,0,1,8927,"getActionForPathAndParams"],[367,6,1,8927,"getActionForPathAndParams"],[367,31,1,8952],[367,33,1,8953],[367,42,1,8962,"getActionForPathAndParams"],[367,67,1,8953],[367,68,1,8988,"path"],[367,72,1,8953],[367,74,1,8993,"params"],[367,80,1,8953],[367,82,1,9000],[368,0,1,9001],[368,15,1,9008,"_getActionForPathAndParams"],[368,41,1,9034],[368,42,1,9035,"path"],[368,46,1,9034],[368,48,1,9040,"params"],[368,54,1,9034],[368,55,1,9001],[369,0,1,9049],[369,7,1,3715],[370,0,1,9050,"getScreenOptions"],[370,6,1,9050,"getScreenOptions"],[370,22,1,9066],[370,24,1,9067],[370,57,1,9086,"routeConfigs"],[370,69,1,9067],[370,71,1,9099,"config"],[370,77,1,9105],[370,78,1,9106,"defaultNavigationOptions"],[370,102,1,9067],[371,0,1,3715],[371,5,1,3709],[372,0,1,9134],[372,3]],"functionMap":{"names":["<global>","defaultActionCreators","<anonymous>","order.map$argument_0","order.forEach$argument_0","getParamsForRoute","resetChildRoute","getNextState","updateNextStateHistory","nextRouteKeyHistory.filter$argument_0","getInitialState","getActionCreators","getStateForAction","state.routes.map$argument_0","state.routes.findIndex$argument_0","order.find$argument_0","state.routes.find$argument_0","getComponentForState","getComponentForRouteName","getPathAndParamsForState","getActionForPathAndParams"],"mappings":"AAA,wgBC,2CD,gBE,6pBC,+BD,kDE,oKF,EG,kMH,oNI,ubC,0DC,oWC,iCD,qPD,wYG,6RR,mDS,2FT,mBU,mSC,0JD,oJE,2DF,0KC,+CD,4GC,mHD,imCG,iGH,u2BI,wCJ,+jBG,sVH,sMV,sBe,8af,0BgB,mGhB,0BiB,qHjB,2BkB,gGlB,qFF"}},"type":"js/module"}]}