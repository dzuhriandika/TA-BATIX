{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/defineProperty","data":{"isAsync":false}},{"name":"@babel/runtime/regenerator","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"../NativeModules/specs/NativeDialogManagerAndroid","data":{"isAsync":false}},{"name":"./NativePermissionsAndroid","data":{"isAsync":false}},{"name":"invariant","data":{"isAsync":false}},{"name":"../Utilities/Platform","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/defineProperty\"));\n\n  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/regenerator\"));\n\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/createClass\"));\n\n  var _NativeDialogManagerAndroid = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"../NativeModules/specs/NativeDialogManagerAndroid\"));\n\n  var _NativePermissionsAndroid = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"./NativePermissionsAndroid\"));\n\n  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"invariant\"));\n\n  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n  var Platform = _$$_REQUIRE(_dependencyMap[8], \"../Utilities/Platform\");\n\n  var PERMISSION_REQUEST_RESULT = Object.freeze({\n    GRANTED: 'granted',\n    DENIED: 'denied',\n    NEVER_ASK_AGAIN: 'never_ask_again'\n  });\n  var PERMISSIONS = Object.freeze({\n    READ_CALENDAR: 'android.permission.READ_CALENDAR',\n    WRITE_CALENDAR: 'android.permission.WRITE_CALENDAR',\n    CAMERA: 'android.permission.CAMERA',\n    READ_CONTACTS: 'android.permission.READ_CONTACTS',\n    WRITE_CONTACTS: 'android.permission.WRITE_CONTACTS',\n    GET_ACCOUNTS: 'android.permission.GET_ACCOUNTS',\n    ACCESS_FINE_LOCATION: 'android.permission.ACCESS_FINE_LOCATION',\n    ACCESS_COARSE_LOCATION: 'android.permission.ACCESS_COARSE_LOCATION',\n    RECORD_AUDIO: 'android.permission.RECORD_AUDIO',\n    READ_PHONE_STATE: 'android.permission.READ_PHONE_STATE',\n    CALL_PHONE: 'android.permission.CALL_PHONE',\n    READ_CALL_LOG: 'android.permission.READ_CALL_LOG',\n    WRITE_CALL_LOG: 'android.permission.WRITE_CALL_LOG',\n    ADD_VOICEMAIL: 'com.android.voicemail.permission.ADD_VOICEMAIL',\n    USE_SIP: 'android.permission.USE_SIP',\n    PROCESS_OUTGOING_CALLS: 'android.permission.PROCESS_OUTGOING_CALLS',\n    BODY_SENSORS: 'android.permission.BODY_SENSORS',\n    SEND_SMS: 'android.permission.SEND_SMS',\n    RECEIVE_SMS: 'android.permission.RECEIVE_SMS',\n    READ_SMS: 'android.permission.READ_SMS',\n    RECEIVE_WAP_PUSH: 'android.permission.RECEIVE_WAP_PUSH',\n    RECEIVE_MMS: 'android.permission.RECEIVE_MMS',\n    READ_EXTERNAL_STORAGE: 'android.permission.READ_EXTERNAL_STORAGE',\n    WRITE_EXTERNAL_STORAGE: 'android.permission.WRITE_EXTERNAL_STORAGE'\n  });\n\n  var PermissionsAndroid = function () {\n    function PermissionsAndroid() {\n      (0, _classCallCheck2.default)(this, PermissionsAndroid);\n      this.PERMISSIONS = PERMISSIONS;\n      this.RESULTS = PERMISSION_REQUEST_RESULT;\n    }\n\n    (0, _createClass2.default)(PermissionsAndroid, [{\n      key: \"checkPermission\",\n      value: function checkPermission(permission) {\n        console.warn('\"PermissionsAndroid.checkPermission\" is deprecated. Use \"PermissionsAndroid.check\" instead');\n\n        if (\"android\" !== 'android') {\n          console.warn('\"PermissionsAndroid\" module works only for Android platform.');\n          return Promise.resolve(false);\n        }\n\n        (0, _invariant.default)(_NativePermissionsAndroid.default, 'PermissionsAndroid is not installed correctly.');\n        return _NativePermissionsAndroid.default.checkPermission(permission);\n      }\n    }, {\n      key: \"check\",\n      value: function check(permission) {\n        if (\"android\" !== 'android') {\n          console.warn('\"PermissionsAndroid\" module works only for Android platform.');\n          return Promise.resolve(false);\n        }\n\n        (0, _invariant.default)(_NativePermissionsAndroid.default, 'PermissionsAndroid is not installed correctly.');\n        return _NativePermissionsAndroid.default.checkPermission(permission);\n      }\n    }, {\n      key: \"requestPermission\",\n      value: function requestPermission(permission, rationale) {\n        var response;\n        return _regenerator.default.async(function requestPermission$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                console.warn('\"PermissionsAndroid.requestPermission\" is deprecated. Use \"PermissionsAndroid.request\" instead');\n\n                if (!(\"android\" !== 'android')) {\n                  _context.next = 4;\n                  break;\n                }\n\n                console.warn('\"PermissionsAndroid\" module works only for Android platform.');\n                return _context.abrupt(\"return\", Promise.resolve(false));\n\n              case 4:\n                _context.next = 6;\n                return _regenerator.default.awrap(this.request(permission, rationale));\n\n              case 6:\n                response = _context.sent;\n                return _context.abrupt(\"return\", response === this.RESULTS.GRANTED);\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, null, this);\n      }\n    }, {\n      key: \"request\",\n      value: function request(permission, rationale) {\n        var shouldShowRationale;\n        return _regenerator.default.async(function request$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!(\"android\" !== 'android')) {\n                  _context2.next = 3;\n                  break;\n                }\n\n                console.warn('\"PermissionsAndroid\" module works only for Android platform.');\n                return _context2.abrupt(\"return\", Promise.resolve(this.RESULTS.DENIED));\n\n              case 3:\n                (0, _invariant.default)(_NativePermissionsAndroid.default, 'PermissionsAndroid is not installed correctly.');\n\n                if (!rationale) {\n                  _context2.next = 10;\n                  break;\n                }\n\n                _context2.next = 7;\n                return _regenerator.default.awrap(_NativePermissionsAndroid.default.shouldShowRequestPermissionRationale(permission));\n\n              case 7:\n                shouldShowRationale = _context2.sent;\n\n                if (!(shouldShowRationale && !!_NativeDialogManagerAndroid.default)) {\n                  _context2.next = 10;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\", new Promise(function (resolve, reject) {\n                  var options = _objectSpread({}, rationale);\n\n                  _NativeDialogManagerAndroid.default.showAlert(options, function () {\n                    return reject(new Error('Error showing rationale'));\n                  }, function () {\n                    return resolve(_NativePermissionsAndroid.default.requestPermission(permission));\n                  });\n                }));\n\n              case 10:\n                return _context2.abrupt(\"return\", _NativePermissionsAndroid.default.requestPermission(permission));\n\n              case 11:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, null, this);\n      }\n    }, {\n      key: \"requestMultiple\",\n      value: function requestMultiple(permissions) {\n        if (\"android\" !== 'android') {\n          console.warn('\"PermissionsAndroid\" module works only for Android platform.');\n          return Promise.resolve({});\n        }\n\n        (0, _invariant.default)(_NativePermissionsAndroid.default, 'PermissionsAndroid is not installed correctly.');\n        return _NativePermissionsAndroid.default.requestMultiplePermissions(permissions);\n      }\n    }]);\n    return PermissionsAndroid;\n  }();\n\n  PermissionsAndroid = new PermissionsAndroid();\n  module.exports = PermissionsAndroid;\n});","lineCount":194,"map":[[2,0,11,0],[14,0,15,0],[16,0,16,0],[18,0,21,0],[24,0,13,0],[24,6,13,6,"Platform"],[24,14,13,14],[24,17,13,17,"require"],[24,28,13,24],[24,72,13,0],[26,0,31,0],[26,6,31,6,"PERMISSION_REQUEST_RESULT"],[26,31,31,31],[26,34,31,34,"Object"],[26,40,31,40],[26,41,31,41,"freeze"],[26,47,31,34],[26,48,31,48],[27,0,32,2,"GRANTED"],[27,4,32,2,"GRANTED"],[27,11,32,9],[27,13,32,11],[27,22,31,48],[28,0,33,2,"DENIED"],[28,4,33,2,"DENIED"],[28,10,33,8],[28,12,33,10],[28,20,31,48],[29,0,34,2,"NEVER_ASK_AGAIN"],[29,4,34,2,"NEVER_ASK_AGAIN"],[29,19,34,17],[29,21,34,19],[30,0,31,48],[30,3,31,34],[30,4,31,0],[31,0,37,0],[31,6,37,6,"PERMISSIONS"],[31,17,37,17],[31,20,37,20,"Object"],[31,26,37,26],[31,27,37,27,"freeze"],[31,33,37,20],[31,34,37,34],[32,0,38,2,"READ_CALENDAR"],[32,4,38,2,"READ_CALENDAR"],[32,17,38,15],[32,19,38,17],[32,53,37,34],[33,0,39,2,"WRITE_CALENDAR"],[33,4,39,2,"WRITE_CALENDAR"],[33,18,39,16],[33,20,39,18],[33,55,37,34],[34,0,40,2,"CAMERA"],[34,4,40,2,"CAMERA"],[34,10,40,8],[34,12,40,10],[34,39,37,34],[35,0,41,2,"READ_CONTACTS"],[35,4,41,2,"READ_CONTACTS"],[35,17,41,15],[35,19,41,17],[35,53,37,34],[36,0,42,2,"WRITE_CONTACTS"],[36,4,42,2,"WRITE_CONTACTS"],[36,18,42,16],[36,20,42,18],[36,55,37,34],[37,0,43,2,"GET_ACCOUNTS"],[37,4,43,2,"GET_ACCOUNTS"],[37,16,43,14],[37,18,43,16],[37,51,37,34],[38,0,44,2,"ACCESS_FINE_LOCATION"],[38,4,44,2,"ACCESS_FINE_LOCATION"],[38,24,44,22],[38,26,44,24],[38,67,37,34],[39,0,45,2,"ACCESS_COARSE_LOCATION"],[39,4,45,2,"ACCESS_COARSE_LOCATION"],[39,26,45,24],[39,28,45,26],[39,71,37,34],[40,0,46,2,"RECORD_AUDIO"],[40,4,46,2,"RECORD_AUDIO"],[40,16,46,14],[40,18,46,16],[40,51,37,34],[41,0,47,2,"READ_PHONE_STATE"],[41,4,47,2,"READ_PHONE_STATE"],[41,20,47,18],[41,22,47,20],[41,59,37,34],[42,0,48,2,"CALL_PHONE"],[42,4,48,2,"CALL_PHONE"],[42,14,48,12],[42,16,48,14],[42,47,37,34],[43,0,49,2,"READ_CALL_LOG"],[43,4,49,2,"READ_CALL_LOG"],[43,17,49,15],[43,19,49,17],[43,53,37,34],[44,0,50,2,"WRITE_CALL_LOG"],[44,4,50,2,"WRITE_CALL_LOG"],[44,18,50,16],[44,20,50,18],[44,55,37,34],[45,0,51,2,"ADD_VOICEMAIL"],[45,4,51,2,"ADD_VOICEMAIL"],[45,17,51,15],[45,19,51,17],[45,67,37,34],[46,0,52,2,"USE_SIP"],[46,4,52,2,"USE_SIP"],[46,11,52,9],[46,13,52,11],[46,41,37,34],[47,0,53,2,"PROCESS_OUTGOING_CALLS"],[47,4,53,2,"PROCESS_OUTGOING_CALLS"],[47,26,53,24],[47,28,53,26],[47,71,37,34],[48,0,54,2,"BODY_SENSORS"],[48,4,54,2,"BODY_SENSORS"],[48,16,54,14],[48,18,54,16],[48,51,37,34],[49,0,55,2,"SEND_SMS"],[49,4,55,2,"SEND_SMS"],[49,12,55,10],[49,14,55,12],[49,43,37,34],[50,0,56,2,"RECEIVE_SMS"],[50,4,56,2,"RECEIVE_SMS"],[50,15,56,13],[50,17,56,15],[50,49,37,34],[51,0,57,2,"READ_SMS"],[51,4,57,2,"READ_SMS"],[51,12,57,10],[51,14,57,12],[51,43,37,34],[52,0,58,2,"RECEIVE_WAP_PUSH"],[52,4,58,2,"RECEIVE_WAP_PUSH"],[52,20,58,18],[52,22,58,20],[52,59,37,34],[53,0,59,2,"RECEIVE_MMS"],[53,4,59,2,"RECEIVE_MMS"],[53,15,59,13],[53,17,59,15],[53,49,37,34],[54,0,60,2,"READ_EXTERNAL_STORAGE"],[54,4,60,2,"READ_EXTERNAL_STORAGE"],[54,25,60,23],[54,27,60,25],[54,69,37,34],[55,0,61,2,"WRITE_EXTERNAL_STORAGE"],[55,4,61,2,"WRITE_EXTERNAL_STORAGE"],[55,26,61,24],[55,28,61,26],[56,0,37,34],[56,3,37,20],[56,4,37,0],[58,6,70,6,"PermissionsAndroid"],[58,24],[61,11,71,2,"PERMISSIONS"],[61,22],[61,25,96,7,"PERMISSIONS"],[61,36],[62,11,97,2,"RESULTS"],[62,18],[62,21,101,7,"PERMISSION_REQUEST_RESULT"],[62,46],[67,38,111,18,"permission"],[67,48],[67,50,111,64],[68,0,112,4,"console"],[68,8,112,4,"console"],[68,15,112,11],[68,16,112,12,"warn"],[68,20,112,4],[68,21,113,6],[68,113,112,4],[70,0,115,4],[70,12,115,8],[70,26,115,24],[70,35,115,4],[70,37,115,35],[71,0,116,6,"console"],[71,10,116,6,"console"],[71,17,116,13],[71,18,116,14,"warn"],[71,22,116,6],[71,23,117,8],[71,85,116,6],[72,0,119,6],[72,17,119,13,"Promise"],[72,24,119,20],[72,25,119,21,"resolve"],[72,32,119,13],[72,33,119,29],[72,38,119,13],[72,39,119,6],[73,0,120,5],[75,0,122,4],[75,32,123,6,"NativePermissionsAndroid"],[75,65,122,4],[75,67,124,6],[75,115,122,4],[76,0,127,4],[76,15,127,11,"NativePermissionsAndroid"],[76,49,127,36,"checkPermission"],[76,64,127,11],[76,65,127,52,"permission"],[76,75,127,11],[76,76,127,4],[77,0,128,3],[80,28,136,8,"permission"],[80,38],[80,40,136,54],[81,0,137,4],[81,12,137,8],[81,26,137,24],[81,35,137,4],[81,37,137,35],[82,0,138,6,"console"],[82,10,138,6,"console"],[82,17,138,13],[82,18,138,14,"warn"],[82,22,138,6],[82,23,139,8],[82,85,138,6],[83,0,141,6],[83,17,141,13,"Promise"],[83,24,141,20],[83,25,141,21,"resolve"],[83,32,141,13],[83,33,141,29],[83,38,141,13],[83,39,141,6],[84,0,142,5],[86,0,144,4],[86,32,145,6,"NativePermissionsAndroid"],[86,65,144,4],[86,67,146,6],[86,115,144,4],[87,0,149,4],[87,15,149,11,"NativePermissionsAndroid"],[87,49,149,36,"checkPermission"],[87,64,149,11],[87,65,149,52,"permission"],[87,75,149,11],[87,76,149,4],[88,0,150,3],[91,40,167,4,"permission"],[91,50],[91,52,168,4,"rationale"],[91,61],[97,0,170,4,"console"],[97,16,170,4,"console"],[97,23,170,11],[97,24,170,12,"warn"],[97,28,170,4],[97,29,171,6],[97,125,170,4],[99,22,173,8],[99,36,173,24],[99,45],[104,0,174,6,"console"],[104,16,174,6,"console"],[104,23,174,13],[104,24,174,14,"warn"],[104,28,174,6],[104,29,175,8],[104,91,174,6],[105,49,177,13,"Promise"],[105,56,177,20],[105,57,177,21,"resolve"],[105,64,177,13],[105,65,177,29],[105,70,177,13],[105,71],[109,50,180,27],[109,55,180,32,"request"],[109,62,180,27],[109,63,180,40,"permission"],[109,73,180,27],[109,75,180,52,"rationale"],[109,84,180,27],[109,85],[112,0,180,10,"response"],[112,16,180,10,"response"],[112,24],[113,49,181,11,"response"],[113,57,181,19],[113,62,181,24],[113,67,181,29,"RESULTS"],[113,74,181,24],[113,75,181,37,"GRANTED"],[113,82],[124,30,191,4,"permission"],[124,40],[124,42,192,4,"rationale"],[124,51],[130,22,194,8],[130,36,194,24],[130,45],[135,0,195,6,"console"],[135,16,195,6,"console"],[135,23,195,13],[135,24,195,14,"warn"],[135,28,195,6],[135,29,196,8],[135,91,195,6],[136,50,198,13,"Promise"],[136,57,198,20],[136,58,198,21,"resolve"],[136,65,198,13],[136,66,198,29],[136,71,198,34,"RESULTS"],[136,78,198,29],[136,79,198,42,"DENIED"],[136,85,198,13],[136,86],[139,0,201,4],[139,40,202,6,"NativePermissionsAndroid"],[139,73,201,4],[139,75,203,6],[139,123,201,4],[141,21,206,8,"rationale"],[141,30],[147,50,207,40,"NativePermissionsAndroid"],[147,84,207,65,"shouldShowRequestPermissionRationale"],[147,120,207,40],[147,121,208,8,"permission"],[147,131,207,40],[147,132],[150,0,207,12,"shouldShowRationale"],[150,16,207,12,"shouldShowRationale"],[150,35],[152,22,211,10,"shouldShowRationale"],[152,41,211,29],[152,45,211,33],[152,46,211,34],[152,47,211,35,"NativeDialogManagerAndroid"],[152,82],[157,50,212,15],[157,54,212,19,"Promise"],[157,61,212,15],[157,62,212,27],[157,72,212,28,"resolve"],[157,79,212,27],[157,81,212,37,"reject"],[157,87,212,27],[157,89,212,48],[158,0,213,10],[158,22,213,16,"options"],[158,29,213,23],[158,50,214,15,"rationale"],[158,59,213,23],[158,60,213,10],[160,0,216,10,"NativeDialogManagerAndroid"],[160,54,216,37,"showAlert"],[160,63,216,10],[160,64,217,12,"options"],[160,71,216,10],[160,73,218,12],[161,0,218,12],[161,27,218,18,"reject"],[161,33,218,24],[161,34,218,25],[161,38,218,29,"Error"],[161,43,218,25],[161,44,218,35],[161,69,218,25],[161,70,218,24],[161,71,218,12],[162,0,218,12],[162,19,216,10],[162,21,219,12],[163,0,219,12],[163,27,220,14,"resolve"],[163,34,220,21],[163,35,220,22,"NativePermissionsAndroid"],[163,69,220,47,"requestPermission"],[163,86,220,22],[163,87,220,65,"permission"],[163,97,220,22],[163,98,220,21],[163,99,219,12],[164,0,219,12],[164,19,216,10],[165,0,222,9],[165,17,212,15],[165,18],[168,50,225,11,"NativePermissionsAndroid"],[168,84,225,36,"requestPermission"],[168,101,225,11],[168,102,225,54,"permission"],[168,112,225,11],[168,113],[179,38,236,4,"permissions"],[179,49],[179,51,237,63],[180,0,238,4],[180,12,238,8],[180,26,238,24],[180,35,238,4],[180,37,238,35],[181,0,239,6,"console"],[181,10,239,6,"console"],[181,17,239,13],[181,18,239,14,"warn"],[181,22,239,6],[181,23,240,8],[181,85,239,6],[182,0,242,6],[182,17,242,13,"Promise"],[182,24,242,20],[182,25,242,21,"resolve"],[182,32,242,13],[182,33,242,29],[182,35,242,13],[182,36,242,6],[183,0,243,5],[185,0,245,4],[185,32,246,6,"NativePermissionsAndroid"],[185,65,245,4],[185,67,247,6],[185,115,245,4],[186,0,250,4],[186,15,250,11,"NativePermissionsAndroid"],[186,49,250,36,"requestMultiplePermissions"],[186,75,250,11],[186,76,250,63,"permissions"],[186,87,250,11],[186,88,250,4],[187,0,251,3],[192,0,254,0,"PermissionsAndroid"],[192,2,254,0,"PermissionsAndroid"],[192,20,254,18],[192,23,254,21],[192,27,254,25,"PermissionsAndroid"],[192,45,254,21],[192,47,254,0],[193,0,256,0,"module"],[193,2,256,0,"module"],[193,8,256,6],[193,9,256,7,"exports"],[193,16,256,0],[193,19,256,17,"PermissionsAndroid"],[193,37,256,0]],"functionMap":{"names":["<global>","PermissionsAndroid","checkPermission","check","requestPermission","request","Promise$argument_0","NativeDialogManagerAndroid.showAlert$argument_1","NativeDialogManagerAndroid.showAlert$argument_2","requestMultiple"],"mappings":"AAA;ACqE;ECyC;GDiB;EEQ;GFc;EGgB;GHgB;EIQ;2BCsB;YCM,kDD;YEC;6EFC;SDE;GJI;EQS;GRgB;CDC"}},"type":"js/module"}]}